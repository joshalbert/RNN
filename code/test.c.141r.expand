
;; Function W_init (W_init)

W_init ()
{
  unsigned int i;
  const char * restrict D.49998;
  long unsigned int D.49997;
  long unsigned int D.49996;
  long unsigned int D.49995;
  unsigned int network_size.79;
  long unsigned int D.49993;
  unsigned int D.78;
  double * W.77;
  int debug.76;
  unsigned int D.49987;
  unsigned int network_size.75;
  unsigned int D.74;
  double D.49984;
  double D.49983;
  int D.49982;
  double * D.49981;
  long unsigned int D.49980;
  long unsigned int D.49979;
  double * W.73;
  double * W.72;
  void * D.49976;
  long unsigned int D.49975;
  long unsigned int D.49974;
  long unsigned int D.49973;
  unsigned int network_size.71;
  long unsigned int D.49971;
  unsigned int D.70;
  int debug.69;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  debug.69_2 = debug;
  if (debug.69_2 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  __builtin_puts (&"Initializing W randomly"[0]);
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (false) 3 (fallthru)
  D.70_3 = D;
  D.49971_4 = (long unsigned int) D.70_3;
  network_size.71_5 = network_size;
  D.49973_6 = (long unsigned int) network_size.71_5;
  D.49974_7 = D.49971_4 * D.49973_6;
  D.49975_8 = D.49974_7 * 8;
  D.49976_9 = malloc (D.49975_8);
  W.72_10 = (double *) D.49976_9;
  W = W.72_10;
  i_11 = 0;
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 6 (true)
  W.73_15 = W;
  D.49979_16 = (long unsigned int) i_1;
  D.49980_17 = D.49979_16 * 8;
  D.49981_18 = W.73_15 + D.49980_17;
  D.49982_19 = rand ();
  D.49983_20 = (double) D.49982_19;
  D.49984_21 = D.49983_20 / 2.147483647e+9;
  *D.49981_18 = D.49984_21;
  i_22 = i_1 + 1;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  # i_1 = PHI <i_11(4), i_22(5)>
  D.74_12 = D;
  network_size.75_13 = network_size;
  D.49987_14 = D.74_12 * network_size.75_13;
  if (D.49987_14 > i_1)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 (true) 7 (false)

  # BLOCK 7
  # PRED: 6 (false)
  debug.76_23 = debug;
  if (debug.76_23 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 (true) 9 (false)

  # BLOCK 8
  # PRED: 7 (true)
  W.77_24 = W;
  D.78_25 = D;
  D.49993_26 = (long unsigned int) D.78_25;
  network_size.79_27 = network_size;
  D.49995_28 = (long unsigned int) network_size.79_27;
  D.49996_29 = D.49993_26 * D.49995_28;
  D.49997_30 = D.49996_29 * 8;
  D.49998_31 = (const char * restrict) &"%ld: W initialized:\n\t\t\t%ld @%p\n"[0];
  printf (D.49998_31, clock, D.49997_30, W.77_24);
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 7 (false) 8 (fallthru)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (debug.69_2 - 2 )
Partition 3 (D.70_3 - 3 )
Partition 4 (D.49971_4 - 4 )
Partition 5 (network_size.71_5 - 5 )
Partition 6 (D.49973_6 - 6 )
Partition 7 (D.49974_7 - 7 )
Partition 8 (D.49975_8 - 8 )
Partition 9 (D.49976_9 - 9 )
Partition 10 (W.72_10 - 10 )
Partition 11 (i_11 - 11 )
Partition 12 (D.74_12 - 12 )
Partition 13 (network_size.75_13 - 13 )
Partition 14 (D.49987_14 - 14 )
Partition 15 (W.73_15 - 15 )
Partition 16 (D.49979_16 - 16 )
Partition 17 (D.49980_17 - 17 )
Partition 18 (D.49981_18 - 18 )
Partition 19 (D.49982_19 - 19 )
Partition 20 (D.49983_20 - 20 )
Partition 21 (D.49984_21 - 21 )
Partition 22 (i_22 - 22 )
Partition 23 (debug.76_23 - 23 )
Partition 24 (W.77_24 - 24 )
Partition 25 (D.78_25 - 25 )
Partition 26 (D.49993_26 - 26 )
Partition 27 (network_size.79_27 - 27 )
Partition 28 (D.49995_28 - 28 )
Partition 29 (D.49996_29 - 29 )
Partition 30 (D.49997_30 - 30 )
Partition 31 (D.49998_31 - 31 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_11 - 11 )
Partition 2 (i_22 - 22 )


Live on entry to BB2 : 

Live on entry to BB3 : 

Live on entry to BB4 : 

Live on entry to BB5 : i_1  

Live on entry to BB6 : 

Live on entry to BB7 : 

Live on entry to BB8 : 

Live on entry to BB9 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_22
(2147483646) i_1 <-> i_11

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_11 - 11 )
Partition 2 (i_22 - 22 )

Coalesce list: (1)i_1 & (22)i_22 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (11)i_11 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (22)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (11)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 11 22 )
Partition 1 (debug.69_2 - 2 )
Partition 2 (D.70_3 - 3 )
Partition 3 (D.49971_4 - 4 )
Partition 4 (network_size.71_5 - 5 )
Partition 5 (D.49973_6 - 6 )
Partition 6 (D.49974_7 - 7 )
Partition 7 (D.49975_8 - 8 )
Partition 8 (D.49976_9 - 9 )
Partition 9 (W.72_10 - 10 )
Partition 10 (D.74_12 - 12 )
Partition 11 (network_size.75_13 - 13 )
Partition 12 (D.49987_14 - 14 )
Partition 13 (W.73_15 - 15 )
Partition 14 (D.49979_16 - 16 )
Partition 15 (D.49980_17 - 17 )
Partition 16 (D.49981_18 - 18 )
Partition 17 (D.49982_19 - 19 )
Partition 18 (D.49983_20 - 20 )
Partition 19 (D.49984_21 - 21 )
Partition 20 (debug.76_23 - 23 )
Partition 21 (W.77_24 - 24 )
Partition 22 (D.78_25 - 25 )
Partition 23 (D.49993_26 - 26 )
Partition 24 (network_size.79_27 - 27 )
Partition 25 (D.49995_28 - 28 )
Partition 26 (D.49996_29 - 29 )
Partition 27 (D.49997_30 - 30 )
Partition 28 (D.49998_31 - 31 )

W_init ()
{
  unsigned int i;
  const char * restrict D.49998;
  long unsigned int D.49997;
  long unsigned int D.49996;
  long unsigned int D.49995;
  unsigned int network_size.79;
  long unsigned int D.49993;
  unsigned int D.78;
  double * W.77;
  int debug.76;
  unsigned int D.49987;
  unsigned int network_size.75;
  unsigned int D.74;
  double D.49984;
  double D.49983;
  int D.49982;
  double * D.49981;
  long unsigned int D.49980;
  long unsigned int D.49979;
  double * W.73;
  double * W.72;
  void * D.49976;
  long unsigned int D.49975;
  long unsigned int D.49974;
  long unsigned int D.49973;
  unsigned int network_size.71;
  long unsigned int D.49971;
  unsigned int D.70;
  int debug.69;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  debug.69_2 = debug;
  if (debug.69_2 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  __builtin_puts (&"Initializing W randomly"[0]);
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (false) 3 (fallthru)
  D.70_3 = D;
  D.49971_4 = (long unsigned int) D.70_3;
  network_size.71_5 = network_size;
  D.49973_6 = (long unsigned int) network_size.71_5;
  D.49974_7 = D.49971_4 * D.49973_6;
  D.49975_8 = D.49974_7 * 8;
  D.49976_9 = malloc (D.49975_8);
  W.72_10 = (double *) D.49976_9;
  W = W.72_10;
  i_11 = 0;
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 6 (true)
  W.73_15 = W;
  D.49979_16 = (long unsigned int) i_1;
  D.49980_17 = D.49979_16 * 8;
  D.49981_18 = W.73_15 + D.49980_17;
  D.49982_19 = rand ();
  D.49983_20 = (double) D.49982_19;
  D.49984_21 = D.49983_20 / 2.147483647e+9;
  *D.49981_18 = D.49984_21;
  i_22 = i_1 + 1;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  # i_1 = PHI <i_11(4), i_22(5)>
  D.74_12 = D;
  network_size.75_13 = network_size;
  D.49987_14 = D.74_12 * network_size.75_13;
  if (D.49987_14 > i_1)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 (true) 7 (false)

  # BLOCK 7
  # PRED: 6 (false)
  debug.76_23 = debug;
  if (debug.76_23 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 (true) 9 (false)

  # BLOCK 8
  # PRED: 7 (true)
  W.77_24 = W;
  D.78_25 = D;
  D.49993_26 = (long unsigned int) D.78_25;
  network_size.79_27 = network_size;
  D.49995_28 = (long unsigned int) network_size.79_27;
  D.49996_29 = D.49993_26 * D.49995_28;
  D.49997_30 = D.49996_29 * 8;
  D.49998_31 = (const char * restrict) &"%ld: W initialized:\n\t\t\t%ld @%p\n"[0];
  printf (D.49998_31, clock, D.49997_30, W.77_24);
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 7 (false) 8 (fallthru)
  return;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; debug.69_2 = debug;

(insn 5 4 0 node.h:39 (set (reg:SI 58 [ debug.69 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.69_2 != 0)

(insn 6 5 7 node.h:39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 58 [ debug.69 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 7 6 0 node.h:39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; __builtin_puts (&"Initializing W randomly"[0]);

(insn 9 8 10 node.h:39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <string_cst 0x7f2f6b9d3508>)) -1 (nil))

(call_insn 10 9 0 node.h:39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 2 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; D.70_3 = D;

(insn 13 12 0 node.h:41 (set (reg:SI 59 [ D.70 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

;; D.49971_4 = (long unsigned int) D.70_3;

(insn 14 13 0 node.h:41 (set (reg:DI 60 [ D.49971 ])
        (zero_extend:DI (reg:SI 59 [ D.70 ]))) -1 (nil))

;; network_size.71_5 = network_size;

(insn 15 14 0 node.h:41 (set (reg:SI 61 [ network_size.71 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; D.49973_6 = (long unsigned int) network_size.71_5;

(insn 16 15 0 node.h:41 (set (reg:DI 62 [ D.49973 ])
        (zero_extend:DI (reg:SI 61 [ network_size.71 ]))) -1 (nil))

;; D.49974_7 = D.49971_4 * D.49973_6;

(insn 17 16 0 node.h:41 (parallel [
            (set (reg:DI 63 [ D.49974 ])
                (mult:DI (reg:DI 60 [ D.49971 ])
                    (reg:DI 62 [ D.49973 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49975_8 = D.49974_7 * 8;

(insn 18 17 0 node.h:41 (parallel [
            (set (reg:DI 64 [ D.49975 ])
                (ashift:DI (reg:DI 63 [ D.49974 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49976_9 = malloc (D.49975_8);

(insn 19 18 20 node.h:41 (set (reg:DI 5 di)
        (reg:DI 64 [ D.49975 ])) -1 (nil))

(call_insn 20 19 21 node.h:41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f2f6d770700 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 21 20 22 node.h:41 (set (reg/f:DI 86)
        (reg:DI 0 ax)) -1 (expr_list:REG_NOALIAS (reg/f:DI 86)
        (nil)))

(insn 22 21 0 node.h:41 (set (reg/f:DI 65 [ D.49976 ])
        (reg/f:DI 86)) -1 (nil))

;; W.72_10 = (double *) D.49976_9;

(insn 23 22 0 node.h:41 (set (reg/f:DI 66 [ W.72 ])
        (reg/f:DI 65 [ D.49976 ])) -1 (nil))

;; W = W.72_10;

(insn 24 23 0 node.h:41 (set (mem/f/c/i:DI (symbol_ref:DI ("W")  <var_decl 0x7f2f6c4b8c80 W>) [0 W+0 S8 A64])
        (reg/f:DI 66 [ W.72 ])) -1 (nil))

;; i_11 = 0;

(insn 25 24 0 node.h:42 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; W.73_15 = W;

(insn 29 28 0 node.h:44 (set (reg/f:DI 70 [ W.73 ])
        (mem/f/c/i:DI (symbol_ref:DI ("W")  <var_decl 0x7f2f6c4b8c80 W>) [0 W+0 S8 A64])) -1 (nil))

;; D.49979_16 = (long unsigned int) i_1;

(insn 30 29 0 node.h:44 (set (reg:DI 71 [ D.49979 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

;; D.49980_17 = D.49979_16 * 8;

(insn 31 30 0 node.h:44 (parallel [
            (set (reg:DI 72 [ D.49980 ])
                (ashift:DI (reg:DI 71 [ D.49979 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49981_18 = W.73_15 + D.49980_17;

(insn 32 31 0 node.h:44 (parallel [
            (set (reg/f:DI 73 [ D.49981 ])
                (plus:DI (reg/f:DI 70 [ W.73 ])
                    (reg:DI 72 [ D.49980 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49982_19 = rand ();

(call_insn 33 32 34 node.h:44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f2f6c515100 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 34 33 0 node.h:44 (set (reg:SI 74 [ D.49982 ])
        (reg:SI 0 ax)) -1 (nil))

;; D.49983_20 = (double) D.49982_19;

(insn 35 34 0 node.h:44 (set (reg:DF 75 [ D.49983 ])
        (float:DF (reg:SI 74 [ D.49982 ]))) -1 (nil))

;; D.49984_21 = D.49983_20 / 2.147483647e+9;

(insn 36 35 37 node.h:44 (set (reg:DF 87)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0 S8 A64])) -1 (expr_list:REG_EQUAL (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))

(insn 37 36 0 node.h:44 (set (reg:DF 76 [ D.49984 ])
        (div:DF (reg:DF 75 [ D.49983 ])
            (reg:DF 87))) -1 (nil))

;; *D.49981_18 = D.49984_21;

(insn 38 37 0 node.h:44 (set (mem:DF (reg/f:DI 73 [ D.49981 ]) [0 S8 A64])
        (reg:DF 76 [ D.49984 ])) -1 (nil))

;; i_22 = i_1 + 1;

(insn 39 38 0 node.h:42 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 40 39 41 3 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; D.74_12 = D;

(insn 42 41 0 node.h:42 (set (reg:SI 67 [ D.74 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

;; network_size.75_13 = network_size;

(insn 43 42 0 node.h:42 (set (reg:SI 68 [ network_size.75 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; D.49987_14 = D.74_12 * network_size.75_13;

(insn 44 43 0 node.h:42 (parallel [
            (set (reg:SI 69 [ D.49987 ])
                (mult:SI (reg:SI 67 [ D.74 ])
                    (reg:SI 68 [ network_size.75 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; if (D.49987_14 > i_1)

(insn 46 44 47 node.h:42 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 69 [ D.49987 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 47 46 0 node.h:42 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 7

;; debug.76_23 = debug;

(insn 49 48 0 node.h:47 (set (reg:SI 77 [ debug.76 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.76_23 != 0)

(insn 50 49 51 node.h:47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ debug.76 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 51 50 0 node.h:47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 8

;; W.77_24 = W;

(insn 53 52 0 node.h:47 (set (reg/f:DI 78 [ W.77 ])
        (mem/f/c/i:DI (symbol_ref:DI ("W")  <var_decl 0x7f2f6c4b8c80 W>) [0 W+0 S8 A64])) -1 (nil))

;; D.78_25 = D;

(insn 54 53 0 node.h:49 (set (reg:SI 79 [ D.78 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

;; D.49993_26 = (long unsigned int) D.78_25;

(insn 55 54 0 node.h:49 (set (reg:DI 80 [ D.49993 ])
        (zero_extend:DI (reg:SI 79 [ D.78 ]))) -1 (nil))

;; network_size.79_27 = network_size;

(insn 56 55 0 node.h:49 (set (reg:SI 81 [ network_size.79 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; D.49995_28 = (long unsigned int) network_size.79_27;

(insn 57 56 0 node.h:49 (set (reg:DI 82 [ D.49995 ])
        (zero_extend:DI (reg:SI 81 [ network_size.79 ]))) -1 (nil))

;; D.49996_29 = D.49993_26 * D.49995_28;

(insn 58 57 0 node.h:49 (parallel [
            (set (reg:DI 83 [ D.49996 ])
                (mult:DI (reg:DI 80 [ D.49993 ])
                    (reg:DI 82 [ D.49995 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49997_30 = D.49996_29 * 8;

(insn 59 58 0 node.h:47 (parallel [
            (set (reg:DI 84 [ D.49997 ])
                (ashift:DI (reg:DI 83 [ D.49996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49998_31 = (const char * restrict) &"%ld: W initialized:\n\t\t\t%ld @%p\n"[0];

(insn 60 59 0 node.h:47 (set (reg/f:DI 85 [ D.49998 ])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <string_cst 0x7f2f6b9f3000>)) -1 (nil))

;; printf (D.49998_31, clock, D.49997_30, W.77_24);

(insn 61 60 62 node.h:47 (set (reg:DI 2 cx)
        (reg/f:DI 78 [ W.77 ])) -1 (nil))

(insn 62 61 63 node.h:47 (set (reg:DI 1 dx)
        (reg:DI 84 [ D.49997 ])) -1 (nil))

(insn 63 62 64 node.h:47 (set (reg:DI 4 si)
        (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f2f6c52e900 clock>)) -1 (nil))

(insn 64 63 65 node.h:47 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.49998 ])) -1 (nil))

(insn 65 64 66 node.h:47 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 66 65 0 node.h:47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (nil)))))))

;; Generating RTL for gimple basic block 9

;; 

(code_label 67 66 68 5 "" [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 node.h:39 (set (reg:SI 58 [ debug.69 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 6 5 7 3 node.h:39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 58 [ debug.69 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 7 6 8 3 node.h:39 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 11)
            (pc))) -1 (nil)
 -> 11)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 4 node.h:39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <string_cst 0x7f2f6b9d3508>)) -1 (nil))

(call_insn 10 9 11 4 node.h:39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 11 10 12 5 2 "" [1 uses])

(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 5 node.h:41 (set (reg:SI 59 [ D.70 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

(insn 14 13 15 5 node.h:41 (set (reg:DI 60 [ D.49971 ])
        (zero_extend:DI (reg:SI 59 [ D.70 ]))) -1 (nil))

(insn 15 14 16 5 node.h:41 (set (reg:SI 61 [ network_size.71 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 16 15 17 5 node.h:41 (set (reg:DI 62 [ D.49973 ])
        (zero_extend:DI (reg:SI 61 [ network_size.71 ]))) -1 (nil))

(insn 17 16 18 5 node.h:41 (parallel [
            (set (reg:DI 63 [ D.49974 ])
                (mult:DI (reg:DI 60 [ D.49971 ])
                    (reg:DI 62 [ D.49973 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 18 17 19 5 node.h:41 (parallel [
            (set (reg:DI 64 [ D.49975 ])
                (ashift:DI (reg:DI 63 [ D.49974 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 19 18 20 5 node.h:41 (set (reg:DI 5 di)
        (reg:DI 64 [ D.49975 ])) -1 (nil))

(call_insn 20 19 21 5 node.h:41 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f2f6d770700 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 21 20 22 5 node.h:41 (set (reg/f:DI 86)
        (reg:DI 0 ax)) -1 (expr_list:REG_NOALIAS (reg/f:DI 86)
        (nil)))

(insn 22 21 23 5 node.h:41 (set (reg/f:DI 65 [ D.49976 ])
        (reg/f:DI 86)) -1 (nil))

(insn 23 22 24 5 node.h:41 (set (reg/f:DI 66 [ W.72 ])
        (reg/f:DI 65 [ D.49976 ])) -1 (nil))

(insn 24 23 25 5 node.h:41 (set (mem/f/c/i:DI (symbol_ref:DI ("W")  <var_decl 0x7f2f6c4b8c80 W>) [0 W+0 S8 A64])
        (reg/f:DI 66 [ W.72 ])) -1 (nil))

(insn 25 24 26 5 node.h:42 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 26 25 27 5 node.h:42 (set (pc)
        (label_ref 40)) -1 (nil)
 -> 40)
;; End of basic block 5 -> ( 7)

;; Succ edge  7

(barrier 27 26 45)

;; Start of basic block ( 7) -> 6
;; Pred edge  7
(code_label 45 27 28 6 4 "" [1 uses])

(note 28 45 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 29 28 30 6 node.h:44 (set (reg/f:DI 70 [ W.73 ])
        (mem/f/c/i:DI (symbol_ref:DI ("W")  <var_decl 0x7f2f6c4b8c80 W>) [0 W+0 S8 A64])) -1 (nil))

(insn 30 29 31 6 node.h:44 (set (reg:DI 71 [ D.49979 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(insn 31 30 32 6 node.h:44 (parallel [
            (set (reg:DI 72 [ D.49980 ])
                (ashift:DI (reg:DI 71 [ D.49979 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 32 31 33 6 node.h:44 (parallel [
            (set (reg/f:DI 73 [ D.49981 ])
                (plus:DI (reg/f:DI 70 [ W.73 ])
                    (reg:DI 72 [ D.49980 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(call_insn 33 32 34 6 node.h:44 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f2f6c515100 rand>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (nil))

(insn 34 33 35 6 node.h:44 (set (reg:SI 74 [ D.49982 ])
        (reg:SI 0 ax)) -1 (nil))

(insn 35 34 36 6 node.h:44 (set (reg:DF 75 [ D.49983 ])
        (float:DF (reg:SI 74 [ D.49982 ]))) -1 (nil))

(insn 36 35 37 6 node.h:44 (set (reg:DF 87)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0 S8 A64])) -1 (expr_list:REG_EQUAL (const_double:DF 2.147483647e+9 [0x0.fffffffep+31])
        (nil)))

(insn 37 36 38 6 node.h:44 (set (reg:DF 76 [ D.49984 ])
        (div:DF (reg:DF 75 [ D.49983 ])
            (reg:DF 87))) -1 (nil))

(insn 38 37 39 6 node.h:44 (set (mem:DF (reg/f:DI 73 [ D.49981 ]) [0 S8 A64])
        (reg:DF 76 [ D.49984 ])) -1 (nil))

(insn 39 38 40 6 node.h:42 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 5 6) -> 7
;; Pred edge  5
;; Pred edge  6 (fallthru)
(code_label 40 39 41 7 3 "" [1 uses])

(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 42 41 43 7 node.h:42 (set (reg:SI 67 [ D.74 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

(insn 43 42 44 7 node.h:42 (set (reg:SI 68 [ network_size.75 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 44 43 46 7 node.h:42 (parallel [
            (set (reg:SI 69 [ D.49987 ])
                (mult:SI (reg:SI 67 [ D.74 ])
                    (reg:SI 68 [ network_size.75 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 46 44 47 7 node.h:42 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 69 [ D.49987 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 47 46 48 7 node.h:42 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) -1 (nil)
 -> 45)
;; End of basic block 7 -> ( 6 8)

;; Succ edge  6
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 8 node.h:47 (set (reg:SI 77 [ debug.76 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 50 49 51 8 node.h:47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 77 [ debug.76 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 51 50 52 8 node.h:47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 67)
            (pc))) -1 (nil)
 -> 67)
;; End of basic block 8 -> ( 9 10)

;; Succ edge  9 (fallthru)
;; Succ edge  10

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 9 node.h:47 (set (reg/f:DI 78 [ W.77 ])
        (mem/f/c/i:DI (symbol_ref:DI ("W")  <var_decl 0x7f2f6c4b8c80 W>) [0 W+0 S8 A64])) -1 (nil))

(insn 54 53 55 9 node.h:49 (set (reg:SI 79 [ D.78 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

(insn 55 54 56 9 node.h:49 (set (reg:DI 80 [ D.49993 ])
        (zero_extend:DI (reg:SI 79 [ D.78 ]))) -1 (nil))

(insn 56 55 57 9 node.h:49 (set (reg:SI 81 [ network_size.79 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 57 56 58 9 node.h:49 (set (reg:DI 82 [ D.49995 ])
        (zero_extend:DI (reg:SI 81 [ network_size.79 ]))) -1 (nil))

(insn 58 57 59 9 node.h:49 (parallel [
            (set (reg:DI 83 [ D.49996 ])
                (mult:DI (reg:DI 80 [ D.49993 ])
                    (reg:DI 82 [ D.49995 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 59 58 60 9 node.h:47 (parallel [
            (set (reg:DI 84 [ D.49997 ])
                (ashift:DI (reg:DI 83 [ D.49996 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 60 59 61 9 node.h:47 (set (reg/f:DI 85 [ D.49998 ])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <string_cst 0x7f2f6b9f3000>)) -1 (nil))

(insn 61 60 62 9 node.h:47 (set (reg:DI 2 cx)
        (reg/f:DI 78 [ W.77 ])) -1 (nil))

(insn 62 61 63 9 node.h:47 (set (reg:DI 1 dx)
        (reg:DI 84 [ D.49997 ])) -1 (nil))

(insn 63 62 64 9 node.h:47 (set (reg:DI 4 si)
        (symbol_ref:DI ("clock") [flags 0x41]  <function_decl 0x7f2f6c52e900 clock>)) -1 (nil))

(insn 64 63 65 9 node.h:47 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.49998 ])) -1 (nil))

(insn 65 64 66 9 node.h:47 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 66 65 67 9 node.h:47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                        (nil)))))))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 8 9) -> 10
;; Pred edge  8
;; Pred edge  9 (fallthru)
(code_label 67 66 68 10 5 "" [1 uses])

(note 68 67 69 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(code_label 69 68 70 11 1 "" [0 uses])

(note 70 69 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function W_term (W_term)

W_term ()
{
  int debug.68;
  double * W.67;
  int debug.66;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  debug.66_1 = debug;
  if (debug.66_1 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  __builtin_puts (&"Terminating W"[0]);
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (false) 3 (fallthru)
  W.67_2 = W;
  free (W.67_2);
  debug.68_3 = debug;
  if (debug.68_3 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  __builtin_puts (&"W terminated"[0]);
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (false) 5 (fallthru)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (debug.66_1 - 1 )
Partition 2 (W.67_2 - 2 )
Partition 3 (debug.68_3 - 3 )

After Coalescing:

Partition map 

Partition 0 (debug.66_1 - 1 )
Partition 1 (W.67_2 - 2 )
Partition 2 (debug.68_3 - 3 )

W_term ()
{
  int debug.68;
  double * W.67;
  int debug.66;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  debug.66_1 = debug;
  if (debug.66_1 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  __builtin_puts (&"Terminating W"[0]);
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (false) 3 (fallthru)
  W.67_2 = W;
  free (W.67_2);
  debug.68_3 = debug;
  if (debug.68_3 != 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  __builtin_puts (&"W terminated"[0]);
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (false) 5 (fallthru)
  return;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; debug.66_1 = debug;

(insn 5 4 0 node.h:54 (set (reg:SI 58 [ debug.66 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.66_1 != 0)

(insn 6 5 7 node.h:54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 58 [ debug.66 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 7 6 0 node.h:54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; __builtin_puts (&"Terminating W"[0]);

(insn 9 8 10 node.h:54 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <string_cst 0x7f2f6b9c8ea0>)) -1 (nil))

(call_insn 10 9 0 node.h:54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 7 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; W.67_2 = W;

(insn 13 12 0 node.h:55 (set (reg/f:DI 59 [ W.67 ])
        (mem/f/c/i:DI (symbol_ref:DI ("W")  <var_decl 0x7f2f6c4b8c80 W>) [0 W+0 S8 A64])) -1 (nil))

;; free (W.67_2);

(insn 14 13 15 node.h:55 (set (reg:DI 5 di)
        (reg/f:DI 59 [ W.67 ])) -1 (nil))

(call_insn 15 14 0 node.h:55 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f2f6d767c00 free>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; debug.68_3 = debug;

(insn 16 15 0 node.h:56 (set (reg:SI 60 [ debug.68 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.68_3 != 0)

(insn 17 16 18 node.h:56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ debug.68 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 18 17 0 node.h:56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 5

;; __builtin_puts (&"W terminated"[0]);

(insn 20 19 21 node.h:56 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <string_cst 0x7f2f6b9c8ed0>)) -1 (nil))

(call_insn 21 20 0 node.h:56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 6

;; 

(code_label 22 21 23 8 "" [0 uses])

(note 23 22 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 node.h:54 (set (reg:SI 58 [ debug.66 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 6 5 7 3 node.h:54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 58 [ debug.66 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 7 6 8 3 node.h:54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 11)
            (pc))) -1 (nil)
 -> 11)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 4 node.h:54 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <string_cst 0x7f2f6b9c8ea0>)) -1 (nil))

(call_insn 10 9 11 4 node.h:54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 11 10 12 5 7 "" [1 uses])

(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 5 node.h:55 (set (reg/f:DI 59 [ W.67 ])
        (mem/f/c/i:DI (symbol_ref:DI ("W")  <var_decl 0x7f2f6c4b8c80 W>) [0 W+0 S8 A64])) -1 (nil))

(insn 14 13 15 5 node.h:55 (set (reg:DI 5 di)
        (reg/f:DI 59 [ W.67 ])) -1 (nil))

(call_insn 15 14 16 5 node.h:55 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f2f6d767c00 free>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 16 15 17 5 node.h:56 (set (reg:SI 60 [ debug.68 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 17 16 18 5 node.h:56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ debug.68 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 18 17 19 5 node.h:56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 22)
            (pc))) -1 (nil)
 -> 22)
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 (fallthru)
;; Succ edge  7

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 19 18 20 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 20 19 21 6 node.h:56 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <string_cst 0x7f2f6b9c8ed0>)) -1 (nil))

(call_insn 21 20 22 6 node.h:56 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 5 6) -> 7
;; Pred edge  5
;; Pred edge  6 (fallthru)
(code_label 22 21 23 7 8 "" [1 uses])

(note 23 22 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(code_label 24 23 25 8 6 "" [0 uses])

(note 25 24 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 8 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function get_input (get_input)

get_input (unsigned int t, unsigned int input)
{
  double retrieved_input;
  int success;
  double D.49958;
  const char * restrict D.49957;
  int debug.65;
  double D.49951;
  double D.49950;
  double D.49949;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  success_2 = 1;
  D.49949_4 = (double) input_3(D);
  D.49950_6 = (double) t_5(D);
  D.49951_7 = D.49950_6 + 1.0e+0;
  retrieved_input_8 = D.49949_4 / D.49951_7;
  if (success_2 == 0)
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 (true) 6 (false)

  # BLOCK 3
  # PRED: 2 (true)
  debug.65_9 = debug;
  if (debug.65_9 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.49957_10 = (const char * restrict) &"Failed to get input for:\n\t\t\t\tt=%u\n\t\t\t\tinput=%u\n"[0];
  printf (D.49957_10, t_5(D), input_3(D));
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (false) 4 (fallthru)
  D.49958_11 = 0.0;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 6
  # PRED: 2 (false)
  D.49958_12 = retrieved_input_8;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 5 (fallthru) 6 (fallthru)
  # D.49958_1 = PHI <D.49958_11(5), D.49958_12(6)>
  return D.49958_1;
  # SUCC: EXIT

}



Partition map 

Partition 1 (D.49958_1 - 1 )
Partition 2 (success_2 - 2 )
Partition 3 (input_3(D) - 3 )
Partition 4 (D.49949_4 - 4 )
Partition 5 (t_5(D) - 5 )
Partition 6 (D.49950_6 - 6 )
Partition 7 (D.49951_7 - 7 )
Partition 8 (retrieved_input_8 - 8 )
Partition 9 (debug.65_9 - 9 )
Partition 10 (D.49957_10 - 10 )
Partition 11 (D.49958_11 - 11 )
Partition 12 (D.49958_12 - 12 )


Partition map 

Partition 0 (D.49958_1 - 1 )
Partition 1 (input_3(D) - 3 )
Partition 2 (t_5(D) - 5 )
Partition 3 (D.49958_11 - 11 )
Partition 4 (D.49958_12 - 12 )


Live on entry to BB2 : input_3(D)  t_5(D)  

Live on entry to BB3 : input_3(D)  t_5(D)  

Live on entry to BB4 : input_3(D)  t_5(D)  

Live on entry to BB5 : 

Live on entry to BB6 : 

Live on entry to BB7 : 

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (D.49958_1 - 1 )
Partition 1 (input_3(D) - 3 )
Partition 2 (t_5(D) - 5 )
Partition 3 (D.49958_11 - 11 )
Partition 4 (D.49958_12 - 12 )

Coalesce list: (1)D.49958_1 & (12)D.49958_12 [map: 0, 4] : Success -> 0
Coalesce list: (1)D.49958_1 & (11)D.49958_11 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (D.49958_1 - 1 11 12 )
Partition 1 (success_2 - 2 )
Partition 2 (input_3(D) - 3 )
Partition 3 (D.49949_4 - 4 )
Partition 4 (t_5(D) - 5 )
Partition 5 (D.49950_6 - 6 )
Partition 6 (D.49951_7 - 7 )
Partition 7 (retrieved_input_8 - 8 )
Partition 8 (debug.65_9 - 9 )
Partition 9 (D.49957_10 - 10 )

get_input (unsigned int t, unsigned int input)
{
  double retrieved_input;
  int success;
  double D.49958;
  const char * restrict D.49957;
  int debug.65;
  double D.49951;
  double D.49950;
  double D.49949;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  success_2 = 1;
  D.49949_4 = (double) input_3(D);
  D.49950_6 = (double) t_5(D);
  D.49951_7 = D.49950_6 + 1.0e+0;
  retrieved_input_8 = D.49949_4 / D.49951_7;
  if (success_2 == 0)
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 (true) 6 (false)

  # BLOCK 3
  # PRED: 2 (true)
  debug.65_9 = debug;
  if (debug.65_9 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  D.49957_10 = (const char * restrict) &"Failed to get input for:\n\t\t\t\tt=%u\n\t\t\t\tinput=%u\n"[0];
  printf (D.49957_10, t_5(D), input_3(D));
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (false) 4 (fallthru)
  D.49958_11 = 0.0;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 6
  # PRED: 2 (false)
  D.49958_12 = retrieved_input_8;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 5 (fallthru) 6 (fallthru)
  # D.49958_1 = PHI <D.49958_11(5), D.49958_12(6)>
  return D.49958_1;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; success_2 = 1;

(insn 7 6 0 node.h:61 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 success+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

;; D.49949_4 = (double) input_3(D);

(insn 8 7 9 node.h:62 (set (reg:DI 65)
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 input+0 S4 A32]))) -1 (nil))

(insn 9 8 10 node.h:62 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 65)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 10 9 11 node.h:62 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) -1 (nil))

(insn 11 10 12 node.h:62 (set (reg:DF 59 [ D.49949 ])
        (float:DF (reg:DI 65))) -1 (nil))

(jump_insn 12 11 13 node.h:62 (set (pc)
        (label_ref 20)) -1 (nil))

(barrier 13 12 14)

(code_label 14 13 15 10 "" [0 uses])

(insn 15 14 16 node.h:62 (parallel [
            (set (reg:DI 67)
                (lshiftrt:DI (reg:DI 65)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 16 15 17 node.h:62 (parallel [
            (set (reg:DI 68)
                (and:DI (reg:DI 65)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 17 16 18 node.h:62 (parallel [
            (set (reg:DI 67)
                (ior:DI (reg:DI 67)
                    (reg:DI 68)))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 18 17 19 node.h:62 (set (reg:DF 66)
        (float:DF (reg:DI 67))) -1 (nil))

(insn 19 18 20 node.h:62 (set (reg:DF 59 [ D.49949 ])
        (plus:DF (reg:DF 66)
            (reg:DF 66))) -1 (nil))

(code_label 20 19 0 11 "" [0 uses])

;; D.49950_6 = (double) t_5(D);

(insn 21 20 22 node.h:62 (set (reg:DI 69)
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32]))) -1 (nil))

(insn 22 21 23 node.h:62 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 69)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 24 node.h:62 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) -1 (nil))

(insn 24 23 25 node.h:62 (set (reg:DF 60 [ D.49950 ])
        (float:DF (reg:DI 69))) -1 (nil))

(jump_insn 25 24 26 node.h:62 (set (pc)
        (label_ref 33)) -1 (nil))

(barrier 26 25 27)

(code_label 27 26 28 12 "" [0 uses])

(insn 28 27 29 node.h:62 (parallel [
            (set (reg:DI 71)
                (lshiftrt:DI (reg:DI 69)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 29 28 30 node.h:62 (parallel [
            (set (reg:DI 72)
                (and:DI (reg:DI 69)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 30 29 31 node.h:62 (parallel [
            (set (reg:DI 71)
                (ior:DI (reg:DI 71)
                    (reg:DI 72)))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 31 30 32 node.h:62 (set (reg:DF 70)
        (float:DF (reg:DI 71))) -1 (nil))

(insn 32 31 33 node.h:62 (set (reg:DF 60 [ D.49950 ])
        (plus:DF (reg:DF 70)
            (reg:DF 70))) -1 (nil))

(code_label 33 32 0 13 "" [0 uses])

;; D.49951_7 = D.49950_6 + 1.0e+0;

(insn 34 33 35 node.h:62 (set (reg:DF 73)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0 S8 A64])) -1 (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 35 34 0 node.h:62 (set (reg:DF 61 [ D.49951 ])
        (plus:DF (reg:DF 60 [ D.49950 ])
            (reg:DF 73))) -1 (nil))

;; retrieved_input_8 = D.49949_4 / D.49951_7;

(insn 36 35 37 node.h:62 (set (reg:DF 74)
        (div:DF (reg:DF 59 [ D.49949 ])
            (reg:DF 61 [ D.49951 ]))) -1 (nil))

(insn 37 36 0 node.h:62 (set (mem/c/i:DF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 retrieved_input+0 S8 A64])
        (reg:DF 74)) -1 (nil))

;; if (success_2 == 0)

(insn 38 37 39 node.h:63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 success+0 S4 A32])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 39 38 0 node.h:63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; debug.65_9 = debug;

(insn 41 40 0 node.h:65 (set (reg:SI 62 [ debug.65 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.65_9 != 0)

(insn 42 41 43 node.h:65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ debug.65 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 43 42 0 node.h:65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 4

;; D.49957_10 = (const char * restrict) &"Failed to get input for:\n\t\t\t\tt=%u\n\t\t\t\tinput=%u\n"[0];

(insn 45 44 0 node.h:65 (set (reg/f:DI 63 [ D.49957 ])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <string_cst 0x7f2f6b9dc7d0>)) -1 (nil))

;; printf (D.49957_10, t_5(D), input_3(D));

(insn 46 45 47 node.h:65 (set (reg:SI 75)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 input+0 S4 A32])) -1 (nil))

(insn 47 46 48 node.h:65 (set (reg:SI 76)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])) -1 (nil))

(insn 48 47 49 node.h:65 (set (reg:SI 1 dx)
        (reg:SI 75)) -1 (nil))

(insn 49 48 50 node.h:65 (set (reg:SI 4 si)
        (reg:SI 76)) -1 (nil))

(insn 50 49 51 node.h:65 (set (reg:DI 5 di)
        (reg/f:DI 63 [ D.49957 ])) -1 (nil))

(insn 51 50 52 node.h:65 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 52 51 0 node.h:65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                    (nil))))))

;; Generating RTL for gimple basic block 5

;; 

(code_label 53 52 54 15 "" [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; D.49958_11 = 0.0;

(insn 55 54 0 node.h:68 (set (reg:DF 58 [ D.49958 ])
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0 S8 A64])) -1 (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

;; Generating RTL for gimple basic block 6

;; 

(code_label 58 57 59 14 "" [0 uses])

(note 59 58 0 NOTE_INSN_BASIC_BLOCK)

;; D.49958_12 = retrieved_input_8;

(insn 60 59 0 node.h:70 (set (reg:DF 58 [ D.49958 ])
        (mem/c/i:DF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 retrieved_input+0 S8 A64])) -1 (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 61 60 62 16 "" [0 uses])

(note 62 61 0 NOTE_INSN_BASIC_BLOCK)

;; return D.49958_1;

(insn 63 62 64 node.h:70 (set (reg:DF 64 [ <retval> ])
        (reg:DF 58 [ D.49958 ])) -1 (nil))

(jump_insn 64 63 65 node.h:70 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 65 64 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 node.h:60 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])
        (reg:SI 5 di [ t ])) -1 (nil))

(insn 3 2 4 2 node.h:60 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 input+0 S4 A32])
        (reg:SI 4 si [ input ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 node.h:61 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 success+0 S4 A32])
        (const_int 1 [0x1])) -1 (nil))

(insn 8 7 9 3 node.h:62 (set (reg:DI 65)
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [0 input+0 S4 A32]))) -1 (nil))

(insn 9 8 10 3 node.h:62 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 65)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 10 9 72 3 node.h:62 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 14)
            (pc))) -1 (nil)
 -> 14)
;; End of basic block 3 -> ( 5 4)

;; Succ edge  5
;; Succ edge  4 (fallthru)

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 72 10 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 11 72 12 4 node.h:62 (set (reg:DF 59 [ D.49949 ])
        (float:DF (reg:DI 65))) -1 (nil))

(jump_insn 12 11 13 4 node.h:62 (set (pc)
        (label_ref 20)) -1 (nil)
 -> 20)
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 13 12 14)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 14 13 73 5 10 "" [1 uses])

(note 73 14 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 15 73 16 5 node.h:62 (parallel [
            (set (reg:DI 67)
                (lshiftrt:DI (reg:DI 65)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 16 15 17 5 node.h:62 (parallel [
            (set (reg:DI 68)
                (and:DI (reg:DI 65)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 17 16 18 5 node.h:62 (parallel [
            (set (reg:DI 67)
                (ior:DI (reg:DI 67)
                    (reg:DI 68)))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 18 17 19 5 node.h:62 (set (reg:DF 66)
        (float:DF (reg:DI 67))) -1 (nil))

(insn 19 18 20 5 node.h:62 (set (reg:DF 59 [ D.49949 ])
        (plus:DF (reg:DF 66)
            (reg:DF 66))) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 20 19 74 6 11 "" [1 uses])

(note 74 20 21 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 21 74 22 6 node.h:62 (set (reg:DI 69)
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32]))) -1 (nil))

(insn 22 21 23 6 node.h:62 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 69)
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 23 22 75 6 node.h:62 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 27)
            (pc))) -1 (nil)
 -> 27)
;; End of basic block 6 -> ( 8 7)

;; Succ edge  8
;; Succ edge  7 (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 75 23 24 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 24 75 25 7 node.h:62 (set (reg:DF 60 [ D.49950 ])
        (float:DF (reg:DI 69))) -1 (nil))

(jump_insn 25 24 26 7 node.h:62 (set (pc)
        (label_ref 33)) -1 (nil)
 -> 33)
;; End of basic block 7 -> ( 9)

;; Succ edge  9

(barrier 26 25 27)

;; Start of basic block ( 6) -> 8
;; Pred edge  6
(code_label 27 26 76 8 12 "" [1 uses])

(note 76 27 28 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 28 76 29 8 node.h:62 (parallel [
            (set (reg:DI 71)
                (lshiftrt:DI (reg:DI 69)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 29 28 30 8 node.h:62 (parallel [
            (set (reg:DI 72)
                (and:DI (reg:DI 69)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 30 29 31 8 node.h:62 (parallel [
            (set (reg:DI 71)
                (ior:DI (reg:DI 71)
                    (reg:DI 72)))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 31 30 32 8 node.h:62 (set (reg:DF 70)
        (float:DF (reg:DI 71))) -1 (nil))

(insn 32 31 33 8 node.h:62 (set (reg:DF 60 [ D.49950 ])
        (plus:DF (reg:DF 70)
            (reg:DF 70))) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7
;; Pred edge  8 (fallthru)
(code_label 33 32 77 9 13 "" [1 uses])

(note 77 33 34 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 34 77 35 9 node.h:62 (set (reg:DF 73)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0 S8 A64])) -1 (expr_list:REG_EQUAL (const_double:DF 1.0e+0 [0x0.8p+1])
        (nil)))

(insn 35 34 36 9 node.h:62 (set (reg:DF 61 [ D.49951 ])
        (plus:DF (reg:DF 60 [ D.49950 ])
            (reg:DF 73))) -1 (nil))

(insn 36 35 37 9 node.h:62 (set (reg:DF 74)
        (div:DF (reg:DF 59 [ D.49949 ])
            (reg:DF 61 [ D.49951 ]))) -1 (nil))

(insn 37 36 38 9 node.h:62 (set (mem/c/i:DF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 retrieved_input+0 S8 A64])
        (reg:DF 74)) -1 (nil))

(insn 38 37 39 9 node.h:63 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 success+0 S4 A32])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 39 38 40 9 node.h:63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 58)
            (pc))) -1 (nil)
 -> 58)
;; End of basic block 9 -> ( 10 13)

;; Succ edge  10 (fallthru)
;; Succ edge  13

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(note 40 39 41 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 10 node.h:65 (set (reg:SI 62 [ debug.65 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 42 41 43 10 node.h:65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 62 [ debug.65 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 43 42 44 10 node.h:65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 53)
            (pc))) -1 (nil)
 -> 53)
;; End of basic block 10 -> ( 11 12)

;; Succ edge  11 (fallthru)
;; Succ edge  12

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(note 44 43 45 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 45 44 46 11 node.h:65 (set (reg/f:DI 63 [ D.49957 ])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <string_cst 0x7f2f6b9dc7d0>)) -1 (nil))

(insn 46 45 47 11 node.h:65 (set (reg:SI 75)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 input+0 S4 A32])) -1 (nil))

(insn 47 46 48 11 node.h:65 (set (reg:SI 76)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])) -1 (nil))

(insn 48 47 49 11 node.h:65 (set (reg:SI 1 dx)
        (reg:SI 75)) -1 (nil))

(insn 49 48 50 11 node.h:65 (set (reg:SI 4 si)
        (reg:SI 76)) -1 (nil))

(insn 50 49 51 11 node.h:65 (set (reg:DI 5 di)
        (reg/f:DI 63 [ D.49957 ])) -1 (nil))

(insn 51 50 52 11 node.h:65 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 52 51 53 11 node.h:65 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                    (nil))))))
;; End of basic block 11 -> ( 12)

;; Succ edge  12 (fallthru)

;; Start of basic block ( 10 11) -> 12
;; Pred edge  10
;; Pred edge  11 (fallthru)
(code_label 53 52 54 12 15 "" [1 uses])

(note 54 53 55 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 55 54 56 12 node.h:68 (set (reg:DF 58 [ D.49958 ])
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0 S8 A64])) -1 (expr_list:REG_EQUAL (const_double:DF 0.0 [0x0.0p+0])
        (nil)))

(jump_insn 56 55 57 12 node.h:68 (set (pc)
        (label_ref 61)) -1 (nil)
 -> 61)
;; End of basic block 12 -> ( 14)

;; Succ edge  14

(barrier 57 56 58)

;; Start of basic block ( 9) -> 13
;; Pred edge  9
(code_label 58 57 59 13 14 "" [1 uses])

(note 59 58 60 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 60 59 61 13 node.h:70 (set (reg:DF 58 [ D.49958 ])
        (mem/c/i:DF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [0 retrieved_input+0 S8 A64])) -1 (nil))
;; End of basic block 13 -> ( 14)

;; Succ edge  14 (fallthru)

;; Start of basic block ( 12 13) -> 14
;; Pred edge  12
;; Pred edge  13 (fallthru)
(code_label 61 60 62 14 16 "" [1 uses])

(note 62 61 63 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 63 62 64 14 node.h:70 (set (reg:DF 64 [ <retval> ])
        (reg:DF 58 [ D.49958 ])) -1 (nil))

(jump_insn 64 63 65 14 node.h:70 (set (pc)
        (label_ref 66)) -1 (nil)
 -> 66)
;; End of basic block 14 -> ( 16)

;; Succ edge  16

(barrier 65 64 71)

;; Start of basic block () -> 15
(note 71 65 68 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 68 71 69 15 node.h:71 (clobber (reg/i:DF 21 xmm0)) -1 (nil))

(insn 69 68 66 15 node.h:71 (clobber (reg:DF 64 [ <retval> ])) -1 (nil))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 (fallthru)

;; Start of basic block ( 14 15) -> 16
;; Pred edge  14
;; Pred edge  15 (fallthru)
(code_label 66 69 78 16 9 "" [1 uses])

(note 78 66 67 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 67 78 70 16 node.h:71 (set (reg/i:DF 21 xmm0)
        (reg:DF 64 [ <retval> ])) -1 (nil))

(insn 70 67 0 16 node.h:71 (use (reg/i:DF 21 xmm0)) -1 (nil))
;; End of basic block 16 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function update_input (update_input)

update_input ()
{
  unsigned int j;
  unsigned int i;
  unsigned int historylength.64;
  int historylength.63;
  unsigned int input_list_size.62;
  int input_list_size.61;
  double D.49944;
  double * D.49943;
  long unsigned int D.49942;
  long unsigned int D.49941;
  unsigned int D.49940;
  unsigned int D.49939;
  unsigned int network_size.60;
  double * D.49937;
  double * * D.49936;
  long unsigned int D.49935;
  long unsigned int D.49934;
  double * * network.59;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  i_3 = 0;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 3
  # PRED: 7 (true)
  j_6 = 0;
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 5 (true)
  network.59_9 = network;
  D.49934_10 = (long unsigned int) i_1;
  D.49935_11 = D.49934_10 * 8;
  D.49936_12 = network.59_9 + D.49935_11;
  D.49937_13 = *D.49936_12;
  network_size.60_14 = network_size;
  D.49939_15 = network_size.60_14 + j_2;
  D.49940_16 = D.49939_15 + 1;
  D.49941_17 = (long unsigned int) D.49940_16;
  D.49942_18 = D.49941_17 * 8;
  D.49943_19 = D.49937_13 + D.49942_18;
  D.49944_20 = get_input (i_1, j_2);
  *D.49943_19 = D.49944_20;
  j_21 = j_2 + 1;
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  # j_2 = PHI <j_6(3), j_21(4)>
  input_list_size.61_7 = input_list_size;
  input_list_size.62_8 = (unsigned int) input_list_size.61_7;
  if (input_list_size.62_8 > j_2)
    goto <bb 4>;
  else
    goto <bb 6>;
  # SUCC: 4 (true) 6 (false)

  # BLOCK 6
  # PRED: 5 (false)
  i_22 = i_1 + 1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 2 (fallthru) 6 (fallthru)
  # i_1 = PHI <i_3(2), i_22(6)>
  historylength.63_4 = historylength;
  historylength.64_5 = (unsigned int) historylength.63_4;
  if (historylength.64_5 > i_1)
    goto <bb 3>;
  else
    goto <bb 8>;
  # SUCC: 3 (true) 8 (false)

  # BLOCK 8
  # PRED: 7 (false)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (historylength.63_4 - 4 )
Partition 5 (historylength.64_5 - 5 )
Partition 6 (j_6 - 6 )
Partition 7 (input_list_size.61_7 - 7 )
Partition 8 (input_list_size.62_8 - 8 )
Partition 9 (network.59_9 - 9 )
Partition 10 (D.49934_10 - 10 )
Partition 11 (D.49935_11 - 11 )
Partition 12 (D.49936_12 - 12 )
Partition 13 (D.49937_13 - 13 )
Partition 14 (network_size.60_14 - 14 )
Partition 15 (D.49939_15 - 15 )
Partition 16 (D.49940_16 - 16 )
Partition 17 (D.49941_17 - 17 )
Partition 18 (D.49942_18 - 18 )
Partition 19 (D.49943_19 - 19 )
Partition 20 (D.49944_20 - 20 )
Partition 21 (j_21 - 21 )
Partition 22 (i_22 - 22 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (j_6 - 6 )
Partition 4 (j_21 - 21 )
Partition 5 (i_22 - 22 )


Live on entry to BB2 : 

Live on entry to BB3 : i_1  

Live on entry to BB4 : i_1  j_2  

Live on entry to BB5 : i_1  

Live on entry to BB6 : i_1  

Live on entry to BB7 : 

Live on entry to BB8 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_3
(2147483646) i_1 <-> i_22
(2147483646) j_2 <-> j_6
(2147483646) j_2 <-> j_21

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_3 - 3 )
Partition 3 (j_6 - 6 )
Partition 4 (j_21 - 21 )
Partition 5 (i_22 - 22 )

Coalesce list: (1)i_1 & (3)i_3 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (22)i_22 [map: 0, 5] : Success -> 0
Coalesce list: (2)j_2 & (6)j_6 [map: 1, 3] : Success -> 1
Coalesce list: (2)j_2 & (21)j_21 [map: 1, 4] : Success -> 1
Coalesce list: (1)i_1 & (22)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (3)i_1: Already Coalesced.
Coalesce list: (2)j_2 & (21)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (6)j_2: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 3 22 )
Partition 1 (j_2 - 2 6 21 )
Partition 2 (historylength.63_4 - 4 )
Partition 3 (historylength.64_5 - 5 )
Partition 4 (input_list_size.61_7 - 7 )
Partition 5 (input_list_size.62_8 - 8 )
Partition 6 (network.59_9 - 9 )
Partition 7 (D.49934_10 - 10 )
Partition 8 (D.49935_11 - 11 )
Partition 9 (D.49936_12 - 12 )
Partition 10 (D.49937_13 - 13 )
Partition 11 (network_size.60_14 - 14 )
Partition 12 (D.49939_15 - 15 )
Partition 13 (D.49940_16 - 16 )
Partition 14 (D.49941_17 - 17 )
Partition 15 (D.49942_18 - 18 )
Partition 16 (D.49943_19 - 19 )
Partition 17 (D.49944_20 - 20 )

update_input ()
{
  unsigned int j;
  unsigned int i;
  unsigned int historylength.64;
  int historylength.63;
  unsigned int input_list_size.62;
  int input_list_size.61;
  double D.49944;
  double * D.49943;
  long unsigned int D.49942;
  long unsigned int D.49941;
  unsigned int D.49940;
  unsigned int D.49939;
  unsigned int network_size.60;
  double * D.49937;
  double * * D.49936;
  long unsigned int D.49935;
  long unsigned int D.49934;
  double * * network.59;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  i_3 = 0;
  goto <bb 7>;
  # SUCC: 7 (fallthru)

  # BLOCK 3
  # PRED: 7 (true)
  j_6 = 0;
  goto <bb 5>;
  # SUCC: 5 (fallthru)

  # BLOCK 4
  # PRED: 5 (true)
  network.59_9 = network;
  D.49934_10 = (long unsigned int) i_1;
  D.49935_11 = D.49934_10 * 8;
  D.49936_12 = network.59_9 + D.49935_11;
  D.49937_13 = *D.49936_12;
  network_size.60_14 = network_size;
  D.49939_15 = network_size.60_14 + j_2;
  D.49940_16 = D.49939_15 + 1;
  D.49941_17 = (long unsigned int) D.49940_16;
  D.49942_18 = D.49941_17 * 8;
  D.49943_19 = D.49937_13 + D.49942_18;
  D.49944_20 = get_input (i_1, j_2);
  *D.49943_19 = D.49944_20;
  j_21 = j_2 + 1;
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (fallthru) 4 (fallthru)
  # j_2 = PHI <j_6(3), j_21(4)>
  input_list_size.61_7 = input_list_size;
  input_list_size.62_8 = (unsigned int) input_list_size.61_7;
  if (input_list_size.62_8 > j_2)
    goto <bb 4>;
  else
    goto <bb 6>;
  # SUCC: 4 (true) 6 (false)

  # BLOCK 6
  # PRED: 5 (false)
  i_22 = i_1 + 1;
  # SUCC: 7 (fallthru)

  # BLOCK 7
  # PRED: 2 (fallthru) 6 (fallthru)
  # i_1 = PHI <i_3(2), i_22(6)>
  historylength.63_4 = historylength;
  historylength.64_5 = (unsigned int) historylength.63_4;
  if (historylength.64_5 > i_1)
    goto <bb 3>;
  else
    goto <bb 8>;
  # SUCC: 3 (true) 8 (false)

  # BLOCK 8
  # PRED: 7 (false)
  return;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; i_3 = 0;

(insn 5 4 0 node.h:76 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 3

;; j_6 = 0;

(insn 9 8 0 node.h:78 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; network.59_9 = network;

(insn 13 12 0 node.h:80 (set (reg/f:DI 62 [ network.59 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

;; D.49934_10 = (long unsigned int) i_1;

(insn 14 13 0 node.h:80 (set (reg:DI 63 [ D.49934 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

;; D.49935_11 = D.49934_10 * 8;

(insn 15 14 0 node.h:80 (parallel [
            (set (reg:DI 64 [ D.49935 ])
                (ashift:DI (reg:DI 63 [ D.49934 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49936_12 = network.59_9 + D.49935_11;

(insn 16 15 0 node.h:80 (parallel [
            (set (reg/f:DI 65 [ D.49936 ])
                (plus:DI (reg/f:DI 62 [ network.59 ])
                    (reg:DI 64 [ D.49935 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49937_13 = *D.49936_12;

(insn 17 16 0 node.h:80 (set (reg/f:DI 66 [ D.49937 ])
        (mem/f:DI (reg/f:DI 65 [ D.49936 ]) [0 S8 A64])) -1 (nil))

;; network_size.60_14 = network_size;

(insn 18 17 0 node.h:80 (set (reg:SI 67 [ network_size.60 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; D.49939_15 = network_size.60_14 + j_2;

(insn 19 18 0 node.h:80 (parallel [
            (set (reg:SI 68 [ D.49939 ])
                (plus:SI (reg:SI 67 [ network_size.60 ])
                    (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49940_16 = D.49939_15 + 1;

(insn 20 19 0 node.h:80 (parallel [
            (set (reg:SI 69 [ D.49940 ])
                (plus:SI (reg:SI 68 [ D.49939 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49941_17 = (long unsigned int) D.49940_16;

(insn 21 20 0 node.h:80 (set (reg:DI 70 [ D.49941 ])
        (zero_extend:DI (reg:SI 69 [ D.49940 ]))) -1 (nil))

;; D.49942_18 = D.49941_17 * 8;

(insn 22 21 0 node.h:80 (parallel [
            (set (reg:DI 71 [ D.49942 ])
                (ashift:DI (reg:DI 70 [ D.49941 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49943_19 = D.49937_13 + D.49942_18;

(insn 23 22 0 node.h:80 (parallel [
            (set (reg/f:DI 72 [ D.49943 ])
                (plus:DI (reg/f:DI 66 [ D.49937 ])
                    (reg:DI 71 [ D.49942 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49944_20 = get_input (i_1, j_2);

(insn 24 23 25 node.h:80 (set (reg:SI 74)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) -1 (nil))

(insn 25 24 26 node.h:80 (set (reg:SI 75)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) -1 (nil))

(insn 26 25 27 node.h:80 (set (reg:SI 4 si)
        (reg:SI 74)) -1 (nil))

(insn 27 26 28 node.h:80 (set (reg:SI 5 di)
        (reg:SI 75)) -1 (nil))

(call_insn 28 27 29 node.h:80 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("get_input") [flags 0x3]  <function_decl 0x7f2f6c26e800 get_input>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn 29 28 0 node.h:80 (set (reg:DF 73 [ D.49944 ])
        (reg:DF 21 xmm0)) -1 (nil))

;; *D.49943_19 = D.49944_20;

(insn 30 29 0 node.h:80 (set (mem:DF (reg/f:DI 72 [ D.49943 ]) [0 S8 A64])
        (reg:DF 73 [ D.49944 ])) -1 (nil))

;; j_21 = j_2 + 1;

(insn 31 30 0 node.h:78 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 32 31 33 19 "" [0 uses])

(note 33 32 0 NOTE_INSN_BASIC_BLOCK)

;; input_list_size.61_7 = input_list_size;

(insn 34 33 0 node.h:78 (set (reg:SI 60 [ input_list_size.61 ])
        (mem/c/i:SI (symbol_ref:DI ("input_list_size")  <var_decl 0x7f2f6c4b8d20 input_list_size>) [0 input_list_size+0 S4 A32])) -1 (nil))

;; input_list_size.62_8 = (unsigned int) input_list_size.61_7;

(insn 35 34 0 node.h:78 (set (reg:SI 61 [ input_list_size.62 ])
        (reg:SI 60 [ input_list_size.61 ])) -1 (nil))

;; if (input_list_size.62_8 > j_2)

(insn 37 35 38 node.h:78 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 61 [ input_list_size.62 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) -1 (nil))

(jump_insn 38 37 0 node.h:78 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 6

;; i_22 = i_1 + 1;

(insn 40 39 0 node.h:76 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 41 40 42 18 "" [0 uses])

(note 42 41 0 NOTE_INSN_BASIC_BLOCK)

;; historylength.63_4 = historylength;

(insn 43 42 0 node.h:76 (set (reg:SI 58 [ historylength.63 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

;; historylength.64_5 = (unsigned int) historylength.63_4;

(insn 44 43 0 node.h:76 (set (reg:SI 59 [ historylength.64 ])
        (reg:SI 58 [ historylength.63 ])) -1 (nil))

;; if (historylength.64_5 > i_1)

(insn 46 44 47 node.h:76 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 59 [ historylength.64 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 47 46 0 node.h:76 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 8


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 node.h:76 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 6 5 7 3 node.h:76 (set (pc)
        (label_ref 41)) -1 (nil)
 -> 41)
;; End of basic block 3 -> ( 8)

;; Succ edge  8

(barrier 7 6 45)

;; Start of basic block ( 8) -> 4
;; Pred edge  8
(code_label 45 7 8 4 21 "" [1 uses])

(note 8 45 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 4 node.h:78 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 10 9 11 4 node.h:78 (set (pc)
        (label_ref 32)) -1 (nil)
 -> 32)
;; End of basic block 4 -> ( 6)

;; Succ edge  6

(barrier 11 10 36)

;; Start of basic block ( 6) -> 5
;; Pred edge  6
(code_label 36 11 12 5 20 "" [1 uses])

(note 12 36 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 5 node.h:80 (set (reg/f:DI 62 [ network.59 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

(insn 14 13 15 5 node.h:80 (set (reg:DI 63 [ D.49934 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(insn 15 14 16 5 node.h:80 (parallel [
            (set (reg:DI 64 [ D.49935 ])
                (ashift:DI (reg:DI 63 [ D.49934 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 16 15 17 5 node.h:80 (parallel [
            (set (reg/f:DI 65 [ D.49936 ])
                (plus:DI (reg/f:DI 62 [ network.59 ])
                    (reg:DI 64 [ D.49935 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 17 16 18 5 node.h:80 (set (reg/f:DI 66 [ D.49937 ])
        (mem/f:DI (reg/f:DI 65 [ D.49936 ]) [0 S8 A64])) -1 (nil))

(insn 18 17 19 5 node.h:80 (set (reg:SI 67 [ network_size.60 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 19 18 20 5 node.h:80 (parallel [
            (set (reg:SI 68 [ D.49939 ])
                (plus:SI (reg:SI 67 [ network_size.60 ])
                    (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 20 19 21 5 node.h:80 (parallel [
            (set (reg:SI 69 [ D.49940 ])
                (plus:SI (reg:SI 68 [ D.49939 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 21 20 22 5 node.h:80 (set (reg:DI 70 [ D.49941 ])
        (zero_extend:DI (reg:SI 69 [ D.49940 ]))) -1 (nil))

(insn 22 21 23 5 node.h:80 (parallel [
            (set (reg:DI 71 [ D.49942 ])
                (ashift:DI (reg:DI 70 [ D.49941 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 23 22 24 5 node.h:80 (parallel [
            (set (reg/f:DI 72 [ D.49943 ])
                (plus:DI (reg/f:DI 66 [ D.49937 ])
                    (reg:DI 71 [ D.49942 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 24 23 25 5 node.h:80 (set (reg:SI 74)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) -1 (nil))

(insn 25 24 26 5 node.h:80 (set (reg:SI 75)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) -1 (nil))

(insn 26 25 27 5 node.h:80 (set (reg:SI 4 si)
        (reg:SI 74)) -1 (nil))

(insn 27 26 28 5 node.h:80 (set (reg:SI 5 di)
        (reg:SI 75)) -1 (nil))

(call_insn 28 27 29 5 node.h:80 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("get_input") [flags 0x3]  <function_decl 0x7f2f6c26e800 get_input>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
            (nil))))

(insn 29 28 30 5 node.h:80 (set (reg:DF 73 [ D.49944 ])
        (reg:DF 21 xmm0)) -1 (nil))

(insn 30 29 31 5 node.h:80 (set (mem:DF (reg/f:DI 72 [ D.49943 ]) [0 S8 A64])
        (reg:DF 73 [ D.49944 ])) -1 (nil))

(insn 31 30 32 5 node.h:78 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 32 31 33 6 19 "" [1 uses])

(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 34 33 35 6 node.h:78 (set (reg:SI 60 [ input_list_size.61 ])
        (mem/c/i:SI (symbol_ref:DI ("input_list_size")  <var_decl 0x7f2f6c4b8d20 input_list_size>) [0 input_list_size+0 S4 A32])) -1 (nil))

(insn 35 34 37 6 node.h:78 (set (reg:SI 61 [ input_list_size.62 ])
        (reg:SI 60 [ input_list_size.61 ])) -1 (nil))

(insn 37 35 38 6 node.h:78 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 61 [ input_list_size.62 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) -1 (nil))

(jump_insn 38 37 39 6 node.h:78 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 36)
            (pc))) -1 (nil)
 -> 36)
;; End of basic block 6 -> ( 5 7)

;; Succ edge  5
;; Succ edge  7 (fallthru)

;; Start of basic block ( 6) -> 7
;; Pred edge  6 (fallthru)
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 7 node.h:76 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 7 -> ( 8)

;; Succ edge  8 (fallthru)

;; Start of basic block ( 3 7) -> 8
;; Pred edge  3
;; Pred edge  7 (fallthru)
(code_label 41 40 42 8 18 "" [1 uses])

(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 43 42 44 8 node.h:76 (set (reg:SI 58 [ historylength.63 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

(insn 44 43 46 8 node.h:76 (set (reg:SI 59 [ historylength.64 ])
        (reg:SI 58 [ historylength.63 ])) -1 (nil))

(insn 46 44 47 8 node.h:76 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 59 [ historylength.64 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 47 46 48 8 node.h:76 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 45)
            (pc))) -1 (nil)
 -> 45)
;; End of basic block 8 -> ( 4 9)

;; Succ edge  4
;; Succ edge  9 (fallthru)

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 48 47 49 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(code_label 49 48 50 10 17 "" [0 uses])

(note 50 49 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 10 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function network_init (network_init)

network_init ()
{
  unsigned int j;
  unsigned int i;
  const char * restrict D.49931;
  unsigned int D.49930;
  unsigned int network_size.58;
  unsigned int D.49928;
  int D.49927;
  int input_list_size.57;
  int output_list_size.56;
  unsigned int network_size.55;
  unsigned int D.49921;
  int D.49920;
  int output_list_size.54;
  int input_list_size.53;
  int debug.52;
  int debug.51;
  const char * restrict D.49911;
  long unsigned int D.49910;
  long unsigned int D.49909;
  long unsigned int D.49908;
  int historylength.50;
  long unsigned int D.49906;
  unsigned int D.49;
  double * * network.48;
  int debug.47;
  unsigned int historylength.46;
  int historylength.45;
  unsigned int D.44;
  double * D.49897;
  long unsigned int D.49896;
  long unsigned int D.49895;
  double * D.49894;
  double * * D.49893;
  long unsigned int D.49892;
  long unsigned int D.49891;
  double * * network.43;
  double * D.49889;
  void * D.49888;
  long unsigned int D.49887;
  long unsigned int D.49886;
  unsigned int D.42;
  double * * D.49884;
  long unsigned int D.49883;
  long unsigned int D.49882;
  double * * network.41;
  double * * network.40;
  void * D.49879;
  long unsigned int D.49878;
  long unsigned int D.49877;
  int historylength.39;
  const char * restrict D.49875;
  int historylength.38;
  unsigned int network_size.37;
  int debug.36;
  unsigned int D.35;
  unsigned int D.49868;
  unsigned int network_size.34;
  int historylength.33;
  unsigned int network_size.32;
  unsigned int output_list_size.31;
  int output_list_size.30;
  unsigned int network_size.29;
  unsigned int input_list_size.28;
  int input_list_size.27;
  unsigned int network_size.26;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  network_size.26_3 = network_size;
  if (network_size.26_3 <= 1)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  goto <bb 27>;
  # SUCC: 27 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  input_list_size.27_4 = input_list_size;
  input_list_size.28_5 = (unsigned int) input_list_size.27_4;
  network_size.29_6 = network_size;
  if (input_list_size.28_5 > network_size.29_6)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  goto <bb 27>;
  # SUCC: 27 (fallthru)

  # BLOCK 6
  # PRED: 4 (false)
  output_list_size.30_7 = output_list_size;
  output_list_size.31_8 = (unsigned int) output_list_size.30_7;
  network_size.32_9 = network_size;
  if (output_list_size.31_8 > network_size.32_9)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 (true) 8 (false)

  # BLOCK 7
  # PRED: 6 (true)
  goto <bb 27>;
  # SUCC: 27 (fallthru)

  # BLOCK 8
  # PRED: 6 (false)
  historylength.33_10 = historylength;
  if (historylength.33_10 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 (true) 10 (false)

  # BLOCK 9
  # PRED: 8 (true)
  goto <bb 27>;
  # SUCC: 27 (fallthru)

  # BLOCK 10
  # PRED: 8 (false)
  network_size.34_11 = network_size;
  D.49868_12 = network_size.34_11 * 2;
  D.35_13 = D.49868_12 + 1;
  D = D.35_13;
  debug.36_14 = debug;
  if (debug.36_14 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 (true) 12 (false)

  # BLOCK 11
  # PRED: 10 (true)
  network_size.37_15 = network_size;
  historylength.38_16 = historylength;
  D.49875_17 = (const char * restrict) &"Initializing network with parameters:\n\t\t\thistory length = %d\n\t\t\tnetwork size = %u\n"[0];
  printf (D.49875_17, historylength.38_16, network_size.37_15);
  # SUCC: 12 (fallthru)

  # BLOCK 12
  # PRED: 10 (false) 11 (fallthru)
  historylength.39_18 = historylength;
  D.49877_19 = (long unsigned int) historylength.39_18;
  D.49878_20 = D.49877_19 * 8;
  D.49879_21 = malloc (D.49878_20);
  network.40_22 = (double * *) D.49879_21;
  network = network.40_22;
  i_23 = 0;
  goto <bb 17>;
  # SUCC: 17 (fallthru)

  # BLOCK 13
  # PRED: 17 (true)
  network.41_26 = network;
  D.49882_27 = (long unsigned int) i_1;
  D.49883_28 = D.49882_27 * 8;
  D.49884_29 = network.41_26 + D.49883_28;
  D.42_30 = D;
  D.49886_31 = (long unsigned int) D.42_30;
  D.49887_32 = D.49886_31 * 8;
  D.49888_33 = malloc (D.49887_32);
  D.49889_34 = (double *) D.49888_33;
  *D.49884_29 = D.49889_34;
  j_35 = 0;
  goto <bb 15>;
  # SUCC: 15 (fallthru)

  # BLOCK 14
  # PRED: 15 (true)
  network.43_37 = network;
  D.49891_38 = (long unsigned int) i_1;
  D.49892_39 = D.49891_38 * 8;
  D.49893_40 = network.43_37 + D.49892_39;
  D.49894_41 = *D.49893_40;
  D.49895_42 = (long unsigned int) j_2;
  D.49896_43 = D.49895_42 * 8;
  D.49897_44 = D.49894_41 + D.49896_43;
  *D.49897_44 = 0.0;
  j_45 = j_2 + 1;
  # SUCC: 15 (fallthru)

  # BLOCK 15
  # PRED: 13 (fallthru) 14 (fallthru)
  # j_2 = PHI <j_35(13), j_45(14)>
  D.44_36 = D;
  if (j_2 < D.44_36)
    goto <bb 14>;
  else
    goto <bb 16>;
  # SUCC: 14 (true) 16 (false)

  # BLOCK 16
  # PRED: 15 (false)
  i_46 = i_1 + 1;
  # SUCC: 17 (fallthru)

  # BLOCK 17
  # PRED: 12 (fallthru) 16 (fallthru)
  # i_1 = PHI <i_23(12), i_46(16)>
  historylength.45_24 = historylength;
  historylength.46_25 = (unsigned int) historylength.45_24;
  if (historylength.46_25 > i_1)
    goto <bb 13>;
  else
    goto <bb 18>;
  # SUCC: 13 (true) 18 (false)

  # BLOCK 18
  # PRED: 17 (false)
  debug.47_47 = debug;
  if (debug.47_47 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 (true) 20 (false)

  # BLOCK 19
  # PRED: 18 (true)
  network.48_48 = network;
  D.49_49 = D;
  D.49906_50 = (long unsigned int) D.49_49;
  historylength.50_51 = historylength;
  D.49908_52 = (long unsigned int) historylength.50_51;
  D.49909_53 = D.49906_50 * D.49908_52;
  D.49910_54 = D.49909_53 * 8;
  D.49911_55 = (const char * restrict) &"Network initialized:\n\t\t\t%ld @%p\n"[0];
  printf (D.49911_55, D.49910_54, network.48_48);
  # SUCC: 20 (fallthru)

  # BLOCK 20
  # PRED: 18 (false) 19 (fallthru)
  debug.51_56 = debug;
  if (debug.51_56 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 (true) 22 (false)

  # BLOCK 21
  # PRED: 20 (true)
  __builtin_puts (&"Setting inputs to network"[0]);
  # SUCC: 22 (fallthru)

  # BLOCK 22
  # PRED: 20 (false) 21 (fallthru)
  update_input ();
  debug.52_57 = debug;
  if (debug.52_57 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 (true) 24 (false)

  # BLOCK 23
  # PRED: 22 (true)
  __builtin_puts (&"Successfully set all inputs"[0]);
  # SUCC: 24 (fallthru)

  # BLOCK 24
  # PRED: 22 (false) 23 (fallthru)
  input_list_size.53_58 = input_list_size;
  output_list_size.54_59 = output_list_size;
  D.49920_60 = input_list_size.53_58 + output_list_size.54_59;
  D.49921_61 = (unsigned int) D.49920_60;
  network_size.55_62 = network_size;
  if (D.49921_61 > network_size.55_62)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 (true) 26 (false)

  # BLOCK 25
  # PRED: 24 (true)
  output_list_size.56_63 = output_list_size;
  input_list_size.57_64 = input_list_size;
  D.49927_65 = output_list_size.56_63 + input_list_size.57_64;
  D.49928_66 = (unsigned int) D.49927_65;
  network_size.58_67 = network_size;
  D.49930_68 = D.49928_66 - network_size.58_67;
  D.49931_69 = (const char * restrict) &"%u overlapping input and output\n"[0];
  printf (D.49931_69, D.49930_68);
  # SUCC: 26 (fallthru)

  # BLOCK 26
  # PRED: 24 (false) 25 (fallthru)
  W_init ();
  # SUCC: 27 (fallthru)

  # BLOCK 27
  # PRED: 3 (fallthru) 5 (fallthru) 7 (fallthru) 9 (fallthru) 26 (fallthru)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (j_2 - 2 )
Partition 3 (network_size.26_3 - 3 )
Partition 4 (input_list_size.27_4 - 4 )
Partition 5 (input_list_size.28_5 - 5 )
Partition 6 (network_size.29_6 - 6 )
Partition 7 (output_list_size.30_7 - 7 )
Partition 8 (output_list_size.31_8 - 8 )
Partition 9 (network_size.32_9 - 9 )
Partition 10 (historylength.33_10 - 10 )
Partition 11 (network_size.34_11 - 11 )
Partition 12 (D.49868_12 - 12 )
Partition 13 (D.35_13 - 13 )
Partition 14 (debug.36_14 - 14 )
Partition 15 (network_size.37_15 - 15 )
Partition 16 (historylength.38_16 - 16 )
Partition 17 (D.49875_17 - 17 )
Partition 18 (historylength.39_18 - 18 )
Partition 19 (D.49877_19 - 19 )
Partition 20 (D.49878_20 - 20 )
Partition 21 (D.49879_21 - 21 )
Partition 22 (network.40_22 - 22 )
Partition 23 (i_23 - 23 )
Partition 24 (historylength.45_24 - 24 )
Partition 25 (historylength.46_25 - 25 )
Partition 26 (network.41_26 - 26 )
Partition 27 (D.49882_27 - 27 )
Partition 28 (D.49883_28 - 28 )
Partition 29 (D.49884_29 - 29 )
Partition 30 (D.42_30 - 30 )
Partition 31 (D.49886_31 - 31 )
Partition 32 (D.49887_32 - 32 )
Partition 33 (D.49888_33 - 33 )
Partition 34 (D.49889_34 - 34 )
Partition 35 (j_35 - 35 )
Partition 36 (D.44_36 - 36 )
Partition 37 (network.43_37 - 37 )
Partition 38 (D.49891_38 - 38 )
Partition 39 (D.49892_39 - 39 )
Partition 40 (D.49893_40 - 40 )
Partition 41 (D.49894_41 - 41 )
Partition 42 (D.49895_42 - 42 )
Partition 43 (D.49896_43 - 43 )
Partition 44 (D.49897_44 - 44 )
Partition 45 (j_45 - 45 )
Partition 46 (i_46 - 46 )
Partition 47 (debug.47_47 - 47 )
Partition 48 (network.48_48 - 48 )
Partition 49 (D.49_49 - 49 )
Partition 50 (D.49906_50 - 50 )
Partition 51 (historylength.50_51 - 51 )
Partition 52 (D.49908_52 - 52 )
Partition 53 (D.49909_53 - 53 )
Partition 54 (D.49910_54 - 54 )
Partition 55 (D.49911_55 - 55 )
Partition 56 (debug.51_56 - 56 )
Partition 57 (debug.52_57 - 57 )
Partition 58 (input_list_size.53_58 - 58 )
Partition 59 (output_list_size.54_59 - 59 )
Partition 60 (D.49920_60 - 60 )
Partition 61 (D.49921_61 - 61 )
Partition 62 (network_size.55_62 - 62 )
Partition 63 (output_list_size.56_63 - 63 )
Partition 64 (input_list_size.57_64 - 64 )
Partition 65 (D.49927_65 - 65 )
Partition 66 (D.49928_66 - 66 )
Partition 67 (network_size.58_67 - 67 )
Partition 68 (D.49930_68 - 68 )
Partition 69 (D.49931_69 - 69 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_23 - 23 )
Partition 3 (j_35 - 35 )
Partition 4 (j_45 - 45 )
Partition 5 (i_46 - 46 )


Live on entry to BB2 : 

Live on entry to BB3 : 

Live on entry to BB4 : 

Live on entry to BB5 : 

Live on entry to BB6 : 

Live on entry to BB7 : 

Live on entry to BB8 : 

Live on entry to BB9 : 

Live on entry to BB10 : 

Live on entry to BB11 : 

Live on entry to BB12 : 

Live on entry to BB13 : i_1  

Live on entry to BB14 : i_1  j_2  

Live on entry to BB15 : i_1  

Live on entry to BB16 : i_1  

Live on entry to BB17 : 

Live on entry to BB18 : 

Live on entry to BB19 : 

Live on entry to BB20 : 

Live on entry to BB21 : 

Live on entry to BB22 : 

Live on entry to BB23 : 

Live on entry to BB24 : 

Live on entry to BB25 : 

Live on entry to BB26 : 

Live on entry to BB27 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_23
(2147483646) i_1 <-> i_46
(2147483646) j_2 <-> j_35
(2147483646) j_2 <-> j_45

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (j_2 - 2 )
Partition 2 (i_23 - 23 )
Partition 3 (j_35 - 35 )
Partition 4 (j_45 - 45 )
Partition 5 (i_46 - 46 )

Coalesce list: (1)i_1 & (23)i_23 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (46)i_46 [map: 0, 5] : Success -> 0
Coalesce list: (2)j_2 & (35)j_35 [map: 1, 3] : Success -> 1
Coalesce list: (2)j_2 & (45)j_45 [map: 1, 4] : Success -> 1
Coalesce list: (1)i_1 & (46)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (23)i_1: Already Coalesced.
Coalesce list: (2)j_2 & (45)j_2: Already Coalesced.
Coalesce list: (2)j_2 & (35)j_2: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 23 46 )
Partition 1 (j_2 - 2 35 45 )
Partition 2 (network_size.26_3 - 3 )
Partition 3 (input_list_size.27_4 - 4 )
Partition 4 (input_list_size.28_5 - 5 )
Partition 5 (network_size.29_6 - 6 )
Partition 6 (output_list_size.30_7 - 7 )
Partition 7 (output_list_size.31_8 - 8 )
Partition 8 (network_size.32_9 - 9 )
Partition 9 (historylength.33_10 - 10 )
Partition 10 (network_size.34_11 - 11 )
Partition 11 (D.49868_12 - 12 )
Partition 12 (D.35_13 - 13 )
Partition 13 (debug.36_14 - 14 )
Partition 14 (network_size.37_15 - 15 )
Partition 15 (historylength.38_16 - 16 )
Partition 16 (D.49875_17 - 17 )
Partition 17 (historylength.39_18 - 18 )
Partition 18 (D.49877_19 - 19 )
Partition 19 (D.49878_20 - 20 )
Partition 20 (D.49879_21 - 21 )
Partition 21 (network.40_22 - 22 )
Partition 22 (historylength.45_24 - 24 )
Partition 23 (historylength.46_25 - 25 )
Partition 24 (network.41_26 - 26 )
Partition 25 (D.49882_27 - 27 )
Partition 26 (D.49883_28 - 28 )
Partition 27 (D.49884_29 - 29 )
Partition 28 (D.42_30 - 30 )
Partition 29 (D.49886_31 - 31 )
Partition 30 (D.49887_32 - 32 )
Partition 31 (D.49888_33 - 33 )
Partition 32 (D.49889_34 - 34 )
Partition 33 (D.44_36 - 36 )
Partition 34 (network.43_37 - 37 )
Partition 35 (D.49891_38 - 38 )
Partition 36 (D.49892_39 - 39 )
Partition 37 (D.49893_40 - 40 )
Partition 38 (D.49894_41 - 41 )
Partition 39 (D.49895_42 - 42 )
Partition 40 (D.49896_43 - 43 )
Partition 41 (D.49897_44 - 44 )
Partition 42 (debug.47_47 - 47 )
Partition 43 (network.48_48 - 48 )
Partition 44 (D.49_49 - 49 )
Partition 45 (D.49906_50 - 50 )
Partition 46 (historylength.50_51 - 51 )
Partition 47 (D.49908_52 - 52 )
Partition 48 (D.49909_53 - 53 )
Partition 49 (D.49910_54 - 54 )
Partition 50 (D.49911_55 - 55 )
Partition 51 (debug.51_56 - 56 )
Partition 52 (debug.52_57 - 57 )
Partition 53 (input_list_size.53_58 - 58 )
Partition 54 (output_list_size.54_59 - 59 )
Partition 55 (D.49920_60 - 60 )
Partition 56 (D.49921_61 - 61 )
Partition 57 (network_size.55_62 - 62 )
Partition 58 (output_list_size.56_63 - 63 )
Partition 59 (input_list_size.57_64 - 64 )
Partition 60 (D.49927_65 - 65 )
Partition 61 (D.49928_66 - 66 )
Partition 62 (network_size.58_67 - 67 )
Partition 63 (D.49930_68 - 68 )
Partition 64 (D.49931_69 - 69 )

network_init ()
{
  unsigned int j;
  unsigned int i;
  const char * restrict D.49931;
  unsigned int D.49930;
  unsigned int network_size.58;
  unsigned int D.49928;
  int D.49927;
  int input_list_size.57;
  int output_list_size.56;
  unsigned int network_size.55;
  unsigned int D.49921;
  int D.49920;
  int output_list_size.54;
  int input_list_size.53;
  int debug.52;
  int debug.51;
  const char * restrict D.49911;
  long unsigned int D.49910;
  long unsigned int D.49909;
  long unsigned int D.49908;
  int historylength.50;
  long unsigned int D.49906;
  unsigned int D.49;
  double * * network.48;
  int debug.47;
  unsigned int historylength.46;
  int historylength.45;
  unsigned int D.44;
  double * D.49897;
  long unsigned int D.49896;
  long unsigned int D.49895;
  double * D.49894;
  double * * D.49893;
  long unsigned int D.49892;
  long unsigned int D.49891;
  double * * network.43;
  double * D.49889;
  void * D.49888;
  long unsigned int D.49887;
  long unsigned int D.49886;
  unsigned int D.42;
  double * * D.49884;
  long unsigned int D.49883;
  long unsigned int D.49882;
  double * * network.41;
  double * * network.40;
  void * D.49879;
  long unsigned int D.49878;
  long unsigned int D.49877;
  int historylength.39;
  const char * restrict D.49875;
  int historylength.38;
  unsigned int network_size.37;
  int debug.36;
  unsigned int D.35;
  unsigned int D.49868;
  unsigned int network_size.34;
  int historylength.33;
  unsigned int network_size.32;
  unsigned int output_list_size.31;
  int output_list_size.30;
  unsigned int network_size.29;
  unsigned int input_list_size.28;
  int input_list_size.27;
  unsigned int network_size.26;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  network_size.26_3 = network_size;
  if (network_size.26_3 <= 1)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  goto <bb 27>;
  # SUCC: 27 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  input_list_size.27_4 = input_list_size;
  input_list_size.28_5 = (unsigned int) input_list_size.27_4;
  network_size.29_6 = network_size;
  if (input_list_size.28_5 > network_size.29_6)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  goto <bb 27>;
  # SUCC: 27 (fallthru)

  # BLOCK 6
  # PRED: 4 (false)
  output_list_size.30_7 = output_list_size;
  output_list_size.31_8 = (unsigned int) output_list_size.30_7;
  network_size.32_9 = network_size;
  if (output_list_size.31_8 > network_size.32_9)
    goto <bb 7>;
  else
    goto <bb 8>;
  # SUCC: 7 (true) 8 (false)

  # BLOCK 7
  # PRED: 6 (true)
  goto <bb 27>;
  # SUCC: 27 (fallthru)

  # BLOCK 8
  # PRED: 6 (false)
  historylength.33_10 = historylength;
  if (historylength.33_10 == 0)
    goto <bb 9>;
  else
    goto <bb 10>;
  # SUCC: 9 (true) 10 (false)

  # BLOCK 9
  # PRED: 8 (true)
  goto <bb 27>;
  # SUCC: 27 (fallthru)

  # BLOCK 10
  # PRED: 8 (false)
  network_size.34_11 = network_size;
  D.49868_12 = network_size.34_11 * 2;
  D.35_13 = D.49868_12 + 1;
  D = D.35_13;
  debug.36_14 = debug;
  if (debug.36_14 != 0)
    goto <bb 11>;
  else
    goto <bb 12>;
  # SUCC: 11 (true) 12 (false)

  # BLOCK 11
  # PRED: 10 (true)
  network_size.37_15 = network_size;
  historylength.38_16 = historylength;
  D.49875_17 = (const char * restrict) &"Initializing network with parameters:\n\t\t\thistory length = %d\n\t\t\tnetwork size = %u\n"[0];
  printf (D.49875_17, historylength.38_16, network_size.37_15);
  # SUCC: 12 (fallthru)

  # BLOCK 12
  # PRED: 10 (false) 11 (fallthru)
  historylength.39_18 = historylength;
  D.49877_19 = (long unsigned int) historylength.39_18;
  D.49878_20 = D.49877_19 * 8;
  D.49879_21 = malloc (D.49878_20);
  network.40_22 = (double * *) D.49879_21;
  network = network.40_22;
  i_23 = 0;
  goto <bb 17>;
  # SUCC: 17 (fallthru)

  # BLOCK 13
  # PRED: 17 (true)
  network.41_26 = network;
  D.49882_27 = (long unsigned int) i_1;
  D.49883_28 = D.49882_27 * 8;
  D.49884_29 = network.41_26 + D.49883_28;
  D.42_30 = D;
  D.49886_31 = (long unsigned int) D.42_30;
  D.49887_32 = D.49886_31 * 8;
  D.49888_33 = malloc (D.49887_32);
  D.49889_34 = (double *) D.49888_33;
  *D.49884_29 = D.49889_34;
  j_35 = 0;
  goto <bb 15>;
  # SUCC: 15 (fallthru)

  # BLOCK 14
  # PRED: 15 (true)
  network.43_37 = network;
  D.49891_38 = (long unsigned int) i_1;
  D.49892_39 = D.49891_38 * 8;
  D.49893_40 = network.43_37 + D.49892_39;
  D.49894_41 = *D.49893_40;
  D.49895_42 = (long unsigned int) j_2;
  D.49896_43 = D.49895_42 * 8;
  D.49897_44 = D.49894_41 + D.49896_43;
  *D.49897_44 = 0.0;
  j_45 = j_2 + 1;
  # SUCC: 15 (fallthru)

  # BLOCK 15
  # PRED: 13 (fallthru) 14 (fallthru)
  # j_2 = PHI <j_35(13), j_45(14)>
  D.44_36 = D;
  if (j_2 < D.44_36)
    goto <bb 14>;
  else
    goto <bb 16>;
  # SUCC: 14 (true) 16 (false)

  # BLOCK 16
  # PRED: 15 (false)
  i_46 = i_1 + 1;
  # SUCC: 17 (fallthru)

  # BLOCK 17
  # PRED: 12 (fallthru) 16 (fallthru)
  # i_1 = PHI <i_23(12), i_46(16)>
  historylength.45_24 = historylength;
  historylength.46_25 = (unsigned int) historylength.45_24;
  if (historylength.46_25 > i_1)
    goto <bb 13>;
  else
    goto <bb 18>;
  # SUCC: 13 (true) 18 (false)

  # BLOCK 18
  # PRED: 17 (false)
  debug.47_47 = debug;
  if (debug.47_47 != 0)
    goto <bb 19>;
  else
    goto <bb 20>;
  # SUCC: 19 (true) 20 (false)

  # BLOCK 19
  # PRED: 18 (true)
  network.48_48 = network;
  D.49_49 = D;
  D.49906_50 = (long unsigned int) D.49_49;
  historylength.50_51 = historylength;
  D.49908_52 = (long unsigned int) historylength.50_51;
  D.49909_53 = D.49906_50 * D.49908_52;
  D.49910_54 = D.49909_53 * 8;
  D.49911_55 = (const char * restrict) &"Network initialized:\n\t\t\t%ld @%p\n"[0];
  printf (D.49911_55, D.49910_54, network.48_48);
  # SUCC: 20 (fallthru)

  # BLOCK 20
  # PRED: 18 (false) 19 (fallthru)
  debug.51_56 = debug;
  if (debug.51_56 != 0)
    goto <bb 21>;
  else
    goto <bb 22>;
  # SUCC: 21 (true) 22 (false)

  # BLOCK 21
  # PRED: 20 (true)
  __builtin_puts (&"Setting inputs to network"[0]);
  # SUCC: 22 (fallthru)

  # BLOCK 22
  # PRED: 20 (false) 21 (fallthru)
  update_input ();
  debug.52_57 = debug;
  if (debug.52_57 != 0)
    goto <bb 23>;
  else
    goto <bb 24>;
  # SUCC: 23 (true) 24 (false)

  # BLOCK 23
  # PRED: 22 (true)
  __builtin_puts (&"Successfully set all inputs"[0]);
  # SUCC: 24 (fallthru)

  # BLOCK 24
  # PRED: 22 (false) 23 (fallthru)
  input_list_size.53_58 = input_list_size;
  output_list_size.54_59 = output_list_size;
  D.49920_60 = input_list_size.53_58 + output_list_size.54_59;
  D.49921_61 = (unsigned int) D.49920_60;
  network_size.55_62 = network_size;
  if (D.49921_61 > network_size.55_62)
    goto <bb 25>;
  else
    goto <bb 26>;
  # SUCC: 25 (true) 26 (false)

  # BLOCK 25
  # PRED: 24 (true)
  output_list_size.56_63 = output_list_size;
  input_list_size.57_64 = input_list_size;
  D.49927_65 = output_list_size.56_63 + input_list_size.57_64;
  D.49928_66 = (unsigned int) D.49927_65;
  network_size.58_67 = network_size;
  D.49930_68 = D.49928_66 - network_size.58_67;
  D.49931_69 = (const char * restrict) &"%u overlapping input and output\n"[0];
  printf (D.49931_69, D.49930_68);
  # SUCC: 26 (fallthru)

  # BLOCK 26
  # PRED: 24 (false) 25 (fallthru)
  W_init ();
  # SUCC: 27 (fallthru)

  # BLOCK 27
  # PRED: 3 (fallthru) 5 (fallthru) 7 (fallthru) 9 (fallthru) 26 (fallthru)
  return;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; network_size.26_3 = network_size;

(insn 5 4 0 node.h:91 (set (reg:SI 58 [ network_size.26 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; if (network_size.26_3 <= 1)

(insn 6 5 7 node.h:91 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 58 [ network_size.26 ])
            (const_int 1 [0x1]))) -1 (nil))

(jump_insn 7 6 0 node.h:91 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 23 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; input_list_size.27_4 = input_list_size;

(insn 13 12 0 node.h:92 (set (reg:SI 59 [ input_list_size.27 ])
        (mem/c/i:SI (symbol_ref:DI ("input_list_size")  <var_decl 0x7f2f6c4b8d20 input_list_size>) [0 input_list_size+0 S4 A32])) -1 (nil))

;; input_list_size.28_5 = (unsigned int) input_list_size.27_4;

(insn 14 13 0 node.h:92 (set (reg:SI 60 [ input_list_size.28 ])
        (reg:SI 59 [ input_list_size.27 ])) -1 (nil))

;; network_size.29_6 = network_size;

(insn 15 14 0 node.h:92 (set (reg:SI 61 [ network_size.29 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; if (input_list_size.28_5 > network_size.29_6)

(insn 16 15 17 node.h:92 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 60 [ input_list_size.28 ])
            (reg:SI 61 [ network_size.29 ]))) -1 (nil))

(jump_insn 17 16 0 node.h:92 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 5

;; Generating RTL for gimple basic block 6

;; 

(code_label 21 20 22 25 "" [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; output_list_size.30_7 = output_list_size;

(insn 23 22 0 node.h:93 (set (reg:SI 62 [ output_list_size.30 ])
        (mem/c/i:SI (symbol_ref:DI ("output_list_size")  <var_decl 0x7f2f6c4b8dc0 output_list_size>) [0 output_list_size+0 S4 A32])) -1 (nil))

;; output_list_size.31_8 = (unsigned int) output_list_size.30_7;

(insn 24 23 0 node.h:93 (set (reg:SI 63 [ output_list_size.31 ])
        (reg:SI 62 [ output_list_size.30 ])) -1 (nil))

;; network_size.32_9 = network_size;

(insn 25 24 0 node.h:93 (set (reg:SI 64 [ network_size.32 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; if (output_list_size.31_8 > network_size.32_9)

(insn 26 25 27 node.h:93 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 63 [ output_list_size.31 ])
            (reg:SI 64 [ network_size.32 ]))) -1 (nil))

(jump_insn 27 26 0 node.h:93 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 7

;; Generating RTL for gimple basic block 8

;; 

(code_label 31 30 32 26 "" [0 uses])

(note 32 31 0 NOTE_INSN_BASIC_BLOCK)

;; historylength.33_10 = historylength;

(insn 33 32 0 node.h:94 (set (reg:SI 65 [ historylength.33 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

;; if (historylength.33_10 == 0)

(insn 34 33 35 node.h:94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 65 [ historylength.33 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 35 34 0 node.h:94 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 9

;; Generating RTL for gimple basic block 10

;; 

(code_label 39 38 40 27 "" [0 uses])

(note 40 39 0 NOTE_INSN_BASIC_BLOCK)

;; network_size.34_11 = network_size;

(insn 41 40 0 node.h:98 (set (reg:SI 66 [ network_size.34 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; D.49868_12 = network_size.34_11 * 2;

(insn 42 41 0 node.h:98 (parallel [
            (set (reg:SI 67 [ D.49868 ])
                (ashift:SI (reg:SI 66 [ network_size.34 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.35_13 = D.49868_12 + 1;

(insn 43 42 0 node.h:98 (parallel [
            (set (reg:SI 68 [ D.35 ])
                (plus:SI (reg:SI 67 [ D.49868 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D = D.35_13;

(insn 44 43 0 node.h:98 (set (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])
        (reg:SI 68 [ D.35 ])) -1 (nil))

;; debug.36_14 = debug;

(insn 45 44 0 node.h:99 (set (reg:SI 69 [ debug.36 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.36_14 != 0)

(insn 46 45 47 node.h:99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69 [ debug.36 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 47 46 0 node.h:99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 11

;; network_size.37_15 = network_size;

(insn 49 48 0 node.h:99 (set (reg:SI 70 [ network_size.37 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; historylength.38_16 = historylength;

(insn 50 49 0 node.h:99 (set (reg:SI 71 [ historylength.38 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

;; D.49875_17 = (const char * restrict) &"Initializing network with parameters:\n\t\t\thistory length = %d\n\t\t\tnetwork size = %u\n"[0];

(insn 51 50 0 node.h:99 (set (reg/f:DI 72 [ D.49875 ])
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <string_cst 0x7f2f6b9e59a0>)) -1 (nil))

;; printf (D.49875_17, historylength.38_16, network_size.37_15);

(insn 52 51 53 node.h:99 (set (reg:SI 1 dx)
        (reg:SI 70 [ network_size.37 ])) -1 (nil))

(insn 53 52 54 node.h:99 (set (reg:SI 4 si)
        (reg:SI 71 [ historylength.38 ])) -1 (nil))

(insn 54 53 55 node.h:99 (set (reg:DI 5 di)
        (reg/f:DI 72 [ D.49875 ])) -1 (nil))

(insn 55 54 56 node.h:99 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 56 55 0 node.h:99 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                    (nil))))))

;; Generating RTL for gimple basic block 12

;; 

(code_label 57 56 58 28 "" [0 uses])

(note 58 57 0 NOTE_INSN_BASIC_BLOCK)

;; historylength.39_18 = historylength;

(insn 59 58 0 node.h:104 (set (reg:SI 73 [ historylength.39 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

;; D.49877_19 = (long unsigned int) historylength.39_18;

(insn 60 59 0 node.h:104 (set (reg:DI 74 [ D.49877 ])
        (sign_extend:DI (reg:SI 73 [ historylength.39 ]))) -1 (nil))

;; D.49878_20 = D.49877_19 * 8;

(insn 61 60 0 node.h:104 (parallel [
            (set (reg:DI 75 [ D.49878 ])
                (ashift:DI (reg:DI 74 [ D.49877 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49879_21 = malloc (D.49878_20);

(insn 62 61 63 node.h:104 (set (reg:DI 5 di)
        (reg:DI 75 [ D.49878 ])) -1 (nil))

(call_insn 63 62 64 node.h:104 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f2f6d770700 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 64 63 65 node.h:104 (set (reg/f:DI 121)
        (reg:DI 0 ax)) -1 (expr_list:REG_NOALIAS (reg/f:DI 121)
        (nil)))

(insn 65 64 0 node.h:104 (set (reg/f:DI 76 [ D.49879 ])
        (reg/f:DI 121)) -1 (nil))

;; network.40_22 = (double * *) D.49879_21;

(insn 66 65 0 node.h:104 (set (reg/f:DI 77 [ network.40 ])
        (reg/f:DI 76 [ D.49879 ])) -1 (nil))

;; network = network.40_22;

(insn 67 66 0 node.h:104 (set (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])
        (reg/f:DI 77 [ network.40 ])) -1 (nil))

;; i_23 = 0;

(insn 68 67 0 node.h:105 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 13

;; network.41_26 = network;

(insn 72 71 0 node.h:108 (set (reg/f:DI 80 [ network.41 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

;; D.49882_27 = (long unsigned int) i_1;

(insn 73 72 0 node.h:108 (set (reg:DI 81 [ D.49882 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

;; D.49883_28 = D.49882_27 * 8;

(insn 74 73 0 node.h:108 (parallel [
            (set (reg:DI 82 [ D.49883 ])
                (ashift:DI (reg:DI 81 [ D.49882 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49884_29 = network.41_26 + D.49883_28;

(insn 75 74 0 node.h:108 (parallel [
            (set (reg/f:DI 83 [ D.49884 ])
                (plus:DI (reg/f:DI 80 [ network.41 ])
                    (reg:DI 82 [ D.49883 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.42_30 = D;

(insn 76 75 0 node.h:108 (set (reg:SI 84 [ D.42 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

;; D.49886_31 = (long unsigned int) D.42_30;

(insn 77 76 0 node.h:108 (set (reg:DI 85 [ D.49886 ])
        (zero_extend:DI (reg:SI 84 [ D.42 ]))) -1 (nil))

;; D.49887_32 = D.49886_31 * 8;

(insn 78 77 0 node.h:108 (parallel [
            (set (reg:DI 86 [ D.49887 ])
                (ashift:DI (reg:DI 85 [ D.49886 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49888_33 = malloc (D.49887_32);

(insn 79 78 80 node.h:108 (set (reg:DI 5 di)
        (reg:DI 86 [ D.49887 ])) -1 (nil))

(call_insn 80 79 81 node.h:108 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f2f6d770700 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 81 80 82 node.h:108 (set (reg/f:DI 122)
        (reg:DI 0 ax)) -1 (expr_list:REG_NOALIAS (reg/f:DI 122)
        (nil)))

(insn 82 81 0 node.h:108 (set (reg/f:DI 87 [ D.49888 ])
        (reg/f:DI 122)) -1 (nil))

;; D.49889_34 = (double *) D.49888_33;

(insn 83 82 0 node.h:108 (set (reg/f:DI 88 [ D.49889 ])
        (reg/f:DI 87 [ D.49888 ])) -1 (nil))

;; *D.49884_29 = D.49889_34;

(insn 84 83 0 node.h:108 (set (mem/f:DI (reg/f:DI 83 [ D.49884 ]) [0 S8 A64])
        (reg/f:DI 88 [ D.49889 ])) -1 (nil))

;; j_35 = 0;

(insn 85 84 0 node.h:109 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 14

;; network.43_37 = network;

(insn 89 88 0 node.h:111 (set (reg/f:DI 90 [ network.43 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

;; D.49891_38 = (long unsigned int) i_1;

(insn 90 89 0 node.h:111 (set (reg:DI 91 [ D.49891 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

;; D.49892_39 = D.49891_38 * 8;

(insn 91 90 0 node.h:111 (parallel [
            (set (reg:DI 92 [ D.49892 ])
                (ashift:DI (reg:DI 91 [ D.49891 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49893_40 = network.43_37 + D.49892_39;

(insn 92 91 0 node.h:111 (parallel [
            (set (reg/f:DI 93 [ D.49893 ])
                (plus:DI (reg/f:DI 90 [ network.43 ])
                    (reg:DI 92 [ D.49892 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49894_41 = *D.49893_40;

(insn 93 92 0 node.h:111 (set (reg/f:DI 94 [ D.49894 ])
        (mem/f:DI (reg/f:DI 93 [ D.49893 ]) [0 S8 A64])) -1 (nil))

;; D.49895_42 = (long unsigned int) j_2;

(insn 94 93 0 node.h:111 (set (reg:DI 95 [ D.49895 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) -1 (nil))

;; D.49896_43 = D.49895_42 * 8;

(insn 95 94 0 node.h:111 (parallel [
            (set (reg:DI 96 [ D.49896 ])
                (ashift:DI (reg:DI 95 [ D.49895 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49897_44 = D.49894_41 + D.49896_43;

(insn 96 95 0 node.h:111 (parallel [
            (set (reg/f:DI 97 [ D.49897 ])
                (plus:DI (reg/f:DI 94 [ D.49894 ])
                    (reg:DI 96 [ D.49896 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; *D.49897_44 = 0.0;

(insn 97 96 98 node.h:111 (set (reg:DF 123)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0 S8 A64])) -1 (nil))

(insn 98 97 0 node.h:111 (set (mem:DF (reg/f:DI 97 [ D.49897 ]) [0 S8 A64])
        (reg:DF 123)) -1 (nil))

;; j_45 = j_2 + 1;

(insn 99 98 0 node.h:109 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 100 99 101 30 "" [0 uses])

(note 101 100 0 NOTE_INSN_BASIC_BLOCK)

;; D.44_36 = D;

(insn 102 101 0 node.h:109 (set (reg:SI 89 [ D.44 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

;; if (j_2 < D.44_36)

(insn 104 102 105 node.h:109 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
            (reg:SI 89 [ D.44 ]))) -1 (nil))

(jump_insn 105 104 0 node.h:109 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 16

;; i_46 = i_1 + 1;

(insn 107 106 0 node.h:105 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 108 107 109 29 "" [0 uses])

(note 109 108 0 NOTE_INSN_BASIC_BLOCK)

;; historylength.45_24 = historylength;

(insn 110 109 0 node.h:105 (set (reg:SI 78 [ historylength.45 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

;; historylength.46_25 = (unsigned int) historylength.45_24;

(insn 111 110 0 node.h:105 (set (reg:SI 79 [ historylength.46 ])
        (reg:SI 78 [ historylength.45 ])) -1 (nil))

;; if (historylength.46_25 > i_1)

(insn 113 111 114 node.h:105 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ historylength.46 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 114 113 0 node.h:105 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 18

;; debug.47_47 = debug;

(insn 116 115 0 node.h:114 (set (reg:SI 98 [ debug.47 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.47_47 != 0)

(insn 117 116 118 node.h:114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ debug.47 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 118 117 0 node.h:114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 19

;; network.48_48 = network;

(insn 120 119 0 node.h:114 (set (reg/f:DI 99 [ network.48 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

;; D.49_49 = D;

(insn 121 120 0 node.h:116 (set (reg:SI 100 [ D.49 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

;; D.49906_50 = (long unsigned int) D.49_49;

(insn 122 121 0 node.h:116 (set (reg:DI 101 [ D.49906 ])
        (zero_extend:DI (reg:SI 100 [ D.49 ]))) -1 (nil))

;; historylength.50_51 = historylength;

(insn 123 122 0 node.h:116 (set (reg:SI 102 [ historylength.50 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

;; D.49908_52 = (long unsigned int) historylength.50_51;

(insn 124 123 0 node.h:116 (set (reg:DI 103 [ D.49908 ])
        (sign_extend:DI (reg:SI 102 [ historylength.50 ]))) -1 (nil))

;; D.49909_53 = D.49906_50 * D.49908_52;

(insn 125 124 0 node.h:116 (parallel [
            (set (reg:DI 104 [ D.49909 ])
                (mult:DI (reg:DI 101 [ D.49906 ])
                    (reg:DI 103 [ D.49908 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49910_54 = D.49909_53 * 8;

(insn 126 125 0 node.h:114 (parallel [
            (set (reg:DI 105 [ D.49910 ])
                (ashift:DI (reg:DI 104 [ D.49909 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49911_55 = (const char * restrict) &"Network initialized:\n\t\t\t%ld @%p\n"[0];

(insn 127 126 0 node.h:114 (set (reg/f:DI 106 [ D.49911 ])
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <string_cst 0x7f2f6ba054c0>)) -1 (nil))

;; printf (D.49911_55, D.49910_54, network.48_48);

(insn 128 127 129 node.h:114 (set (reg:DI 1 dx)
        (reg/f:DI 99 [ network.48 ])) -1 (nil))

(insn 129 128 130 node.h:114 (set (reg:DI 4 si)
        (reg:DI 105 [ D.49910 ])) -1 (nil))

(insn 130 129 131 node.h:114 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.49911 ])) -1 (nil))

(insn 131 130 132 node.h:114 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 132 131 0 node.h:114 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))

;; Generating RTL for gimple basic block 20

;; 

(code_label 133 132 134 33 "" [0 uses])

(note 134 133 0 NOTE_INSN_BASIC_BLOCK)

;; debug.51_56 = debug;

(insn 135 134 0 node.h:117 (set (reg:SI 107 [ debug.51 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.51_56 != 0)

(insn 136 135 137 node.h:117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ debug.51 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 137 136 0 node.h:117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 21

;; __builtin_puts (&"Setting inputs to network"[0]);

(insn 139 138 140 node.h:117 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <string_cst 0x7f2f6b9d3930>)) -1 (nil))

(call_insn 140 139 0 node.h:117 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 22

;; 

(code_label 141 140 142 34 "" [0 uses])

(note 142 141 0 NOTE_INSN_BASIC_BLOCK)

;; update_input ();

(insn 143 142 144 node.h:118 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 144 143 0 node.h:118 (call (mem:QI (symbol_ref:DI ("update_input") [flags 0x3]  <function_decl 0x7f2f6c26e900 update_input>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

;; debug.52_57 = debug;

(insn 145 144 0 node.h:119 (set (reg:SI 108 [ debug.52 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.52_57 != 0)

(insn 146 145 147 node.h:119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ debug.52 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 147 146 0 node.h:119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 23

;; __builtin_puts (&"Successfully set all inputs"[0]);

(insn 149 148 150 node.h:119 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <string_cst 0x7f2f6ba05640>)) -1 (nil))

(call_insn 150 149 0 node.h:119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 24

;; 

(code_label 151 150 152 35 "" [0 uses])

(note 152 151 0 NOTE_INSN_BASIC_BLOCK)

;; input_list_size.53_58 = input_list_size;

(insn 153 152 0 node.h:120 (set (reg:SI 109 [ input_list_size.53 ])
        (mem/c/i:SI (symbol_ref:DI ("input_list_size")  <var_decl 0x7f2f6c4b8d20 input_list_size>) [0 input_list_size+0 S4 A32])) -1 (nil))

;; output_list_size.54_59 = output_list_size;

(insn 154 153 0 node.h:120 (set (reg:SI 110 [ output_list_size.54 ])
        (mem/c/i:SI (symbol_ref:DI ("output_list_size")  <var_decl 0x7f2f6c4b8dc0 output_list_size>) [0 output_list_size+0 S4 A32])) -1 (nil))

;; D.49920_60 = input_list_size.53_58 + output_list_size.54_59;

(insn 155 154 0 node.h:120 (parallel [
            (set (reg:SI 111 [ D.49920 ])
                (plus:SI (reg:SI 109 [ input_list_size.53 ])
                    (reg:SI 110 [ output_list_size.54 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49921_61 = (unsigned int) D.49920_60;

(insn 156 155 0 node.h:120 (set (reg:SI 112 [ D.49921 ])
        (reg:SI 111 [ D.49920 ])) -1 (nil))

;; network_size.55_62 = network_size;

(insn 157 156 0 node.h:120 (set (reg:SI 113 [ network_size.55 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; if (D.49921_61 > network_size.55_62)

(insn 158 157 159 node.h:120 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 112 [ D.49921 ])
            (reg:SI 113 [ network_size.55 ]))) -1 (nil))

(jump_insn 159 158 0 node.h:120 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 25

;; output_list_size.56_63 = output_list_size;

(insn 161 160 0 node.h:122 (set (reg:SI 114 [ output_list_size.56 ])
        (mem/c/i:SI (symbol_ref:DI ("output_list_size")  <var_decl 0x7f2f6c4b8dc0 output_list_size>) [0 output_list_size+0 S4 A32])) -1 (nil))

;; input_list_size.57_64 = input_list_size;

(insn 162 161 0 node.h:122 (set (reg:SI 115 [ input_list_size.57 ])
        (mem/c/i:SI (symbol_ref:DI ("input_list_size")  <var_decl 0x7f2f6c4b8d20 input_list_size>) [0 input_list_size+0 S4 A32])) -1 (nil))

;; D.49927_65 = output_list_size.56_63 + input_list_size.57_64;

(insn 163 162 0 node.h:122 (parallel [
            (set (reg:SI 116 [ D.49927 ])
                (plus:SI (reg:SI 114 [ output_list_size.56 ])
                    (reg:SI 115 [ input_list_size.57 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49928_66 = (unsigned int) D.49927_65;

(insn 164 163 0 node.h:121 (set (reg:SI 117 [ D.49928 ])
        (reg:SI 116 [ D.49927 ])) -1 (nil))

;; network_size.58_67 = network_size;

(insn 165 164 0 node.h:121 (set (reg:SI 118 [ network_size.58 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; D.49930_68 = D.49928_66 - network_size.58_67;

(insn 166 165 0 node.h:121 (parallel [
            (set (reg:SI 119 [ D.49930 ])
                (minus:SI (reg:SI 117 [ D.49928 ])
                    (reg:SI 118 [ network_size.58 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49931_69 = (const char * restrict) &"%u overlapping input and output\n"[0];

(insn 167 166 0 node.h:121 (set (reg/f:DI 120 [ D.49931 ])
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <string_cst 0x7f2f6ba05700>)) -1 (nil))

;; printf (D.49931_69, D.49930_68);

(insn 168 167 169 node.h:121 (set (reg:SI 4 si)
        (reg:SI 119 [ D.49930 ])) -1 (nil))

(insn 169 168 170 node.h:121 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.49931 ])) -1 (nil))

(insn 170 169 171 node.h:121 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 171 170 0 node.h:121 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (nil)))))

;; Generating RTL for gimple basic block 26

;; 

(code_label 172 171 173 36 "" [0 uses])

(note 173 172 0 NOTE_INSN_BASIC_BLOCK)

;; W_init ();

(insn 174 173 175 node.h:124 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 175 174 0 node.h:124 (call (mem:QI (symbol_ref:DI ("W_init") [flags 0x3]  <function_decl 0x7f2f6c26e600 W_init>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

;; Generating RTL for gimple basic block 27

;; 

(code_label 176 175 177 24 "" [0 uses])

(note 177 176 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 node.h:91 (set (reg:SI 58 [ network_size.26 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 6 5 7 3 node.h:91 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 58 [ network_size.26 ])
            (const_int 1 [0x1]))) -1 (nil))

(jump_insn 7 6 8 3 node.h:91 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 11)
            (pc))) -1 (nil)
 -> 11)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(jump_insn 9 8 10 4 node.h:91 (set (pc)
        (label_ref 176)) -1 (nil)
 -> 176)
;; End of basic block 4 -> ( 28)

;; Succ edge  28

(barrier 10 9 11)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 11 10 12 5 23 "" [1 uses])

(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 5 node.h:92 (set (reg:SI 59 [ input_list_size.27 ])
        (mem/c/i:SI (symbol_ref:DI ("input_list_size")  <var_decl 0x7f2f6c4b8d20 input_list_size>) [0 input_list_size+0 S4 A32])) -1 (nil))

(insn 14 13 15 5 node.h:92 (set (reg:SI 60 [ input_list_size.28 ])
        (reg:SI 59 [ input_list_size.27 ])) -1 (nil))

(insn 15 14 16 5 node.h:92 (set (reg:SI 61 [ network_size.29 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 16 15 17 5 node.h:92 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 60 [ input_list_size.28 ])
            (reg:SI 61 [ network_size.29 ]))) -1 (nil))

(jump_insn 17 16 18 5 node.h:92 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) -1 (nil)
 -> 21)
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 (fallthru)
;; Succ edge  7

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 18 17 19 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 19 18 20 6 node.h:92 (set (pc)
        (label_ref 176)) -1 (nil)
 -> 176)
;; End of basic block 6 -> ( 28)

;; Succ edge  28

(barrier 20 19 21)

;; Start of basic block ( 5) -> 7
;; Pred edge  5
(code_label 21 20 22 7 25 "" [1 uses])

(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 23 22 24 7 node.h:93 (set (reg:SI 62 [ output_list_size.30 ])
        (mem/c/i:SI (symbol_ref:DI ("output_list_size")  <var_decl 0x7f2f6c4b8dc0 output_list_size>) [0 output_list_size+0 S4 A32])) -1 (nil))

(insn 24 23 25 7 node.h:93 (set (reg:SI 63 [ output_list_size.31 ])
        (reg:SI 62 [ output_list_size.30 ])) -1 (nil))

(insn 25 24 26 7 node.h:93 (set (reg:SI 64 [ network_size.32 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 26 25 27 7 node.h:93 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 63 [ output_list_size.31 ])
            (reg:SI 64 [ network_size.32 ]))) -1 (nil))

(jump_insn 27 26 28 7 node.h:93 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 31)
            (pc))) -1 (nil)
 -> 31)
;; End of basic block 7 -> ( 8 9)

;; Succ edge  8 (fallthru)
;; Succ edge  9

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 28 27 29 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(jump_insn 29 28 30 8 node.h:93 (set (pc)
        (label_ref 176)) -1 (nil)
 -> 176)
;; End of basic block 8 -> ( 28)

;; Succ edge  28

(barrier 30 29 31)

;; Start of basic block ( 7) -> 9
;; Pred edge  7
(code_label 31 30 32 9 26 "" [1 uses])

(note 32 31 33 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 9 node.h:94 (set (reg:SI 65 [ historylength.33 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

(insn 34 33 35 9 node.h:94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 65 [ historylength.33 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 35 34 36 9 node.h:94 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 39)
            (pc))) -1 (nil)
 -> 39)
;; End of basic block 9 -> ( 10 11)

;; Succ edge  10 (fallthru)
;; Succ edge  11

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(note 36 35 37 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(jump_insn 37 36 38 10 node.h:94 (set (pc)
        (label_ref 176)) -1 (nil)
 -> 176)
;; End of basic block 10 -> ( 28)

;; Succ edge  28

(barrier 38 37 39)

;; Start of basic block ( 9) -> 11
;; Pred edge  9
(code_label 39 38 40 11 27 "" [1 uses])

(note 40 39 41 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 41 40 42 11 node.h:98 (set (reg:SI 66 [ network_size.34 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 42 41 43 11 node.h:98 (parallel [
            (set (reg:SI 67 [ D.49868 ])
                (ashift:SI (reg:SI 66 [ network_size.34 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 43 42 44 11 node.h:98 (parallel [
            (set (reg:SI 68 [ D.35 ])
                (plus:SI (reg:SI 67 [ D.49868 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 44 43 45 11 node.h:98 (set (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])
        (reg:SI 68 [ D.35 ])) -1 (nil))

(insn 45 44 46 11 node.h:99 (set (reg:SI 69 [ debug.36 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 46 45 47 11 node.h:99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 69 [ debug.36 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 47 46 48 11 node.h:99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 57)
            (pc))) -1 (nil)
 -> 57)
;; End of basic block 11 -> ( 12 13)

;; Succ edge  12 (fallthru)
;; Succ edge  13

;; Start of basic block ( 11) -> 12
;; Pred edge  11 (fallthru)
(note 48 47 49 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 49 48 50 12 node.h:99 (set (reg:SI 70 [ network_size.37 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 50 49 51 12 node.h:99 (set (reg:SI 71 [ historylength.38 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

(insn 51 50 52 12 node.h:99 (set (reg/f:DI 72 [ D.49875 ])
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <string_cst 0x7f2f6b9e59a0>)) -1 (nil))

(insn 52 51 53 12 node.h:99 (set (reg:SI 1 dx)
        (reg:SI 70 [ network_size.37 ])) -1 (nil))

(insn 53 52 54 12 node.h:99 (set (reg:SI 4 si)
        (reg:SI 71 [ historylength.38 ])) -1 (nil))

(insn 54 53 55 12 node.h:99 (set (reg:DI 5 di)
        (reg/f:DI 72 [ D.49875 ])) -1 (nil))

(insn 55 54 56 12 node.h:99 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 56 55 57 12 node.h:99 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                    (nil))))))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 (fallthru)

;; Start of basic block ( 11 12) -> 13
;; Pred edge  11
;; Pred edge  12 (fallthru)
(code_label 57 56 58 13 28 "" [1 uses])

(note 58 57 59 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 59 58 60 13 node.h:104 (set (reg:SI 73 [ historylength.39 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

(insn 60 59 61 13 node.h:104 (set (reg:DI 74 [ D.49877 ])
        (sign_extend:DI (reg:SI 73 [ historylength.39 ]))) -1 (nil))

(insn 61 60 62 13 node.h:104 (parallel [
            (set (reg:DI 75 [ D.49878 ])
                (ashift:DI (reg:DI 74 [ D.49877 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 62 61 63 13 node.h:104 (set (reg:DI 5 di)
        (reg:DI 75 [ D.49878 ])) -1 (nil))

(call_insn 63 62 64 13 node.h:104 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f2f6d770700 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 64 63 65 13 node.h:104 (set (reg/f:DI 121)
        (reg:DI 0 ax)) -1 (expr_list:REG_NOALIAS (reg/f:DI 121)
        (nil)))

(insn 65 64 66 13 node.h:104 (set (reg/f:DI 76 [ D.49879 ])
        (reg/f:DI 121)) -1 (nil))

(insn 66 65 67 13 node.h:104 (set (reg/f:DI 77 [ network.40 ])
        (reg/f:DI 76 [ D.49879 ])) -1 (nil))

(insn 67 66 68 13 node.h:104 (set (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])
        (reg/f:DI 77 [ network.40 ])) -1 (nil))

(insn 68 67 69 13 node.h:105 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 69 68 70 13 node.h:105 (set (pc)
        (label_ref 108)) -1 (nil)
 -> 108)
;; End of basic block 13 -> ( 18)

;; Succ edge  18

(barrier 70 69 112)

;; Start of basic block ( 18) -> 14
;; Pred edge  18
(code_label 112 70 71 14 32 "" [1 uses])

(note 71 112 72 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 72 71 73 14 node.h:108 (set (reg/f:DI 80 [ network.41 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

(insn 73 72 74 14 node.h:108 (set (reg:DI 81 [ D.49882 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(insn 74 73 75 14 node.h:108 (parallel [
            (set (reg:DI 82 [ D.49883 ])
                (ashift:DI (reg:DI 81 [ D.49882 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 75 74 76 14 node.h:108 (parallel [
            (set (reg/f:DI 83 [ D.49884 ])
                (plus:DI (reg/f:DI 80 [ network.41 ])
                    (reg:DI 82 [ D.49883 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 76 75 77 14 node.h:108 (set (reg:SI 84 [ D.42 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

(insn 77 76 78 14 node.h:108 (set (reg:DI 85 [ D.49886 ])
        (zero_extend:DI (reg:SI 84 [ D.42 ]))) -1 (nil))

(insn 78 77 79 14 node.h:108 (parallel [
            (set (reg:DI 86 [ D.49887 ])
                (ashift:DI (reg:DI 85 [ D.49886 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 79 78 80 14 node.h:108 (set (reg:DI 5 di)
        (reg:DI 86 [ D.49887 ])) -1 (nil))

(call_insn 80 79 81 14 node.h:108 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f2f6d770700 malloc>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 81 80 82 14 node.h:108 (set (reg/f:DI 122)
        (reg:DI 0 ax)) -1 (expr_list:REG_NOALIAS (reg/f:DI 122)
        (nil)))

(insn 82 81 83 14 node.h:108 (set (reg/f:DI 87 [ D.49888 ])
        (reg/f:DI 122)) -1 (nil))

(insn 83 82 84 14 node.h:108 (set (reg/f:DI 88 [ D.49889 ])
        (reg/f:DI 87 [ D.49888 ])) -1 (nil))

(insn 84 83 85 14 node.h:108 (set (mem/f:DI (reg/f:DI 83 [ D.49884 ]) [0 S8 A64])
        (reg/f:DI 88 [ D.49889 ])) -1 (nil))

(insn 85 84 86 14 node.h:109 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 86 85 87 14 node.h:109 (set (pc)
        (label_ref 100)) -1 (nil)
 -> 100)
;; End of basic block 14 -> ( 16)

;; Succ edge  16

(barrier 87 86 103)

;; Start of basic block ( 16) -> 15
;; Pred edge  16
(code_label 103 87 88 15 31 "" [1 uses])

(note 88 103 89 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 15 node.h:111 (set (reg/f:DI 90 [ network.43 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

(insn 90 89 91 15 node.h:111 (set (reg:DI 91 [ D.49891 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(insn 91 90 92 15 node.h:111 (parallel [
            (set (reg:DI 92 [ D.49892 ])
                (ashift:DI (reg:DI 91 [ D.49891 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 92 91 93 15 node.h:111 (parallel [
            (set (reg/f:DI 93 [ D.49893 ])
                (plus:DI (reg/f:DI 90 [ network.43 ])
                    (reg:DI 92 [ D.49892 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 93 92 94 15 node.h:111 (set (reg/f:DI 94 [ D.49894 ])
        (mem/f:DI (reg/f:DI 93 [ D.49893 ]) [0 S8 A64])) -1 (nil))

(insn 94 93 95 15 node.h:111 (set (reg:DI 95 [ D.49895 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32]))) -1 (nil))

(insn 95 94 96 15 node.h:111 (parallel [
            (set (reg:DI 96 [ D.49896 ])
                (ashift:DI (reg:DI 95 [ D.49895 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 96 95 97 15 node.h:111 (parallel [
            (set (reg/f:DI 97 [ D.49897 ])
                (plus:DI (reg/f:DI 94 [ D.49894 ])
                    (reg:DI 96 [ D.49896 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 97 96 98 15 node.h:111 (set (reg:DF 123)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0 S8 A64])) -1 (nil))

(insn 98 97 99 15 node.h:111 (set (mem:DF (reg/f:DI 97 [ D.49897 ]) [0 S8 A64])
        (reg:DF 123)) -1 (nil))

(insn 99 98 100 15 node.h:109 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 15 -> ( 16)

;; Succ edge  16 (fallthru)

;; Start of basic block ( 14 15) -> 16
;; Pred edge  14
;; Pred edge  15 (fallthru)
(code_label 100 99 101 16 30 "" [1 uses])

(note 101 100 102 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 102 101 104 16 node.h:109 (set (reg:SI 89 [ D.44 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

(insn 104 102 105 16 node.h:109 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
            (reg:SI 89 [ D.44 ]))) -1 (nil))

(jump_insn 105 104 106 16 node.h:109 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 103)
            (pc))) -1 (nil)
 -> 103)
;; End of basic block 16 -> ( 15 17)

;; Succ edge  15
;; Succ edge  17 (fallthru)

;; Start of basic block ( 16) -> 17
;; Pred edge  16 (fallthru)
(note 106 105 107 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 107 106 108 17 node.h:105 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 17 -> ( 18)

;; Succ edge  18 (fallthru)

;; Start of basic block ( 13 17) -> 18
;; Pred edge  13
;; Pred edge  17 (fallthru)
(code_label 108 107 109 18 29 "" [1 uses])

(note 109 108 110 18 [bb 18] NOTE_INSN_BASIC_BLOCK)

(insn 110 109 111 18 node.h:105 (set (reg:SI 78 [ historylength.45 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

(insn 111 110 113 18 node.h:105 (set (reg:SI 79 [ historylength.46 ])
        (reg:SI 78 [ historylength.45 ])) -1 (nil))

(insn 113 111 114 18 node.h:105 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 79 [ historylength.46 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 114 113 115 18 node.h:105 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 112)
            (pc))) -1 (nil)
 -> 112)
;; End of basic block 18 -> ( 14 19)

;; Succ edge  14
;; Succ edge  19 (fallthru)

;; Start of basic block ( 18) -> 19
;; Pred edge  18 (fallthru)
(note 115 114 116 19 [bb 19] NOTE_INSN_BASIC_BLOCK)

(insn 116 115 117 19 node.h:114 (set (reg:SI 98 [ debug.47 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 117 116 118 19 node.h:114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 98 [ debug.47 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 118 117 119 19 node.h:114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 133)
            (pc))) -1 (nil)
 -> 133)
;; End of basic block 19 -> ( 20 21)

;; Succ edge  20 (fallthru)
;; Succ edge  21

;; Start of basic block ( 19) -> 20
;; Pred edge  19 (fallthru)
(note 119 118 120 20 [bb 20] NOTE_INSN_BASIC_BLOCK)

(insn 120 119 121 20 node.h:114 (set (reg/f:DI 99 [ network.48 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

(insn 121 120 122 20 node.h:116 (set (reg:SI 100 [ D.49 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

(insn 122 121 123 20 node.h:116 (set (reg:DI 101 [ D.49906 ])
        (zero_extend:DI (reg:SI 100 [ D.49 ]))) -1 (nil))

(insn 123 122 124 20 node.h:116 (set (reg:SI 102 [ historylength.50 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

(insn 124 123 125 20 node.h:116 (set (reg:DI 103 [ D.49908 ])
        (sign_extend:DI (reg:SI 102 [ historylength.50 ]))) -1 (nil))

(insn 125 124 126 20 node.h:116 (parallel [
            (set (reg:DI 104 [ D.49909 ])
                (mult:DI (reg:DI 101 [ D.49906 ])
                    (reg:DI 103 [ D.49908 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 126 125 127 20 node.h:114 (parallel [
            (set (reg:DI 105 [ D.49910 ])
                (ashift:DI (reg:DI 104 [ D.49909 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 127 126 128 20 node.h:114 (set (reg/f:DI 106 [ D.49911 ])
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <string_cst 0x7f2f6ba054c0>)) -1 (nil))

(insn 128 127 129 20 node.h:114 (set (reg:DI 1 dx)
        (reg/f:DI 99 [ network.48 ])) -1 (nil))

(insn 129 128 130 20 node.h:114 (set (reg:DI 4 si)
        (reg:DI 105 [ D.49910 ])) -1 (nil))

(insn 130 129 131 20 node.h:114 (set (reg:DI 5 di)
        (reg/f:DI 106 [ D.49911 ])) -1 (nil))

(insn 131 130 132 20 node.h:114 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 132 131 133 20 node.h:114 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DI 1 dx))
                    (nil))))))
;; End of basic block 20 -> ( 21)

;; Succ edge  21 (fallthru)

;; Start of basic block ( 19 20) -> 21
;; Pred edge  19
;; Pred edge  20 (fallthru)
(code_label 133 132 134 21 33 "" [1 uses])

(note 134 133 135 21 [bb 21] NOTE_INSN_BASIC_BLOCK)

(insn 135 134 136 21 node.h:117 (set (reg:SI 107 [ debug.51 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 136 135 137 21 node.h:117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 107 [ debug.51 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 137 136 138 21 node.h:117 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 141)
            (pc))) -1 (nil)
 -> 141)
;; End of basic block 21 -> ( 22 23)

;; Succ edge  22 (fallthru)
;; Succ edge  23

;; Start of basic block ( 21) -> 22
;; Pred edge  21 (fallthru)
(note 138 137 139 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(insn 139 138 140 22 node.h:117 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <string_cst 0x7f2f6b9d3930>)) -1 (nil))

(call_insn 140 139 141 22 node.h:117 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 22 -> ( 23)

;; Succ edge  23 (fallthru)

;; Start of basic block ( 21 22) -> 23
;; Pred edge  21
;; Pred edge  22 (fallthru)
(code_label 141 140 142 23 34 "" [1 uses])

(note 142 141 143 23 [bb 23] NOTE_INSN_BASIC_BLOCK)

(insn 143 142 144 23 node.h:118 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 144 143 145 23 node.h:118 (call (mem:QI (symbol_ref:DI ("update_input") [flags 0x3]  <function_decl 0x7f2f6c26e900 update_input>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

(insn 145 144 146 23 node.h:119 (set (reg:SI 108 [ debug.52 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 146 145 147 23 node.h:119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ debug.52 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 147 146 148 23 node.h:119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 151)
            (pc))) -1 (nil)
 -> 151)
;; End of basic block 23 -> ( 24 25)

;; Succ edge  24 (fallthru)
;; Succ edge  25

;; Start of basic block ( 23) -> 24
;; Pred edge  23 (fallthru)
(note 148 147 149 24 [bb 24] NOTE_INSN_BASIC_BLOCK)

(insn 149 148 150 24 node.h:119 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <string_cst 0x7f2f6ba05640>)) -1 (nil))

(call_insn 150 149 151 24 node.h:119 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 24 -> ( 25)

;; Succ edge  25 (fallthru)

;; Start of basic block ( 23 24) -> 25
;; Pred edge  23
;; Pred edge  24 (fallthru)
(code_label 151 150 152 25 35 "" [1 uses])

(note 152 151 153 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(insn 153 152 154 25 node.h:120 (set (reg:SI 109 [ input_list_size.53 ])
        (mem/c/i:SI (symbol_ref:DI ("input_list_size")  <var_decl 0x7f2f6c4b8d20 input_list_size>) [0 input_list_size+0 S4 A32])) -1 (nil))

(insn 154 153 155 25 node.h:120 (set (reg:SI 110 [ output_list_size.54 ])
        (mem/c/i:SI (symbol_ref:DI ("output_list_size")  <var_decl 0x7f2f6c4b8dc0 output_list_size>) [0 output_list_size+0 S4 A32])) -1 (nil))

(insn 155 154 156 25 node.h:120 (parallel [
            (set (reg:SI 111 [ D.49920 ])
                (plus:SI (reg:SI 109 [ input_list_size.53 ])
                    (reg:SI 110 [ output_list_size.54 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 156 155 157 25 node.h:120 (set (reg:SI 112 [ D.49921 ])
        (reg:SI 111 [ D.49920 ])) -1 (nil))

(insn 157 156 158 25 node.h:120 (set (reg:SI 113 [ network_size.55 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 158 157 159 25 node.h:120 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 112 [ D.49921 ])
            (reg:SI 113 [ network_size.55 ]))) -1 (nil))

(jump_insn 159 158 160 25 node.h:120 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 172)
            (pc))) -1 (nil)
 -> 172)
;; End of basic block 25 -> ( 26 27)

;; Succ edge  26 (fallthru)
;; Succ edge  27

;; Start of basic block ( 25) -> 26
;; Pred edge  25 (fallthru)
(note 160 159 161 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(insn 161 160 162 26 node.h:122 (set (reg:SI 114 [ output_list_size.56 ])
        (mem/c/i:SI (symbol_ref:DI ("output_list_size")  <var_decl 0x7f2f6c4b8dc0 output_list_size>) [0 output_list_size+0 S4 A32])) -1 (nil))

(insn 162 161 163 26 node.h:122 (set (reg:SI 115 [ input_list_size.57 ])
        (mem/c/i:SI (symbol_ref:DI ("input_list_size")  <var_decl 0x7f2f6c4b8d20 input_list_size>) [0 input_list_size+0 S4 A32])) -1 (nil))

(insn 163 162 164 26 node.h:122 (parallel [
            (set (reg:SI 116 [ D.49927 ])
                (plus:SI (reg:SI 114 [ output_list_size.56 ])
                    (reg:SI 115 [ input_list_size.57 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 164 163 165 26 node.h:121 (set (reg:SI 117 [ D.49928 ])
        (reg:SI 116 [ D.49927 ])) -1 (nil))

(insn 165 164 166 26 node.h:121 (set (reg:SI 118 [ network_size.58 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 166 165 167 26 node.h:121 (parallel [
            (set (reg:SI 119 [ D.49930 ])
                (minus:SI (reg:SI 117 [ D.49928 ])
                    (reg:SI 118 [ network_size.58 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 167 166 168 26 node.h:121 (set (reg/f:DI 120 [ D.49931 ])
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <string_cst 0x7f2f6ba05700>)) -1 (nil))

(insn 168 167 169 26 node.h:121 (set (reg:SI 4 si)
        (reg:SI 119 [ D.49930 ])) -1 (nil))

(insn 169 168 170 26 node.h:121 (set (reg:DI 5 di)
        (reg/f:DI 120 [ D.49931 ])) -1 (nil))

(insn 170 169 171 26 node.h:121 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 171 170 172 26 node.h:121 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (nil)))))
;; End of basic block 26 -> ( 27)

;; Succ edge  27 (fallthru)

;; Start of basic block ( 25 26) -> 27
;; Pred edge  25
;; Pred edge  26 (fallthru)
(code_label 172 171 173 27 36 "" [1 uses])

(note 173 172 174 27 [bb 27] NOTE_INSN_BASIC_BLOCK)

(insn 174 173 175 27 node.h:124 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 175 174 176 27 node.h:124 (call (mem:QI (symbol_ref:DI ("W_init") [flags 0x3]  <function_decl 0x7f2f6c26e600 W_init>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))
;; End of basic block 27 -> ( 28)

;; Succ edge  28 (fallthru)

;; Start of basic block ( 4 6 8 10 27) -> 28
;; Pred edge  4
;; Pred edge  6
;; Pred edge  8
;; Pred edge  10
;; Pred edge  27 (fallthru)
(code_label 176 175 177 28 24 "" [4 uses])

(note 177 176 178 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 28 -> ( 29)

;; Succ edge  29 (fallthru)

;; Start of basic block ( 28) -> 29
;; Pred edge  28 (fallthru)
(code_label 178 177 179 29 22 "" [0 uses])

(note 179 178 0 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 29 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function network_term (network_term)

network_term ()
{
  unsigned int i;
  int debug.25;
  double * * network.24;
  unsigned int historylength.23;
  int historylength.22;
  double * D.49844;
  double * * D.49843;
  long unsigned int D.49842;
  long unsigned int D.49841;
  double * * network.21;
  int debug.20;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  debug.20_2 = debug;
  if (debug.20_2 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  __builtin_puts (&"Terminating network"[0]);
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (false) 3 (fallthru)
  i_3 = 0;
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 6 (true)
  network.21_6 = network;
  D.49841_7 = (long unsigned int) i_1;
  D.49842_8 = D.49841_7 * 8;
  D.49843_9 = network.21_6 + D.49842_8;
  D.49844_10 = *D.49843_9;
  free (D.49844_10);
  i_11 = i_1 + 1;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  # i_1 = PHI <i_3(4), i_11(5)>
  historylength.22_4 = historylength;
  historylength.23_5 = (unsigned int) historylength.22_4;
  if (historylength.23_5 > i_1)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 (true) 7 (false)

  # BLOCK 7
  # PRED: 6 (false)
  network.24_12 = network;
  free (network.24_12);
  debug.25_13 = debug;
  if (debug.25_13 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 (true) 9 (false)

  # BLOCK 8
  # PRED: 7 (true)
  __builtin_puts (&"Freed up memory"[0]);
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 7 (false) 8 (fallthru)
  W_term ();
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (debug.20_2 - 2 )
Partition 3 (i_3 - 3 )
Partition 4 (historylength.22_4 - 4 )
Partition 5 (historylength.23_5 - 5 )
Partition 6 (network.21_6 - 6 )
Partition 7 (D.49841_7 - 7 )
Partition 8 (D.49842_8 - 8 )
Partition 9 (D.49843_9 - 9 )
Partition 10 (D.49844_10 - 10 )
Partition 11 (i_11 - 11 )
Partition 12 (network.24_12 - 12 )
Partition 13 (debug.25_13 - 13 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_3 - 3 )
Partition 2 (i_11 - 11 )


Live on entry to BB2 : 

Live on entry to BB3 : 

Live on entry to BB4 : 

Live on entry to BB5 : i_1  

Live on entry to BB6 : 

Live on entry to BB7 : 

Live on entry to BB8 : 

Live on entry to BB9 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_11
(2147483646) i_1 <-> i_3

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_3 - 3 )
Partition 2 (i_11 - 11 )

Coalesce list: (1)i_1 & (11)i_11 [map: 0, 2] : Success -> 0
Coalesce list: (1)i_1 & (3)i_3 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (11)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (3)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 3 11 )
Partition 1 (debug.20_2 - 2 )
Partition 2 (historylength.22_4 - 4 )
Partition 3 (historylength.23_5 - 5 )
Partition 4 (network.21_6 - 6 )
Partition 5 (D.49841_7 - 7 )
Partition 6 (D.49842_8 - 8 )
Partition 7 (D.49843_9 - 9 )
Partition 8 (D.49844_10 - 10 )
Partition 9 (network.24_12 - 12 )
Partition 10 (debug.25_13 - 13 )

network_term ()
{
  unsigned int i;
  int debug.25;
  double * * network.24;
  unsigned int historylength.23;
  int historylength.22;
  double * D.49844;
  double * * D.49843;
  long unsigned int D.49842;
  long unsigned int D.49841;
  double * * network.21;
  int debug.20;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  debug.20_2 = debug;
  if (debug.20_2 != 0)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  __builtin_puts (&"Terminating network"[0]);
  # SUCC: 4 (fallthru)

  # BLOCK 4
  # PRED: 2 (false) 3 (fallthru)
  i_3 = 0;
  goto <bb 6>;
  # SUCC: 6 (fallthru)

  # BLOCK 5
  # PRED: 6 (true)
  network.21_6 = network;
  D.49841_7 = (long unsigned int) i_1;
  D.49842_8 = D.49841_7 * 8;
  D.49843_9 = network.21_6 + D.49842_8;
  D.49844_10 = *D.49843_9;
  free (D.49844_10);
  i_11 = i_1 + 1;
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (fallthru) 5 (fallthru)
  # i_1 = PHI <i_3(4), i_11(5)>
  historylength.22_4 = historylength;
  historylength.23_5 = (unsigned int) historylength.22_4;
  if (historylength.23_5 > i_1)
    goto <bb 5>;
  else
    goto <bb 7>;
  # SUCC: 5 (true) 7 (false)

  # BLOCK 7
  # PRED: 6 (false)
  network.24_12 = network;
  free (network.24_12);
  debug.25_13 = debug;
  if (debug.25_13 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 (true) 9 (false)

  # BLOCK 8
  # PRED: 7 (true)
  __builtin_puts (&"Freed up memory"[0]);
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 7 (false) 8 (fallthru)
  W_term ();
  return;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; debug.20_2 = debug;

(insn 5 4 0 node.h:130 (set (reg:SI 58 [ debug.20 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.20_2 != 0)

(insn 6 5 7 node.h:130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 58 [ debug.20 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 7 6 0 node.h:130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; __builtin_puts (&"Terminating network"[0]);

(insn 9 8 10 node.h:130 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <string_cst 0x7f2f6b9d3af0>)) -1 (nil))

(call_insn 10 9 0 node.h:130 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 42 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; i_3 = 0;

(insn 13 12 0 node.h:131 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 5

;; network.21_6 = network;

(insn 17 16 0 node.h:133 (set (reg/f:DI 61 [ network.21 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

;; D.49841_7 = (long unsigned int) i_1;

(insn 18 17 0 node.h:133 (set (reg:DI 62 [ D.49841 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

;; D.49842_8 = D.49841_7 * 8;

(insn 19 18 0 node.h:133 (parallel [
            (set (reg:DI 63 [ D.49842 ])
                (ashift:DI (reg:DI 62 [ D.49841 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49843_9 = network.21_6 + D.49842_8;

(insn 20 19 0 node.h:133 (parallel [
            (set (reg/f:DI 64 [ D.49843 ])
                (plus:DI (reg/f:DI 61 [ network.21 ])
                    (reg:DI 63 [ D.49842 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49844_10 = *D.49843_9;

(insn 21 20 0 node.h:133 (set (reg/f:DI 65 [ D.49844 ])
        (mem/f:DI (reg/f:DI 64 [ D.49843 ]) [0 S8 A64])) -1 (nil))

;; free (D.49844_10);

(insn 22 21 23 node.h:133 (set (reg:DI 5 di)
        (reg/f:DI 65 [ D.49844 ])) -1 (nil))

(call_insn 23 22 0 node.h:133 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f2f6d767c00 free>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; i_11 = i_1 + 1;

(insn 24 23 0 node.h:131 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 25 24 26 43 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; historylength.22_4 = historylength;

(insn 27 26 0 node.h:131 (set (reg:SI 59 [ historylength.22 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

;; historylength.23_5 = (unsigned int) historylength.22_4;

(insn 28 27 0 node.h:131 (set (reg:SI 60 [ historylength.23 ])
        (reg:SI 59 [ historylength.22 ])) -1 (nil))

;; if (historylength.23_5 > i_1)

(insn 30 28 31 node.h:131 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 60 [ historylength.23 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 31 30 0 node.h:131 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 7

;; network.24_12 = network;

(insn 33 32 0 node.h:135 (set (reg/f:DI 66 [ network.24 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

;; free (network.24_12);

(insn 34 33 35 node.h:135 (set (reg:DI 5 di)
        (reg/f:DI 66 [ network.24 ])) -1 (nil))

(call_insn 35 34 0 node.h:135 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f2f6d767c00 free>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; debug.25_13 = debug;

(insn 36 35 0 node.h:136 (set (reg:SI 67 [ debug.25 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.25_13 != 0)

(insn 37 36 38 node.h:136 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 67 [ debug.25 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 38 37 0 node.h:136 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 8

;; __builtin_puts (&"Freed up memory"[0]);

(insn 40 39 41 node.h:136 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <string_cst 0x7f2f6b9c8f00>)) -1 (nil))

(call_insn 41 40 0 node.h:136 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 9

;; 

(code_label 42 41 43 45 "" [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)

;; W_term ();

(insn 44 43 45 node.h:137 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 45 44 0 node.h:137 (call (mem:QI (symbol_ref:DI ("W_term") [flags 0x3]  <function_decl 0x7f2f6c26e700 W_term>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(note 2 3 4 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 4 2 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 5 4 6 3 node.h:130 (set (reg:SI 58 [ debug.20 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 6 5 7 3 node.h:130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 58 [ debug.20 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 7 6 8 3 node.h:130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 11)
            (pc))) -1 (nil)
 -> 11)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 9 8 10 4 node.h:130 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <string_cst 0x7f2f6b9d3af0>)) -1 (nil))

(call_insn 10 9 11 4 node.h:130 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 11 10 12 5 42 "" [1 uses])

(note 12 11 13 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 13 12 14 5 node.h:131 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 14 13 15 5 node.h:131 (set (pc)
        (label_ref 25)) -1 (nil)
 -> 25)
;; End of basic block 5 -> ( 7)

;; Succ edge  7

(barrier 15 14 29)

;; Start of basic block ( 7) -> 6
;; Pred edge  7
(code_label 29 15 16 6 44 "" [1 uses])

(note 16 29 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 17 16 18 6 node.h:133 (set (reg/f:DI 61 [ network.21 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

(insn 18 17 19 6 node.h:133 (set (reg:DI 62 [ D.49841 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(insn 19 18 20 6 node.h:133 (parallel [
            (set (reg:DI 63 [ D.49842 ])
                (ashift:DI (reg:DI 62 [ D.49841 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 20 19 21 6 node.h:133 (parallel [
            (set (reg/f:DI 64 [ D.49843 ])
                (plus:DI (reg/f:DI 61 [ network.21 ])
                    (reg:DI 63 [ D.49842 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 21 20 22 6 node.h:133 (set (reg/f:DI 65 [ D.49844 ])
        (mem/f:DI (reg/f:DI 64 [ D.49843 ]) [0 S8 A64])) -1 (nil))

(insn 22 21 23 6 node.h:133 (set (reg:DI 5 di)
        (reg/f:DI 65 [ D.49844 ])) -1 (nil))

(call_insn 23 22 24 6 node.h:133 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f2f6d767c00 free>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 24 23 25 6 node.h:131 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 5 6) -> 7
;; Pred edge  5
;; Pred edge  6 (fallthru)
(code_label 25 24 26 7 43 "" [1 uses])

(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 7 node.h:131 (set (reg:SI 59 [ historylength.22 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

(insn 28 27 30 7 node.h:131 (set (reg:SI 60 [ historylength.23 ])
        (reg:SI 59 [ historylength.22 ])) -1 (nil))

(insn 30 28 31 7 node.h:131 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 60 [ historylength.23 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 31 30 32 7 node.h:131 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 29)
            (pc))) -1 (nil)
 -> 29)
;; End of basic block 7 -> ( 6 8)

;; Succ edge  6
;; Succ edge  8 (fallthru)

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 32 31 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 33 32 34 8 node.h:135 (set (reg/f:DI 66 [ network.24 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

(insn 34 33 35 8 node.h:135 (set (reg:DI 5 di)
        (reg/f:DI 66 [ network.24 ])) -1 (nil))

(call_insn 35 34 36 8 node.h:135 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f2f6d767c00 free>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

(insn 36 35 37 8 node.h:136 (set (reg:SI 67 [ debug.25 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 37 36 38 8 node.h:136 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 67 [ debug.25 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 38 37 39 8 node.h:136 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 42)
            (pc))) -1 (nil)
 -> 42)
;; End of basic block 8 -> ( 9 10)

;; Succ edge  9 (fallthru)
;; Succ edge  10

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 9 node.h:136 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <string_cst 0x7f2f6b9c8f00>)) -1 (nil))

(call_insn 41 40 42 9 node.h:136 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 8 9) -> 10
;; Pred edge  8
;; Pred edge  9 (fallthru)
(code_label 42 41 43 10 45 "" [1 uses])

(note 43 42 44 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 10 node.h:137 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 45 44 46 10 node.h:137 (call (mem:QI (symbol_ref:DI ("W_term") [flags 0x3]  <function_decl 0x7f2f6c26e700 W_term>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))
;; End of basic block 10 -> ( 11)

;; Succ edge  11 (fallthru)

;; Start of basic block ( 10) -> 11
;; Pred edge  10 (fallthru)
(code_label 46 45 47 11 41 "" [0 uses])

(note 47 46 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 11 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function sigmoid (sigmoid)

sigmoid (double X)
{
  double D.49835;
  double D.49834;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.49835_2 = X_1(D) / 2.0e+1;
  D.49834_3 = tanh (D.49835_2);
  return D.49834_3;
  # SUCC: EXIT

}



Partition map 

Partition 1 (X_1(D) - 1 )
Partition 2 (D.49835_2 - 2 )
Partition 3 (D.49834_3 - 3 )


Partition map 

Partition 0 (X_1(D) - 1 )


Live on entry to BB2 : X_1(D)  

Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (X_1(D) - 1 )

After Coalescing:

Partition map 

Partition 0 (X_1(D) - 1 )
Partition 1 (D.49835_2 - 2 )
Partition 2 (D.49834_3 - 3 )

sigmoid (double X)
{
  double D.49835;
  double D.49834;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  D.49835_2 = X_1(D) / 2.0e+1;
  D.49834_3 = tanh (D.49835_2);
  return D.49834_3;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; D.49835_2 = X_1(D) / 2.0e+1;

(insn 6 5 7 node.h:145 (set (reg:DF 61)
        (mem/c/i:DF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 X+0 S8 A64])) -1 (nil))

(insn 7 6 8 node.h:145 (set (reg:DF 62)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0 S8 A64])) -1 (expr_list:REG_EQUAL (const_double:DF 2.0e+1 [0x0.ap+5])
        (nil)))

(insn 8 7 0 node.h:145 (set (reg:DF 58 [ D.49835 ])
        (div:DF (reg:DF 61)
            (reg:DF 62))) -1 (nil))

;; D.49834_3 = tanh (D.49835_2);

(insn 9 8 10 node.h:145 (set (reg:DF 21 xmm0)
        (reg:DF 58 [ D.49835 ])) -1 (nil))

(call_insn/u 10 9 11 node.h:145 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("tanh") [flags 0x41]  <function_decl 0x7f2f6d730b00 tanh>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(insn 11 10 0 node.h:145 (set (reg:DF 59 [ D.49834 ])
        (reg:DF 21 xmm0)) -1 (nil))

;; return D.49834_3;

(insn 12 11 13 node.h:145 (set (reg:DF 60 [ <retval> ])
        (reg:DF 59 [ D.49834 ])) -1 (nil))

(jump_insn 13 12 14 node.h:145 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 14 13 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 node.h:141 (set (mem/c/i:DF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 X+0 S8 A64])
        (reg:DF 21 xmm0 [ X ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 node.h:145 (set (reg:DF 61)
        (mem/c/i:DF (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 X+0 S8 A64])) -1 (nil))

(insn 7 6 8 3 node.h:145 (set (reg:DF 62)
        (mem/u/c/i:DF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0 S8 A64])) -1 (expr_list:REG_EQUAL (const_double:DF 2.0e+1 [0x0.ap+5])
        (nil)))

(insn 8 7 9 3 node.h:145 (set (reg:DF 58 [ D.49835 ])
        (div:DF (reg:DF 61)
            (reg:DF 62))) -1 (nil))

(insn 9 8 10 3 node.h:145 (set (reg:DF 21 xmm0)
        (reg:DF 58 [ D.49835 ])) -1 (nil))

(call_insn/u 10 9 11 3 node.h:145 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("tanh") [flags 0x41]  <function_decl 0x7f2f6d730b00 tanh>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (expr_list:REG_EH_REGION (const_int 0 [0x0])
        (nil))
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(insn 11 10 12 3 node.h:145 (set (reg:DF 59 [ D.49834 ])
        (reg:DF 21 xmm0)) -1 (nil))

(insn 12 11 13 3 node.h:145 (set (reg:DF 60 [ <retval> ])
        (reg:DF 59 [ D.49834 ])) -1 (nil))

(jump_insn 13 12 14 3 node.h:145 (set (pc)
        (label_ref 15)) -1 (nil)
 -> 15)
;; End of basic block 3 -> ( 5)

;; Succ edge  5

(barrier 14 13 20)

;; Start of basic block () -> 4
(note 20 14 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 17 20 18 4 node.h:146 (clobber (reg/i:DF 21 xmm0)) -1 (nil))

(insn 18 17 15 4 node.h:146 (clobber (reg:DF 60 [ <retval> ])) -1 (nil))
;; End of basic block 4 -> ( 5)

;; Succ edge  5 (fallthru)

;; Start of basic block ( 3 4) -> 5
;; Pred edge  3
;; Pred edge  4 (fallthru)
(code_label 15 18 21 5 46 "" [1 uses])

(note 21 15 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 16 21 19 5 node.h:146 (set (reg/i:DF 21 xmm0)
        (reg:DF 60 [ <retval> ])) -1 (nil))

(insn 19 16 0 5 node.h:146 (use (reg/i:DF 21 xmm0)) -1 (nil))
;; End of basic block 5 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function network_forward (network_forward)

network_forward (unsigned int t)
{
  unsigned int i;
  unsigned int output_list_size.19;
  int output_list_size.18;
  const char * restrict D.49830;
  unsigned int D.49829;
  double D.49828;
  double * D.49827;
  long unsigned int D.49826;
  long unsigned int D.49825;
  unsigned int D.49824;
  unsigned int D.49823;
  unsigned int network_size.17;
  double * D.49821;
  double * * D.49820;
  long unsigned int D.49819;
  long unsigned int D.49818;
  double * * network.16;
  const char * restrict D.49816;
  unsigned int network_size.15;
  double D.49814;
  double D.49813;
  const int D.14;
  unsigned int D.13;
  const double * D.49810;
  long unsigned int D.49809;
  long unsigned int D.49808;
  unsigned int D.49807;
  unsigned int D.12;
  double * W.11;
  double * D.49804;
  double * * D.49803;
  long unsigned int D.49802;
  long unsigned int D.49801;
  unsigned int D.49800;
  double * * network.10;
  double * D.49798;
  long unsigned int D.49797;
  long unsigned int D.49796;
  double * D.49795;
  double * * D.49794;
  long unsigned int D.49793;
  long unsigned int D.49792;
  double * * network.9;
  const char * restrict D.49790;
  const char * restrict D.49789;
  int historylength.8;
  int debug.7;
  unsigned int historylength.6;
  int historylength.5;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  historylength.5_3 = historylength;
  historylength.6_4 = (unsigned int) historylength.5_3;
  if (historylength.6_4 <= t_5(D))
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 (true) 6 (false)

  # BLOCK 3
  # PRED: 2 (true)
  debug.7_6 = debug;
  if (debug.7_6 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  historylength.8_7 = historylength;
  D.49789_8 = (const char * restrict) &"Too many forward steps! Only room for:\t\t\t\t%d\n"[0];
  printf (D.49789_8, historylength.8_7);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (false) 4 (fallthru)
  goto <bb 12>;
  # SUCC: 12 (fallthru)

  # BLOCK 6
  # PRED: 2 (false)
  D.49790_9 = (const char * restrict) &"Moving forward to t = %u\n"[0];
  printf (D.49790_9, t_5(D));
  i_10 = 0;
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 7
  # PRED: 8 (true)
  network.9_12 = network;
  D.49792_13 = (long unsigned int) t_5(D);
  D.49793_14 = D.49792_13 * 8;
  D.49794_15 = network.9_12 + D.49793_14;
  D.49795_16 = *D.49794_15;
  D.49796_17 = (long unsigned int) i_1;
  D.49797_18 = D.49796_17 * 8;
  D.49798_19 = D.49795_16 + D.49797_18;
  network.10_20 = network;
  D.49800_21 = t_5(D) + 4294967295;
  D.49801_22 = (long unsigned int) D.49800_21;
  D.49802_23 = D.49801_22 * 8;
  D.49803_24 = network.10_20 + D.49802_23;
  D.49804_25 = *D.49803_24;
  W.11_26 = W;
  D.12_27 = D;
  D.49807_28 = D.12_27 * i_1;
  D.49808_29 = (long unsigned int) D.49807_28;
  D.49809_30 = D.49808_29 * 8;
  D.49810_31 = W.11_26 + D.49809_30;
  D.13_32 = D;
  D.14_33 = (const int) D.13_32;
  D.49813_34 = cblas_ddot (D.14_33, D.49810_31, 1, D.49804_25, 1);
  D.49814_35 = sigmoid (D.49813_34);
  *D.49798_19 = D.49814_35;
  i_36 = i_1 + 1;
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 6 (fallthru) 7 (fallthru)
  # i_1 = PHI <i_10(6), i_36(7)>
  network_size.15_11 = network_size;
  if (i_1 < network_size.15_11)
    goto <bb 7>;
  else
    goto <bb 9>;
  # SUCC: 7 (true) 9 (false)

  # BLOCK 9
  # PRED: 8 (false)
  D.49816_37 = (const char * restrict) &"Output for t = %u\n"[0];
  printf (D.49816_37, t_5(D));
  i_38 = 0;
  goto <bb 11>;
  # SUCC: 11 (fallthru)

  # BLOCK 10
  # PRED: 11 (true)
  network.16_41 = network;
  D.49818_42 = (long unsigned int) t_5(D);
  D.49819_43 = D.49818_42 * 8;
  D.49820_44 = network.16_41 + D.49819_43;
  D.49821_45 = *D.49820_44;
  network_size.17_46 = network_size;
  D.49823_47 = network_size.17_46 - i_2;
  D.49824_48 = D.49823_47 + 1;
  D.49825_49 = (long unsigned int) D.49824_48;
  D.49826_50 = D.49825_49 * 8;
  D.49827_51 = D.49821_45 + D.49826_50;
  D.49828_52 = *D.49827_51;
  D.49829_53 = i_2 + 1;
  D.49830_54 = (const char * restrict) &"\tO[%u] = %f\n"[0];
  printf (D.49830_54, D.49829_53, D.49828_52);
  i_55 = i_2 + 1;
  # SUCC: 11 (fallthru)

  # BLOCK 11
  # PRED: 9 (fallthru) 10 (fallthru)
  # i_2 = PHI <i_38(9), i_55(10)>
  output_list_size.18_39 = output_list_size;
  output_list_size.19_40 = (unsigned int) output_list_size.18_39;
  if (output_list_size.19_40 > i_2)
    goto <bb 10>;
  else
    goto <bb 12>;
  # SUCC: 10 (true) 12 (false)

  # BLOCK 12
  # PRED: 5 (fallthru) 11 (false)
  return;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (i_2 - 2 )
Partition 3 (historylength.5_3 - 3 )
Partition 4 (historylength.6_4 - 4 )
Partition 5 (t_5(D) - 5 )
Partition 6 (debug.7_6 - 6 )
Partition 7 (historylength.8_7 - 7 )
Partition 8 (D.49789_8 - 8 )
Partition 9 (D.49790_9 - 9 )
Partition 10 (i_10 - 10 )
Partition 11 (network_size.15_11 - 11 )
Partition 12 (network.9_12 - 12 )
Partition 13 (D.49792_13 - 13 )
Partition 14 (D.49793_14 - 14 )
Partition 15 (D.49794_15 - 15 )
Partition 16 (D.49795_16 - 16 )
Partition 17 (D.49796_17 - 17 )
Partition 18 (D.49797_18 - 18 )
Partition 19 (D.49798_19 - 19 )
Partition 20 (network.10_20 - 20 )
Partition 21 (D.49800_21 - 21 )
Partition 22 (D.49801_22 - 22 )
Partition 23 (D.49802_23 - 23 )
Partition 24 (D.49803_24 - 24 )
Partition 25 (D.49804_25 - 25 )
Partition 26 (W.11_26 - 26 )
Partition 27 (D.12_27 - 27 )
Partition 28 (D.49807_28 - 28 )
Partition 29 (D.49808_29 - 29 )
Partition 30 (D.49809_30 - 30 )
Partition 31 (D.49810_31 - 31 )
Partition 32 (D.13_32 - 32 )
Partition 33 (D.14_33 - 33 )
Partition 34 (D.49813_34 - 34 )
Partition 35 (D.49814_35 - 35 )
Partition 36 (i_36 - 36 )
Partition 37 (D.49816_37 - 37 )
Partition 38 (i_38 - 38 )
Partition 39 (output_list_size.18_39 - 39 )
Partition 40 (output_list_size.19_40 - 40 )
Partition 41 (network.16_41 - 41 )
Partition 42 (D.49818_42 - 42 )
Partition 43 (D.49819_43 - 43 )
Partition 44 (D.49820_44 - 44 )
Partition 45 (D.49821_45 - 45 )
Partition 46 (network_size.17_46 - 46 )
Partition 47 (D.49823_47 - 47 )
Partition 48 (D.49824_48 - 48 )
Partition 49 (D.49825_49 - 49 )
Partition 50 (D.49826_50 - 50 )
Partition 51 (D.49827_51 - 51 )
Partition 52 (D.49828_52 - 52 )
Partition 53 (D.49829_53 - 53 )
Partition 54 (D.49830_54 - 54 )
Partition 55 (i_55 - 55 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (t_5(D) - 5 )
Partition 3 (i_10 - 10 )
Partition 4 (i_36 - 36 )
Partition 5 (i_38 - 38 )
Partition 6 (i_55 - 55 )


Live on entry to BB2 : t_5(D)  

Live on entry to BB3 : 

Live on entry to BB4 : 

Live on entry to BB5 : 

Live on entry to BB6 : t_5(D)  

Live on entry to BB7 : i_1  t_5(D)  

Live on entry to BB8 : t_5(D)  

Live on entry to BB9 : t_5(D)  

Live on entry to BB10 : i_2  t_5(D)  

Live on entry to BB11 : t_5(D)  

Live on entry to BB12 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_2
(2147483646) i_1 <-> i_10
(2147483646) i_1 <-> i_36
(2147483646) i_1 <-> i_38
(2147483646) i_1 <-> i_55

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (i_2 - 2 )
Partition 2 (t_5(D) - 5 )
Partition 3 (i_10 - 10 )
Partition 4 (i_36 - 36 )
Partition 5 (i_38 - 38 )
Partition 6 (i_55 - 55 )

Coalesce list: (1)i_1 & (2)i_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)i_1 & (10)i_10 [map: 0, 3] : Success -> 0
Coalesce list: (1)i_1 & (36)i_36 [map: 0, 4] : Success -> 0
Coalesce list: (1)i_1 & (38)i_38 [map: 0, 5] : Success -> 0
Coalesce list: (1)i_1 & (55)i_55 [map: 0, 6] : Success -> 0
Coalesce list: (2)i_1 & (55)i_1: Already Coalesced.
Coalesce list: (2)i_1 & (38)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (36)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (10)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 2 10 36 38 55 )
Partition 1 (historylength.5_3 - 3 )
Partition 2 (historylength.6_4 - 4 )
Partition 3 (t_5(D) - 5 )
Partition 4 (debug.7_6 - 6 )
Partition 5 (historylength.8_7 - 7 )
Partition 6 (D.49789_8 - 8 )
Partition 7 (D.49790_9 - 9 )
Partition 8 (network_size.15_11 - 11 )
Partition 9 (network.9_12 - 12 )
Partition 10 (D.49792_13 - 13 )
Partition 11 (D.49793_14 - 14 )
Partition 12 (D.49794_15 - 15 )
Partition 13 (D.49795_16 - 16 )
Partition 14 (D.49796_17 - 17 )
Partition 15 (D.49797_18 - 18 )
Partition 16 (D.49798_19 - 19 )
Partition 17 (network.10_20 - 20 )
Partition 18 (D.49800_21 - 21 )
Partition 19 (D.49801_22 - 22 )
Partition 20 (D.49802_23 - 23 )
Partition 21 (D.49803_24 - 24 )
Partition 22 (D.49804_25 - 25 )
Partition 23 (W.11_26 - 26 )
Partition 24 (D.12_27 - 27 )
Partition 25 (D.49807_28 - 28 )
Partition 26 (D.49808_29 - 29 )
Partition 27 (D.49809_30 - 30 )
Partition 28 (D.49810_31 - 31 )
Partition 29 (D.13_32 - 32 )
Partition 30 (D.14_33 - 33 )
Partition 31 (D.49813_34 - 34 )
Partition 32 (D.49814_35 - 35 )
Partition 33 (D.49816_37 - 37 )
Partition 34 (output_list_size.18_39 - 39 )
Partition 35 (output_list_size.19_40 - 40 )
Partition 36 (network.16_41 - 41 )
Partition 37 (D.49818_42 - 42 )
Partition 38 (D.49819_43 - 43 )
Partition 39 (D.49820_44 - 44 )
Partition 40 (D.49821_45 - 45 )
Partition 41 (network_size.17_46 - 46 )
Partition 42 (D.49823_47 - 47 )
Partition 43 (D.49824_48 - 48 )
Partition 44 (D.49825_49 - 49 )
Partition 45 (D.49826_50 - 50 )
Partition 46 (D.49827_51 - 51 )
Partition 47 (D.49828_52 - 52 )
Partition 48 (D.49829_53 - 53 )
Partition 49 (D.49830_54 - 54 )

network_forward (unsigned int t)
{
  unsigned int i;
  unsigned int output_list_size.19;
  int output_list_size.18;
  const char * restrict D.49830;
  unsigned int D.49829;
  double D.49828;
  double * D.49827;
  long unsigned int D.49826;
  long unsigned int D.49825;
  unsigned int D.49824;
  unsigned int D.49823;
  unsigned int network_size.17;
  double * D.49821;
  double * * D.49820;
  long unsigned int D.49819;
  long unsigned int D.49818;
  double * * network.16;
  const char * restrict D.49816;
  unsigned int network_size.15;
  double D.49814;
  double D.49813;
  const int D.14;
  unsigned int D.13;
  const double * D.49810;
  long unsigned int D.49809;
  long unsigned int D.49808;
  unsigned int D.49807;
  unsigned int D.12;
  double * W.11;
  double * D.49804;
  double * * D.49803;
  long unsigned int D.49802;
  long unsigned int D.49801;
  unsigned int D.49800;
  double * * network.10;
  double * D.49798;
  long unsigned int D.49797;
  long unsigned int D.49796;
  double * D.49795;
  double * * D.49794;
  long unsigned int D.49793;
  long unsigned int D.49792;
  double * * network.9;
  const char * restrict D.49790;
  const char * restrict D.49789;
  int historylength.8;
  int debug.7;
  unsigned int historylength.6;
  int historylength.5;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  historylength.5_3 = historylength;
  historylength.6_4 = (unsigned int) historylength.5_3;
  if (historylength.6_4 <= t_5(D))
    goto <bb 3>;
  else
    goto <bb 6>;
  # SUCC: 3 (true) 6 (false)

  # BLOCK 3
  # PRED: 2 (true)
  debug.7_6 = debug;
  if (debug.7_6 != 0)
    goto <bb 4>;
  else
    goto <bb 5>;
  # SUCC: 4 (true) 5 (false)

  # BLOCK 4
  # PRED: 3 (true)
  historylength.8_7 = historylength;
  D.49789_8 = (const char * restrict) &"Too many forward steps! Only room for:\t\t\t\t%d\n"[0];
  printf (D.49789_8, historylength.8_7);
  # SUCC: 5 (fallthru)

  # BLOCK 5
  # PRED: 3 (false) 4 (fallthru)
  goto <bb 12>;
  # SUCC: 12 (fallthru)

  # BLOCK 6
  # PRED: 2 (false)
  D.49790_9 = (const char * restrict) &"Moving forward to t = %u\n"[0];
  printf (D.49790_9, t_5(D));
  i_10 = 0;
  goto <bb 8>;
  # SUCC: 8 (fallthru)

  # BLOCK 7
  # PRED: 8 (true)
  network.9_12 = network;
  D.49792_13 = (long unsigned int) t_5(D);
  D.49793_14 = D.49792_13 * 8;
  D.49794_15 = network.9_12 + D.49793_14;
  D.49795_16 = *D.49794_15;
  D.49796_17 = (long unsigned int) i_1;
  D.49797_18 = D.49796_17 * 8;
  D.49798_19 = D.49795_16 + D.49797_18;
  network.10_20 = network;
  D.49800_21 = t_5(D) + 4294967295;
  D.49801_22 = (long unsigned int) D.49800_21;
  D.49802_23 = D.49801_22 * 8;
  D.49803_24 = network.10_20 + D.49802_23;
  D.49804_25 = *D.49803_24;
  W.11_26 = W;
  D.12_27 = D;
  D.49807_28 = D.12_27 * i_1;
  D.49808_29 = (long unsigned int) D.49807_28;
  D.49809_30 = D.49808_29 * 8;
  D.49810_31 = W.11_26 + D.49809_30;
  D.13_32 = D;
  D.14_33 = (const int) D.13_32;
  D.49813_34 = cblas_ddot (D.14_33, D.49810_31, 1, D.49804_25, 1);
  D.49814_35 = sigmoid (D.49813_34);
  *D.49798_19 = D.49814_35;
  i_36 = i_1 + 1;
  # SUCC: 8 (fallthru)

  # BLOCK 8
  # PRED: 6 (fallthru) 7 (fallthru)
  # i_1 = PHI <i_10(6), i_36(7)>
  network_size.15_11 = network_size;
  if (i_1 < network_size.15_11)
    goto <bb 7>;
  else
    goto <bb 9>;
  # SUCC: 7 (true) 9 (false)

  # BLOCK 9
  # PRED: 8 (false)
  D.49816_37 = (const char * restrict) &"Output for t = %u\n"[0];
  printf (D.49816_37, t_5(D));
  i_38 = 0;
  goto <bb 11>;
  # SUCC: 11 (fallthru)

  # BLOCK 10
  # PRED: 11 (true)
  network.16_41 = network;
  D.49818_42 = (long unsigned int) t_5(D);
  D.49819_43 = D.49818_42 * 8;
  D.49820_44 = network.16_41 + D.49819_43;
  D.49821_45 = *D.49820_44;
  network_size.17_46 = network_size;
  D.49823_47 = network_size.17_46 - i_2;
  D.49824_48 = D.49823_47 + 1;
  D.49825_49 = (long unsigned int) D.49824_48;
  D.49826_50 = D.49825_49 * 8;
  D.49827_51 = D.49821_45 + D.49826_50;
  D.49828_52 = *D.49827_51;
  D.49829_53 = i_2 + 1;
  D.49830_54 = (const char * restrict) &"\tO[%u] = %f\n"[0];
  printf (D.49830_54, D.49829_53, D.49828_52);
  i_55 = i_2 + 1;
  # SUCC: 11 (fallthru)

  # BLOCK 11
  # PRED: 9 (fallthru) 10 (fallthru)
  # i_2 = PHI <i_38(9), i_55(10)>
  output_list_size.18_39 = output_list_size;
  output_list_size.19_40 = (unsigned int) output_list_size.18_39;
  if (output_list_size.19_40 > i_2)
    goto <bb 10>;
  else
    goto <bb 12>;
  # SUCC: 10 (true) 12 (false)

  # BLOCK 12
  # PRED: 5 (fallthru) 11 (false)
  return;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; historylength.5_3 = historylength;

(insn 6 5 0 node.h:151 (set (reg:SI 58 [ historylength.5 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

;; historylength.6_4 = (unsigned int) historylength.5_3;

(insn 7 6 0 node.h:151 (set (reg:SI 59 [ historylength.6 ])
        (reg:SI 58 [ historylength.5 ])) -1 (nil))

;; if (historylength.6_4 <= t_5(D))

(insn 8 7 9 node.h:151 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 59 [ historylength.6 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32]))) -1 (nil))

(jump_insn 9 8 0 node.h:151 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; debug.7_6 = debug;

(insn 11 10 0 node.h:153 (set (reg:SI 60 [ debug.7 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.7_6 != 0)

(insn 12 11 13 node.h:153 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ debug.7 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 13 12 0 node.h:153 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 4

;; historylength.8_7 = historylength;

(insn 15 14 0 node.h:153 (set (reg:SI 61 [ historylength.8 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

;; D.49789_8 = (const char * restrict) &"Too many forward steps! Only room for:\t\t\t\t%d\n"[0];

(insn 16 15 0 node.h:153 (set (reg/f:DI 62 [ D.49789 ])
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <string_cst 0x7f2f6ba07cd0>)) -1 (nil))

;; printf (D.49789_8, historylength.8_7);

(insn 17 16 18 node.h:153 (set (reg:SI 4 si)
        (reg:SI 61 [ historylength.8 ])) -1 (nil))

(insn 18 17 19 node.h:153 (set (reg:DI 5 di)
        (reg/f:DI 62 [ D.49789 ])) -1 (nil))

(insn 19 18 20 node.h:153 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 20 19 0 node.h:153 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (nil)))))

;; Generating RTL for gimple basic block 5

;; 

(code_label 21 20 22 49 "" [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 6

;; 

(code_label 25 24 26 48 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; D.49790_9 = (const char * restrict) &"Moving forward to t = %u\n"[0];

(insn 27 26 0 node.h:157 (set (reg/f:DI 63 [ D.49790 ])
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <string_cst 0x7f2f6b9d3c78>)) -1 (nil))

;; printf (D.49790_9, t_5(D));

(insn 28 27 29 node.h:157 (set (reg:SI 106)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])) -1 (nil))

(insn 29 28 30 node.h:157 (set (reg:SI 4 si)
        (reg:SI 106)) -1 (nil))

(insn 30 29 31 node.h:157 (set (reg:DI 5 di)
        (reg/f:DI 63 [ D.49790 ])) -1 (nil))

(insn 31 30 32 node.h:157 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 32 31 0 node.h:157 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (nil)))))

;; i_10 = 0;

(insn 33 32 0 node.h:165 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 7

;; network.9_12 = network;

(insn 37 36 0 node.h:167 (set (reg/f:DI 65 [ network.9 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

;; D.49792_13 = (long unsigned int) t_5(D);

(insn 38 37 0 node.h:167 (set (reg:DI 66 [ D.49792 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32]))) -1 (nil))

;; D.49793_14 = D.49792_13 * 8;

(insn 39 38 0 node.h:167 (parallel [
            (set (reg:DI 67 [ D.49793 ])
                (ashift:DI (reg:DI 66 [ D.49792 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49794_15 = network.9_12 + D.49793_14;

(insn 40 39 0 node.h:167 (parallel [
            (set (reg/f:DI 68 [ D.49794 ])
                (plus:DI (reg/f:DI 65 [ network.9 ])
                    (reg:DI 67 [ D.49793 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49795_16 = *D.49794_15;

(insn 41 40 0 node.h:167 (set (reg/f:DI 69 [ D.49795 ])
        (mem/f:DI (reg/f:DI 68 [ D.49794 ]) [0 S8 A64])) -1 (nil))

;; D.49796_17 = (long unsigned int) i_1;

(insn 42 41 0 node.h:167 (set (reg:DI 70 [ D.49796 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

;; D.49797_18 = D.49796_17 * 8;

(insn 43 42 0 node.h:167 (parallel [
            (set (reg:DI 71 [ D.49797 ])
                (ashift:DI (reg:DI 70 [ D.49796 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49798_19 = D.49795_16 + D.49797_18;

(insn 44 43 0 node.h:167 (parallel [
            (set (reg/f:DI 72 [ D.49798 ])
                (plus:DI (reg/f:DI 69 [ D.49795 ])
                    (reg:DI 71 [ D.49797 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; network.10_20 = network;

(insn 45 44 0 node.h:170 (set (reg/f:DI 73 [ network.10 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

;; D.49800_21 = t_5(D) + 4294967295;

(insn 46 45 47 node.h:170 (set (reg:SI 107)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])) -1 (nil))

(insn 47 46 0 node.h:170 (parallel [
            (set (reg:SI 74 [ D.49800 ])
                (plus:SI (reg:SI 107)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

;; D.49801_22 = (long unsigned int) D.49800_21;

(insn 48 47 0 node.h:170 (set (reg:DI 75 [ D.49801 ])
        (zero_extend:DI (reg:SI 74 [ D.49800 ]))) -1 (nil))

;; D.49802_23 = D.49801_22 * 8;

(insn 49 48 0 node.h:170 (parallel [
            (set (reg:DI 76 [ D.49802 ])
                (ashift:DI (reg:DI 75 [ D.49801 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49803_24 = network.10_20 + D.49802_23;

(insn 50 49 0 node.h:170 (parallel [
            (set (reg/f:DI 77 [ D.49803 ])
                (plus:DI (reg/f:DI 73 [ network.10 ])
                    (reg:DI 76 [ D.49802 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49804_25 = *D.49803_24;

(insn 51 50 0 node.h:170 (set (reg/f:DI 78 [ D.49804 ])
        (mem/f:DI (reg/f:DI 77 [ D.49803 ]) [0 S8 A64])) -1 (nil))

;; W.11_26 = W;

(insn 52 51 0 node.h:169 (set (reg/f:DI 79 [ W.11 ])
        (mem/f/c/i:DI (symbol_ref:DI ("W")  <var_decl 0x7f2f6c4b8c80 W>) [0 W+0 S8 A64])) -1 (nil))

;; D.12_27 = D;

(insn 53 52 0 node.h:169 (set (reg:SI 80 [ D.12 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

;; D.49807_28 = D.12_27 * i_1;

(insn 54 53 0 node.h:169 (parallel [
            (set (reg:SI 81 [ D.49807 ])
                (mult:SI (reg:SI 80 [ D.12 ])
                    (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49808_29 = (long unsigned int) D.49807_28;

(insn 55 54 0 node.h:167 (set (reg:DI 82 [ D.49808 ])
        (zero_extend:DI (reg:SI 81 [ D.49807 ]))) -1 (nil))

;; D.49809_30 = D.49808_29 * 8;

(insn 56 55 0 node.h:169 (parallel [
            (set (reg:DI 83 [ D.49809 ])
                (ashift:DI (reg:DI 82 [ D.49808 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49810_31 = W.11_26 + D.49809_30;

(insn 57 56 0 node.h:167 (parallel [
            (set (reg/f:DI 84 [ D.49810 ])
                (plus:DI (reg/f:DI 79 [ W.11 ])
                    (reg:DI 83 [ D.49809 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.13_32 = D;

(insn 58 57 0 node.h:167 (set (reg:SI 85 [ D.13 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

;; D.14_33 = (const int) D.13_32;

(insn 59 58 0 node.h:167 (set (reg:SI 86 [ D.14 ])
        (reg:SI 85 [ D.13 ])) -1 (nil))

;; D.49813_34 = cblas_ddot (D.14_33, D.49810_31, 1, D.49804_25, 1);

(insn 60 59 61 node.h:167 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) -1 (nil))

(insn 61 60 62 node.h:167 (set (reg:DI 2 cx)
        (reg/f:DI 78 [ D.49804 ])) -1 (nil))

(insn 62 61 63 node.h:167 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) -1 (nil))

(insn 63 62 64 node.h:167 (set (reg:DI 4 si)
        (reg/f:DI 84 [ D.49810 ])) -1 (nil))

(insn 64 63 65 node.h:167 (set (reg:SI 5 di)
        (reg:SI 86 [ D.14 ])) -1 (nil))

(call_insn 65 64 66 node.h:167 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cblas_ddot") [flags 0x41]  <function_decl 0x7f2f6bb10e00 cblas_ddot>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 37 r8))
                        (nil)))))))

(insn 66 65 0 node.h:167 (set (reg:DF 87 [ D.49813 ])
        (reg:DF 21 xmm0)) -1 (nil))

;; D.49814_35 = sigmoid (D.49813_34);

(insn 67 66 68 node.h:167 (set (reg:DF 21 xmm0)
        (reg:DF 87 [ D.49813 ])) -1 (nil))

(call_insn 68 67 69 node.h:167 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sigmoid") [flags 0x3]  <function_decl 0x7f2f6c26ec00 sigmoid>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(insn 69 68 0 node.h:167 (set (reg:DF 88 [ D.49814 ])
        (reg:DF 21 xmm0)) -1 (nil))

;; *D.49798_19 = D.49814_35;

(insn 70 69 0 node.h:167 (set (mem:DF (reg/f:DI 72 [ D.49798 ]) [0 S8 A64])
        (reg:DF 88 [ D.49814 ])) -1 (nil))

;; i_36 = i_1 + 1;

(insn 71 70 0 node.h:165 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 72 71 73 51 "" [0 uses])

(note 73 72 0 NOTE_INSN_BASIC_BLOCK)

;; network_size.15_11 = network_size;

(insn 74 73 0 node.h:165 (set (reg:SI 64 [ network_size.15 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; if (i_1 < network_size.15_11)

(insn 76 74 77 node.h:165 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (reg:SI 64 [ network_size.15 ]))) -1 (nil))

(jump_insn 77 76 0 node.h:165 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 9

;; D.49816_37 = (const char * restrict) &"Output for t = %u\n"[0];

(insn 79 78 0 node.h:172 (set (reg/f:DI 89 [ D.49816 ])
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <string_cst 0x7f2f6b9c8f30>)) -1 (nil))

;; printf (D.49816_37, t_5(D));

(insn 80 79 81 node.h:172 (set (reg:SI 108)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])) -1 (nil))

(insn 81 80 82 node.h:172 (set (reg:SI 4 si)
        (reg:SI 108)) -1 (nil))

(insn 82 81 83 node.h:172 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.49816 ])) -1 (nil))

(insn 83 82 84 node.h:172 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 84 83 0 node.h:172 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (nil)))))

;; i_38 = 0;

(insn 85 84 0 node.h:173 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 10

;; network.16_41 = network;

(insn 89 88 0 node.h:176 (set (reg/f:DI 92 [ network.16 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

;; D.49818_42 = (long unsigned int) t_5(D);

(insn 90 89 0 node.h:176 (set (reg:DI 93 [ D.49818 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32]))) -1 (nil))

;; D.49819_43 = D.49818_42 * 8;

(insn 91 90 0 node.h:176 (parallel [
            (set (reg:DI 94 [ D.49819 ])
                (ashift:DI (reg:DI 93 [ D.49818 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49820_44 = network.16_41 + D.49819_43;

(insn 92 91 0 node.h:176 (parallel [
            (set (reg/f:DI 95 [ D.49820 ])
                (plus:DI (reg/f:DI 92 [ network.16 ])
                    (reg:DI 94 [ D.49819 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49821_45 = *D.49820_44;

(insn 93 92 0 node.h:176 (set (reg/f:DI 96 [ D.49821 ])
        (mem/f:DI (reg/f:DI 95 [ D.49820 ]) [0 S8 A64])) -1 (nil))

;; network_size.17_46 = network_size;

(insn 94 93 0 node.h:176 (set (reg:SI 97 [ network_size.17 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

;; D.49823_47 = network_size.17_46 - i_2;

(insn 95 94 0 node.h:176 (parallel [
            (set (reg:SI 98 [ D.49823 ])
                (minus:SI (reg:SI 97 [ network_size.17 ])
                    (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49824_48 = D.49823_47 + 1;

(insn 96 95 0 node.h:176 (parallel [
            (set (reg:SI 99 [ D.49824 ])
                (plus:SI (reg:SI 98 [ D.49823 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49825_49 = (long unsigned int) D.49824_48;

(insn 97 96 0 node.h:176 (set (reg:DI 100 [ D.49825 ])
        (zero_extend:DI (reg:SI 99 [ D.49824 ]))) -1 (nil))

;; D.49826_50 = D.49825_49 * 8;

(insn 98 97 0 node.h:176 (parallel [
            (set (reg:DI 101 [ D.49826 ])
                (ashift:DI (reg:DI 100 [ D.49825 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49827_51 = D.49821_45 + D.49826_50;

(insn 99 98 0 node.h:176 (parallel [
            (set (reg/f:DI 102 [ D.49827 ])
                (plus:DI (reg/f:DI 96 [ D.49821 ])
                    (reg:DI 101 [ D.49826 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; D.49828_52 = *D.49827_51;

(insn 100 99 0 node.h:175 (set (reg:DF 103 [ D.49828 ])
        (mem:DF (reg/f:DI 102 [ D.49827 ]) [0 S8 A64])) -1 (nil))

;; D.49829_53 = i_2 + 1;

(insn 101 100 102 node.h:175 (set (reg:SI 109)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) -1 (nil))

(insn 102 101 0 node.h:175 (parallel [
            (set (reg:SI 104 [ D.49829 ])
                (plus:SI (reg:SI 109)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; D.49830_54 = (const char * restrict) &"\tO[%u] = %f\n"[0];

(insn 103 102 0 node.h:175 (set (reg/f:DI 105 [ D.49830 ])
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <string_cst 0x7f2f6b9c8f60>)) -1 (nil))

;; printf (D.49830_54, D.49829_53, D.49828_52);

(insn 104 103 105 node.h:175 (set (reg:DF 21 xmm0)
        (reg:DF 103 [ D.49828 ])) -1 (nil))

(insn 105 104 106 node.h:175 (set (reg:SI 4 si)
        (reg:SI 104 [ D.49829 ])) -1 (nil))

(insn 106 105 107 node.h:175 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.49830 ])) -1 (nil))

(insn 107 106 108 node.h:175 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 108 107 0 node.h:175 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
                    (nil))))))

;; i_55 = i_2 + 1;

(insn 109 108 0 node.h:173 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 110 109 111 53 "" [0 uses])

(note 111 110 0 NOTE_INSN_BASIC_BLOCK)

;; output_list_size.18_39 = output_list_size;

(insn 112 111 0 node.h:173 (set (reg:SI 90 [ output_list_size.18 ])
        (mem/c/i:SI (symbol_ref:DI ("output_list_size")  <var_decl 0x7f2f6c4b8dc0 output_list_size>) [0 output_list_size+0 S4 A32])) -1 (nil))

;; output_list_size.19_40 = (unsigned int) output_list_size.18_39;

(insn 113 112 0 node.h:173 (set (reg:SI 91 [ output_list_size.19 ])
        (reg:SI 90 [ output_list_size.18 ])) -1 (nil))

;; if (output_list_size.19_40 > i_2)

(insn 115 113 116 node.h:173 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 91 [ output_list_size.19 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 116 115 0 node.h:173 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 117 116 118 50 "" [0 uses])

(note 118 117 0 NOTE_INSN_BASIC_BLOCK)


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 4 3 2 node.h:149 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])
        (reg:SI 5 di [ t ])) -1 (nil))

(note 3 2 5 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 5 3 6 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 6 5 7 3 node.h:151 (set (reg:SI 58 [ historylength.5 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

(insn 7 6 8 3 node.h:151 (set (reg:SI 59 [ historylength.6 ])
        (reg:SI 58 [ historylength.5 ])) -1 (nil))

(insn 8 7 9 3 node.h:151 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 59 [ historylength.6 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32]))) -1 (nil))

(jump_insn 9 8 10 3 node.h:151 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 25)
            (pc))) -1 (nil)
 -> 25)
;; End of basic block 3 -> ( 4 7)

;; Succ edge  4 (fallthru)
;; Succ edge  7

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 11 10 12 4 node.h:153 (set (reg:SI 60 [ debug.7 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 12 11 13 4 node.h:153 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 60 [ debug.7 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 13 12 14 4 node.h:153 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 21)
            (pc))) -1 (nil)
 -> 21)
;; End of basic block 4 -> ( 5 6)

;; Succ edge  5 (fallthru)
;; Succ edge  6

;; Start of basic block ( 4) -> 5
;; Pred edge  4 (fallthru)
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 15 14 16 5 node.h:153 (set (reg:SI 61 [ historylength.8 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

(insn 16 15 17 5 node.h:153 (set (reg/f:DI 62 [ D.49789 ])
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <string_cst 0x7f2f6ba07cd0>)) -1 (nil))

(insn 17 16 18 5 node.h:153 (set (reg:SI 4 si)
        (reg:SI 61 [ historylength.8 ])) -1 (nil))

(insn 18 17 19 5 node.h:153 (set (reg:DI 5 di)
        (reg/f:DI 62 [ D.49789 ])) -1 (nil))

(insn 19 18 20 5 node.h:153 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 20 19 21 5 node.h:153 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (nil)))))
;; End of basic block 5 -> ( 6)

;; Succ edge  6 (fallthru)

;; Start of basic block ( 4 5) -> 6
;; Pred edge  4
;; Pred edge  5 (fallthru)
(code_label 21 20 22 6 49 "" [1 uses])

(note 22 21 23 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(jump_insn 23 22 24 6 node.h:155 (set (pc)
        (label_ref 117)) -1 (nil)
 -> 117)
;; End of basic block 6 -> ( 13)

;; Succ edge  13

(barrier 24 23 25)

;; Start of basic block ( 3) -> 7
;; Pred edge  3
(code_label 25 24 26 7 48 "" [1 uses])

(note 26 25 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 27 26 28 7 node.h:157 (set (reg/f:DI 63 [ D.49790 ])
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <string_cst 0x7f2f6b9d3c78>)) -1 (nil))

(insn 28 27 29 7 node.h:157 (set (reg:SI 106)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])) -1 (nil))

(insn 29 28 30 7 node.h:157 (set (reg:SI 4 si)
        (reg:SI 106)) -1 (nil))

(insn 30 29 31 7 node.h:157 (set (reg:DI 5 di)
        (reg/f:DI 63 [ D.49790 ])) -1 (nil))

(insn 31 30 32 7 node.h:157 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 32 31 33 7 node.h:157 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (nil)))))

(insn 33 32 34 7 node.h:165 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 34 33 35 7 node.h:165 (set (pc)
        (label_ref 72)) -1 (nil)
 -> 72)
;; End of basic block 7 -> ( 9)

;; Succ edge  9

(barrier 35 34 75)

;; Start of basic block ( 9) -> 8
;; Pred edge  9
(code_label 75 35 36 8 52 "" [1 uses])

(note 36 75 37 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 37 36 38 8 node.h:167 (set (reg/f:DI 65 [ network.9 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

(insn 38 37 39 8 node.h:167 (set (reg:DI 66 [ D.49792 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32]))) -1 (nil))

(insn 39 38 40 8 node.h:167 (parallel [
            (set (reg:DI 67 [ D.49793 ])
                (ashift:DI (reg:DI 66 [ D.49792 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 40 39 41 8 node.h:167 (parallel [
            (set (reg/f:DI 68 [ D.49794 ])
                (plus:DI (reg/f:DI 65 [ network.9 ])
                    (reg:DI 67 [ D.49793 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 41 40 42 8 node.h:167 (set (reg/f:DI 69 [ D.49795 ])
        (mem/f:DI (reg/f:DI 68 [ D.49794 ]) [0 S8 A64])) -1 (nil))

(insn 42 41 43 8 node.h:167 (set (reg:DI 70 [ D.49796 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(insn 43 42 44 8 node.h:167 (parallel [
            (set (reg:DI 71 [ D.49797 ])
                (ashift:DI (reg:DI 70 [ D.49796 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 44 43 45 8 node.h:167 (parallel [
            (set (reg/f:DI 72 [ D.49798 ])
                (plus:DI (reg/f:DI 69 [ D.49795 ])
                    (reg:DI 71 [ D.49797 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 45 44 46 8 node.h:170 (set (reg/f:DI 73 [ network.10 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

(insn 46 45 47 8 node.h:170 (set (reg:SI 107)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])) -1 (nil))

(insn 47 46 48 8 node.h:170 (parallel [
            (set (reg:SI 74 [ D.49800 ])
                (plus:SI (reg:SI 107)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) -1 (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))

(insn 48 47 49 8 node.h:170 (set (reg:DI 75 [ D.49801 ])
        (zero_extend:DI (reg:SI 74 [ D.49800 ]))) -1 (nil))

(insn 49 48 50 8 node.h:170 (parallel [
            (set (reg:DI 76 [ D.49802 ])
                (ashift:DI (reg:DI 75 [ D.49801 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 50 49 51 8 node.h:170 (parallel [
            (set (reg/f:DI 77 [ D.49803 ])
                (plus:DI (reg/f:DI 73 [ network.10 ])
                    (reg:DI 76 [ D.49802 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 51 50 52 8 node.h:170 (set (reg/f:DI 78 [ D.49804 ])
        (mem/f:DI (reg/f:DI 77 [ D.49803 ]) [0 S8 A64])) -1 (nil))

(insn 52 51 53 8 node.h:169 (set (reg/f:DI 79 [ W.11 ])
        (mem/f/c/i:DI (symbol_ref:DI ("W")  <var_decl 0x7f2f6c4b8c80 W>) [0 W+0 S8 A64])) -1 (nil))

(insn 53 52 54 8 node.h:169 (set (reg:SI 80 [ D.12 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

(insn 54 53 55 8 node.h:169 (parallel [
            (set (reg:SI 81 [ D.49807 ])
                (mult:SI (reg:SI 80 [ D.12 ])
                    (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 55 54 56 8 node.h:167 (set (reg:DI 82 [ D.49808 ])
        (zero_extend:DI (reg:SI 81 [ D.49807 ]))) -1 (nil))

(insn 56 55 57 8 node.h:169 (parallel [
            (set (reg:DI 83 [ D.49809 ])
                (ashift:DI (reg:DI 82 [ D.49808 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 57 56 58 8 node.h:167 (parallel [
            (set (reg/f:DI 84 [ D.49810 ])
                (plus:DI (reg/f:DI 79 [ W.11 ])
                    (reg:DI 83 [ D.49809 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 58 57 59 8 node.h:167 (set (reg:SI 85 [ D.13 ])
        (mem/c/i:SI (symbol_ref:DI ("D")  <var_decl 0x7f2f6c4b8e60 D>) [0 D+0 S4 A32])) -1 (nil))

(insn 59 58 60 8 node.h:167 (set (reg:SI 86 [ D.14 ])
        (reg:SI 85 [ D.13 ])) -1 (nil))

(insn 60 59 61 8 node.h:167 (set (reg:SI 37 r8)
        (const_int 1 [0x1])) -1 (nil))

(insn 61 60 62 8 node.h:167 (set (reg:DI 2 cx)
        (reg/f:DI 78 [ D.49804 ])) -1 (nil))

(insn 62 61 63 8 node.h:167 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) -1 (nil))

(insn 63 62 64 8 node.h:167 (set (reg:DI 4 si)
        (reg/f:DI 84 [ D.49810 ])) -1 (nil))

(insn 64 63 65 8 node.h:167 (set (reg:SI 5 di)
        (reg:SI 86 [ D.14 ])) -1 (nil))

(call_insn 65 64 66 8 node.h:167 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("cblas_ddot") [flags 0x41]  <function_decl 0x7f2f6bb10e00 cblas_ddot>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
            (expr_list:REG_DEP_TRUE (use (reg:SI 1 dx))
                (expr_list:REG_DEP_TRUE (use (reg:DI 2 cx))
                    (expr_list:REG_DEP_TRUE (use (reg:SI 37 r8))
                        (nil)))))))

(insn 66 65 67 8 node.h:167 (set (reg:DF 87 [ D.49813 ])
        (reg:DF 21 xmm0)) -1 (nil))

(insn 67 66 68 8 node.h:167 (set (reg:DF 21 xmm0)
        (reg:DF 87 [ D.49813 ])) -1 (nil))

(call_insn 68 67 69 8 node.h:167 (set (reg:DF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sigmoid") [flags 0x3]  <function_decl 0x7f2f6c26ec00 sigmoid>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
        (nil)))

(insn 69 68 70 8 node.h:167 (set (reg:DF 88 [ D.49814 ])
        (reg:DF 21 xmm0)) -1 (nil))

(insn 70 69 71 8 node.h:167 (set (mem:DF (reg/f:DI 72 [ D.49798 ]) [0 S8 A64])
        (reg:DF 88 [ D.49814 ])) -1 (nil))

(insn 71 70 72 8 node.h:165 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 8 -> ( 9)

;; Succ edge  9 (fallthru)

;; Start of basic block ( 7 8) -> 9
;; Pred edge  7
;; Pred edge  8 (fallthru)
(code_label 72 71 73 9 51 "" [1 uses])

(note 73 72 74 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 74 73 76 9 node.h:165 (set (reg:SI 64 [ network_size.15 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 76 74 77 9 node.h:165 (set (reg:CC 17 flags)
        (compare:CC (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (reg:SI 64 [ network_size.15 ]))) -1 (nil))

(jump_insn 77 76 78 9 node.h:165 (set (pc)
        (if_then_else (ltu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 75)
            (pc))) -1 (nil)
 -> 75)
;; End of basic block 9 -> ( 8 10)

;; Succ edge  8
;; Succ edge  10 (fallthru)

;; Start of basic block ( 9) -> 10
;; Pred edge  9 (fallthru)
(note 78 77 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 79 78 80 10 node.h:172 (set (reg/f:DI 89 [ D.49816 ])
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <string_cst 0x7f2f6b9c8f30>)) -1 (nil))

(insn 80 79 81 10 node.h:172 (set (reg:SI 108)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32])) -1 (nil))

(insn 81 80 82 10 node.h:172 (set (reg:SI 4 si)
        (reg:SI 108)) -1 (nil))

(insn 82 81 83 10 node.h:172 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.49816 ])) -1 (nil))

(insn 83 82 84 10 node.h:172 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 84 83 85 10 node.h:172 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (nil)))))

(insn 85 84 86 10 node.h:173 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 86 85 87 10 node.h:173 (set (pc)
        (label_ref 110)) -1 (nil)
 -> 110)
;; End of basic block 10 -> ( 12)

;; Succ edge  12

(barrier 87 86 114)

;; Start of basic block ( 12) -> 11
;; Pred edge  12
(code_label 114 87 88 11 54 "" [1 uses])

(note 88 114 89 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 89 88 90 11 node.h:176 (set (reg/f:DI 92 [ network.16 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

(insn 90 89 91 11 node.h:176 (set (reg:DI 93 [ D.49818 ])
        (zero_extend:DI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 t+0 S4 A32]))) -1 (nil))

(insn 91 90 92 11 node.h:176 (parallel [
            (set (reg:DI 94 [ D.49819 ])
                (ashift:DI (reg:DI 93 [ D.49818 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 92 91 93 11 node.h:176 (parallel [
            (set (reg/f:DI 95 [ D.49820 ])
                (plus:DI (reg/f:DI 92 [ network.16 ])
                    (reg:DI 94 [ D.49819 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 93 92 94 11 node.h:176 (set (reg/f:DI 96 [ D.49821 ])
        (mem/f:DI (reg/f:DI 95 [ D.49820 ]) [0 S8 A64])) -1 (nil))

(insn 94 93 95 11 node.h:176 (set (reg:SI 97 [ network_size.17 ])
        (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])) -1 (nil))

(insn 95 94 96 11 node.h:176 (parallel [
            (set (reg:SI 98 [ D.49823 ])
                (minus:SI (reg:SI 97 [ network_size.17 ])
                    (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 96 95 97 11 node.h:176 (parallel [
            (set (reg:SI 99 [ D.49824 ])
                (plus:SI (reg:SI 98 [ D.49823 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 97 96 98 11 node.h:176 (set (reg:DI 100 [ D.49825 ])
        (zero_extend:DI (reg:SI 99 [ D.49824 ]))) -1 (nil))

(insn 98 97 99 11 node.h:176 (parallel [
            (set (reg:DI 101 [ D.49826 ])
                (ashift:DI (reg:DI 100 [ D.49825 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 99 98 100 11 node.h:176 (parallel [
            (set (reg/f:DI 102 [ D.49827 ])
                (plus:DI (reg/f:DI 96 [ D.49821 ])
                    (reg:DI 101 [ D.49826 ])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

(insn 100 99 101 11 node.h:175 (set (reg:DF 103 [ D.49828 ])
        (mem:DF (reg/f:DI 102 [ D.49827 ]) [0 S8 A64])) -1 (nil))

(insn 101 100 102 11 node.h:175 (set (reg:SI 109)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) -1 (nil))

(insn 102 101 103 11 node.h:175 (parallel [
            (set (reg:SI 104 [ D.49829 ])
                (plus:SI (reg:SI 109)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 103 102 104 11 node.h:175 (set (reg/f:DI 105 [ D.49830 ])
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <string_cst 0x7f2f6b9c8f60>)) -1 (nil))

(insn 104 103 105 11 node.h:175 (set (reg:DF 21 xmm0)
        (reg:DF 103 [ D.49828 ])) -1 (nil))

(insn 105 104 106 11 node.h:175 (set (reg:SI 4 si)
        (reg:SI 104 [ D.49829 ])) -1 (nil))

(insn 106 105 107 11 node.h:175 (set (reg:DI 5 di)
        (reg/f:DI 105 [ D.49830 ])) -1 (nil))

(insn 107 106 108 11 node.h:175 (set (reg:QI 0 ax)
        (const_int 1 [0x1])) -1 (nil))

(call_insn 108 107 109 11 node.h:175 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:SI 4 si))
                (expr_list:REG_DEP_TRUE (use (reg:DF 21 xmm0))
                    (nil))))))

(insn 109 108 110 11 node.h:173 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 11 -> ( 12)

;; Succ edge  12 (fallthru)

;; Start of basic block ( 10 11) -> 12
;; Pred edge  10
;; Pred edge  11 (fallthru)
(code_label 110 109 111 12 53 "" [1 uses])

(note 111 110 112 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 112 111 113 12 node.h:173 (set (reg:SI 90 [ output_list_size.18 ])
        (mem/c/i:SI (symbol_ref:DI ("output_list_size")  <var_decl 0x7f2f6c4b8dc0 output_list_size>) [0 output_list_size+0 S4 A32])) -1 (nil))

(insn 113 112 115 12 node.h:173 (set (reg:SI 91 [ output_list_size.19 ])
        (reg:SI 90 [ output_list_size.18 ])) -1 (nil))

(insn 115 113 116 12 node.h:173 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 91 [ output_list_size.19 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 116 115 117 12 node.h:173 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 114)
            (pc))) -1 (nil)
 -> 114)
;; End of basic block 12 -> ( 11 13)

;; Succ edge  11
;; Succ edge  13 (fallthru)

;; Start of basic block ( 6 12) -> 13
;; Pred edge  6
;; Pred edge  12 (fallthru)
(code_label 117 116 118 13 50 "" [1 uses])

(note 118 117 119 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 13 -> ( 14)

;; Succ edge  14 (fallthru)

;; Start of basic block ( 13) -> 14
;; Pred edge  13 (fallthru)
(code_label 119 118 120 14 47 "" [0 uses])

(note 120 119 0 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
;; End of basic block 14 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)


;; Function main (main)

main (const int argc, const char * * argv)
{
  unsigned int i;
  unsigned int historylength.4;
  int historylength.3;
  unsigned int D.49777;
  int debug.2;
  double * * network.1;
  int debug.0;
  int D.49767;
  const char * restrict D.49766;
  const char * D.49765;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (argc_3(D) != 2)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.49765_5 = *argv_4(D);
  D.49766_6 = (const char * restrict) &"USAGE %s debug(0|1)\n"[0];
  printf (D.49766_6, D.49765_5);
  D.49767_7 = 1;
  goto <bb 14>;
  # SUCC: 14 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  debug.0_8 = debug;
  if (debug.0_8 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  __builtin_puts (&"No debugging enabled"[0]);
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (false) 5 (fallthru)
  input_list_size = 55;
  output_list_size = 15;
  historylength = 100;
  network_size = 100;
  network_init ();
  network.1_9 = network;
  if (network.1_9 == 0B)
    goto <bb 7>;
  else
    goto <bb 10>;
  # SUCC: 7 (true) 10 (false)

  # BLOCK 7
  # PRED: 6 (true)
  debug.2_10 = debug;
  if (debug.2_10 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 (true) 9 (false)

  # BLOCK 8
  # PRED: 7 (true)
  __builtin_puts (&"failed to initialize network, \t\t\t\tpossibly to do with parameters."[0]);
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 7 (false) 8 (fallthru)
  D.49767_11 = 1;
  goto <bb 14>;
  # SUCC: 14 (fallthru)

  # BLOCK 10
  # PRED: 6 (false)
  i_12 = 0;
  goto <bb 12>;
  # SUCC: 12 (fallthru)

  # BLOCK 11
  # PRED: 12 (true)
  D.49777_15 = i_1 + 1;
  network_forward (D.49777_15);
  i_16 = i_1 + 1;
  # SUCC: 12 (fallthru)

  # BLOCK 12
  # PRED: 10 (fallthru) 11 (fallthru)
  # i_1 = PHI <i_12(10), i_16(11)>
  historylength.3_13 = historylength;
  historylength.4_14 = (unsigned int) historylength.3_13;
  if (historylength.4_14 > i_1)
    goto <bb 11>;
  else
    goto <bb 13>;
  # SUCC: 11 (true) 13 (false)

  # BLOCK 13
  # PRED: 12 (false)
  network_term ();
  D.49767_17 = 0;
  # SUCC: 14 (fallthru)

  # BLOCK 14
  # PRED: 3 (fallthru) 9 (fallthru) 13 (fallthru)
  # D.49767_2 = PHI <D.49767_7(3), D.49767_11(9), D.49767_17(13)>
  return D.49767_2;
  # SUCC: EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 2 (D.49767_2 - 2 )
Partition 3 (argc_3(D) - 3 )
Partition 4 (argv_4(D) - 4 )
Partition 5 (D.49765_5 - 5 )
Partition 6 (D.49766_6 - 6 )
Partition 7 (D.49767_7 - 7 )
Partition 8 (debug.0_8 - 8 )
Partition 9 (network.1_9 - 9 )
Partition 10 (debug.2_10 - 10 )
Partition 11 (D.49767_11 - 11 )
Partition 12 (i_12 - 12 )
Partition 13 (historylength.3_13 - 13 )
Partition 14 (historylength.4_14 - 14 )
Partition 15 (D.49777_15 - 15 )
Partition 16 (i_16 - 16 )
Partition 17 (D.49767_17 - 17 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (D.49767_2 - 2 )
Partition 2 (argc_3(D) - 3 )
Partition 3 (argv_4(D) - 4 )
Partition 4 (D.49767_7 - 7 )
Partition 5 (D.49767_11 - 11 )
Partition 6 (i_12 - 12 )
Partition 7 (i_16 - 16 )
Partition 8 (D.49767_17 - 17 )


Live on entry to BB2 : argc_3(D)  argv_4(D)  

Live on entry to BB3 : argv_4(D)  

Live on entry to BB4 : 

Live on entry to BB5 : 

Live on entry to BB6 : 

Live on entry to BB7 : 

Live on entry to BB8 : 

Live on entry to BB9 : 

Live on entry to BB10 : 

Live on entry to BB11 : i_1  

Live on entry to BB12 : 

Live on entry to BB13 : 

Live on entry to BB14 : 

Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_16
(2147483646) i_1 <-> i_12

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (D.49767_2 - 2 )
Partition 2 (argc_3(D) - 3 )
Partition 3 (argv_4(D) - 4 )
Partition 4 (D.49767_7 - 7 )
Partition 5 (D.49767_11 - 11 )
Partition 6 (i_12 - 12 )
Partition 7 (i_16 - 16 )
Partition 8 (D.49767_17 - 17 )

Coalesce list: (1)i_1 & (16)i_16 [map: 0, 7] : Success -> 0
Coalesce list: (1)i_1 & (12)i_12 [map: 0, 6] : Success -> 0
Coalesce list: (2)D.49767_2 & (17)D.49767_17 [map: 1, 8] : Success -> 1
Coalesce list: (2)D.49767_2 & (11)D.49767_11 [map: 1, 5] : Success -> 1
Coalesce list: (2)D.49767_2 & (7)D.49767_7 [map: 1, 4] : Success -> 1
Coalesce list: (1)i_1 & (16)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (12)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 12 16 )
Partition 1 (D.49767_2 - 2 7 11 17 )
Partition 2 (argc_3(D) - 3 )
Partition 3 (argv_4(D) - 4 )
Partition 4 (D.49765_5 - 5 )
Partition 5 (D.49766_6 - 6 )
Partition 6 (debug.0_8 - 8 )
Partition 7 (network.1_9 - 9 )
Partition 8 (debug.2_10 - 10 )
Partition 9 (historylength.3_13 - 13 )
Partition 10 (historylength.4_14 - 14 )
Partition 11 (D.49777_15 - 15 )

main (const int argc, const char * * argv)
{
  unsigned int i;
  unsigned int historylength.4;
  int historylength.3;
  unsigned int D.49777;
  int debug.2;
  double * * network.1;
  int debug.0;
  int D.49767;
  const char * restrict D.49766;
  const char * D.49765;

  # BLOCK 2
  # PRED: ENTRY (fallthru)
  if (argc_3(D) != 2)
    goto <bb 3>;
  else
    goto <bb 4>;
  # SUCC: 3 (true) 4 (false)

  # BLOCK 3
  # PRED: 2 (true)
  D.49765_5 = *argv_4(D);
  D.49766_6 = (const char * restrict) &"USAGE %s debug(0|1)\n"[0];
  printf (D.49766_6, D.49765_5);
  D.49767_7 = 1;
  goto <bb 14>;
  # SUCC: 14 (fallthru)

  # BLOCK 4
  # PRED: 2 (false)
  debug.0_8 = debug;
  if (debug.0_8 == 0)
    goto <bb 5>;
  else
    goto <bb 6>;
  # SUCC: 5 (true) 6 (false)

  # BLOCK 5
  # PRED: 4 (true)
  __builtin_puts (&"No debugging enabled"[0]);
  # SUCC: 6 (fallthru)

  # BLOCK 6
  # PRED: 4 (false) 5 (fallthru)
  input_list_size = 55;
  output_list_size = 15;
  historylength = 100;
  network_size = 100;
  network_init ();
  network.1_9 = network;
  if (network.1_9 == 0B)
    goto <bb 7>;
  else
    goto <bb 10>;
  # SUCC: 7 (true) 10 (false)

  # BLOCK 7
  # PRED: 6 (true)
  debug.2_10 = debug;
  if (debug.2_10 != 0)
    goto <bb 8>;
  else
    goto <bb 9>;
  # SUCC: 8 (true) 9 (false)

  # BLOCK 8
  # PRED: 7 (true)
  __builtin_puts (&"failed to initialize network, \t\t\t\tpossibly to do with parameters."[0]);
  # SUCC: 9 (fallthru)

  # BLOCK 9
  # PRED: 7 (false) 8 (fallthru)
  D.49767_11 = 1;
  goto <bb 14>;
  # SUCC: 14 (fallthru)

  # BLOCK 10
  # PRED: 6 (false)
  i_12 = 0;
  goto <bb 12>;
  # SUCC: 12 (fallthru)

  # BLOCK 11
  # PRED: 12 (true)
  D.49777_15 = i_1 + 1;
  network_forward (D.49777_15);
  i_16 = i_1 + 1;
  # SUCC: 12 (fallthru)

  # BLOCK 12
  # PRED: 10 (fallthru) 11 (fallthru)
  # i_1 = PHI <i_12(10), i_16(11)>
  historylength.3_13 = historylength;
  historylength.4_14 = (unsigned int) historylength.3_13;
  if (historylength.4_14 > i_1)
    goto <bb 11>;
  else
    goto <bb 13>;
  # SUCC: 11 (true) 13 (false)

  # BLOCK 13
  # PRED: 12 (false)
  network_term ();
  D.49767_17 = 0;
  # SUCC: 14 (fallthru)

  # BLOCK 14
  # PRED: 3 (fallthru) 9 (fallthru) 13 (fallthru)
  # D.49767_2 = PHI <D.49767_7(3), D.49767_11(9), D.49767_17(13)>
  return D.49767_2;
  # SUCC: EXIT

}



;; Generating RTL for gimple basic block 2

;; if (argc_3(D) != 2)

(insn 7 6 8 test.c:8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 argc+0 S4 A32])
            (const_int 2 [0x2]))) -1 (nil))

(jump_insn 8 7 0 test.c:8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 3

;; D.49765_5 = *argv_4(D);

(insn 10 9 11 test.c:10 (set (reg/f:DI 68)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 argv+0 S8 A64])) -1 (nil))

(insn 11 10 0 test.c:10 (set (reg/f:DI 59 [ D.49765 ])
        (mem/f:DI (reg/f:DI 68) [0 S8 A64])) -1 (nil))

;; D.49766_6 = (const char * restrict) &"USAGE %s debug(0|1)\n"[0];

(insn 12 11 0 test.c:10 (set (reg/f:DI 60 [ D.49766 ])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <string_cst 0x7f2f6b9d3d90>)) -1 (nil))

;; printf (D.49766_6, D.49765_5);

(insn 13 12 14 test.c:10 (set (reg:DI 4 si)
        (reg/f:DI 59 [ D.49765 ])) -1 (nil))

(insn 14 13 15 test.c:10 (set (reg:DI 5 di)
        (reg/f:DI 60 [ D.49766 ])) -1 (nil))

(insn 15 14 16 test.c:10 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 16 15 0 test.c:10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (nil)))))

;; D.49767_7 = 1;

(insn 17 16 0 test.c:11 (set (reg:SI 58 [ D.49767 ])
        (const_int 1 [0x1])) -1 (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 20 19 21 57 "" [0 uses])

(note 21 20 0 NOTE_INSN_BASIC_BLOCK)

;; debug.0_8 = debug;

(insn 22 21 0 test.c:16 (set (reg:SI 61 [ debug.0 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.0_8 == 0)

(insn 23 22 24 test.c:16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ debug.0 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 24 23 0 test.c:16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 5

;; __builtin_puts (&"No debugging enabled"[0]);

(insn 26 25 27 test.c:16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <string_cst 0x7f2f6b9d3dc8>)) -1 (nil))

(call_insn 27 26 0 test.c:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 6

;; 

(code_label 28 27 29 59 "" [0 uses])

(note 29 28 0 NOTE_INSN_BASIC_BLOCK)

;; input_list_size = 55;

(insn 30 29 0 test.c:19 (set (mem/c/i:SI (symbol_ref:DI ("input_list_size")  <var_decl 0x7f2f6c4b8d20 input_list_size>) [0 input_list_size+0 S4 A32])
        (const_int 55 [0x37])) -1 (nil))

;; output_list_size = 15;

(insn 31 30 0 test.c:20 (set (mem/c/i:SI (symbol_ref:DI ("output_list_size")  <var_decl 0x7f2f6c4b8dc0 output_list_size>) [0 output_list_size+0 S4 A32])
        (const_int 15 [0xf])) -1 (nil))

;; historylength = 100;

(insn 32 31 0 test.c:21 (set (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])
        (const_int 100 [0x64])) -1 (nil))

;; network_size = 100;

(insn 33 32 0 test.c:22 (set (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])
        (const_int 100 [0x64])) -1 (nil))

;; network_init ();

(insn 34 33 35 test.c:23 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 35 34 0 test.c:23 (call (mem:QI (symbol_ref:DI ("network_init") [flags 0x3]  <function_decl 0x7f2f6c26ea00 network_init>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

;; network.1_9 = network;

(insn 36 35 0 test.c:24 (set (reg/f:DI 62 [ network.1 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

;; if (network.1_9 == 0B)

(insn 37 36 38 test.c:24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ network.1 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 38 37 0 test.c:24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 7

;; debug.2_10 = debug;

(insn 40 39 0 test.c:26 (set (reg:SI 63 [ debug.2 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

;; if (debug.2_10 != 0)

(insn 41 40 42 test.c:26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ debug.2 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 42 41 0 test.c:26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 0)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 8

;; __builtin_puts (&"failed to initialize network, \t\t\t\tpossibly to do with parameters."[0]);

(insn 44 43 45 test.c:26 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <string_cst 0x7f2f6b9de0c0>)) -1 (nil))

(call_insn 45 44 0 test.c:26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 9

;; 

(code_label 46 45 47 61 "" [0 uses])

(note 47 46 0 NOTE_INSN_BASIC_BLOCK)

;; D.49767_11 = 1;

(insn 48 47 0 test.c:28 (set (reg:SI 58 [ D.49767 ])
        (const_int 1 [0x1])) -1 (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 51 50 52 60 "" [0 uses])

(note 52 51 0 NOTE_INSN_BASIC_BLOCK)

;; i_12 = 0;

(insn 53 52 0 test.c:30 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 11

;; D.49777_15 = i_1 + 1;

(insn 57 56 58 test.c:32 (set (reg:SI 69)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) -1 (nil))

(insn 58 57 0 test.c:32 (parallel [
            (set (reg:SI 66 [ D.49777 ])
                (plus:SI (reg:SI 69)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; network_forward (D.49777_15);

(insn 59 58 60 test.c:32 (set (reg:SI 5 di)
        (reg:SI 66 [ D.49777 ])) -1 (nil))

(call_insn 60 59 0 test.c:32 (call (mem:QI (symbol_ref:DI ("network_forward") [flags 0x3]  <function_decl 0x7f2f6c26ed00 network_forward>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

;; i_16 = i_1 + 1;

(insn 61 60 0 test.c:30 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 62 61 63 62 "" [0 uses])

(note 63 62 0 NOTE_INSN_BASIC_BLOCK)

;; historylength.3_13 = historylength;

(insn 64 63 0 test.c:30 (set (reg:SI 64 [ historylength.3 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

;; historylength.4_14 = (unsigned int) historylength.3_13;

(insn 65 64 0 test.c:30 (set (reg:SI 65 [ historylength.4 ])
        (reg:SI 64 [ historylength.3 ])) -1 (nil))

;; if (historylength.4_14 > i_1)

(insn 67 65 68 test.c:30 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 65 [ historylength.4 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 68 67 0 test.c:30 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) -1 (nil))

;; Generating RTL for gimple basic block 13

;; network_term ();

(insn 70 69 71 test.c:34 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 71 70 0 test.c:34 (call (mem:QI (symbol_ref:DI ("network_term") [flags 0x3]  <function_decl 0x7f2f6c26eb00 network_term>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

;; D.49767_17 = 0;

(insn 72 71 0 test.c:35 (set (reg:SI 58 [ D.49767 ])
        (const_int 0 [0x0])) -1 (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 73 72 74 58 "" [0 uses])

(note 74 73 0 NOTE_INSN_BASIC_BLOCK)

;; return D.49767_2;

(insn 75 74 76 test.c:35 (set (reg:SI 67 [ <retval> ])
        (reg:SI 58 [ D.49767 ])) -1 (nil))

(jump_insn 76 75 77 test.c:35 (set (pc)
        (label_ref 0)) -1 (nil))

(barrier 77 76 0)


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)

;; Start of basic block ( 0) -> 2
;; Pred edge  ENTRY (fallthru)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)

(insn 2 5 3 2 test.c:6 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 argc+0 S4 A32])
        (reg:SI 5 di [ argc ])) -1 (nil))

(insn 3 2 4 2 test.c:6 (set (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 argv+0 S8 A64])
        (reg:DI 4 si [ argv ])) -1 (nil))

(note 4 3 6 2 NOTE_INSN_FUNCTION_BEG)
;; End of basic block 2 -> ( 3)

;; Succ edge  3 [100.0%]  (fallthru)

;; Start of basic block ( 2) -> 3
;; Pred edge  2 [100.0%]  (fallthru)
(note 6 4 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)

(insn 7 6 8 3 test.c:8 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 argc+0 S4 A32])
            (const_int 2 [0x2]))) -1 (nil))

(jump_insn 8 7 9 3 test.c:8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 20)
            (pc))) -1 (nil)
 -> 20)
;; End of basic block 3 -> ( 4 5)

;; Succ edge  4 (fallthru)
;; Succ edge  5

;; Start of basic block ( 3) -> 4
;; Pred edge  3 (fallthru)
(note 9 8 10 4 [bb 4] NOTE_INSN_BASIC_BLOCK)

(insn 10 9 11 4 test.c:10 (set (reg/f:DI 68)
        (mem/f/c/i:DI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 argv+0 S8 A64])) -1 (nil))

(insn 11 10 12 4 test.c:10 (set (reg/f:DI 59 [ D.49765 ])
        (mem/f:DI (reg/f:DI 68) [0 S8 A64])) -1 (nil))

(insn 12 11 13 4 test.c:10 (set (reg/f:DI 60 [ D.49766 ])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <string_cst 0x7f2f6b9d3d90>)) -1 (nil))

(insn 13 12 14 4 test.c:10 (set (reg:DI 4 si)
        (reg/f:DI 59 [ D.49765 ])) -1 (nil))

(insn 14 13 15 4 test.c:10 (set (reg:DI 5 di)
        (reg/f:DI 60 [ D.49766 ])) -1 (nil))

(insn 15 14 16 4 test.c:10 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 16 15 17 4 test.c:10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f2f6d752000 printf>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
            (expr_list:REG_DEP_TRUE (use (reg:DI 4 si))
                (nil)))))

(insn 17 16 18 4 test.c:11 (set (reg:SI 58 [ D.49767 ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 18 17 19 4 test.c:11 (set (pc)
        (label_ref 73)) -1 (nil)
 -> 73)
;; End of basic block 4 -> ( 15)

;; Succ edge  15

(barrier 19 18 20)

;; Start of basic block ( 3) -> 5
;; Pred edge  3
(code_label 20 19 21 5 57 "" [1 uses])

(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)

(insn 22 21 23 5 test.c:16 (set (reg:SI 61 [ debug.0 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 23 22 24 5 test.c:16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 61 [ debug.0 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 24 23 25 5 test.c:16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 28)
            (pc))) -1 (nil)
 -> 28)
;; End of basic block 5 -> ( 6 7)

;; Succ edge  6 (fallthru)
;; Succ edge  7

;; Start of basic block ( 5) -> 6
;; Pred edge  5 (fallthru)
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)

(insn 26 25 27 6 test.c:16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <string_cst 0x7f2f6b9d3dc8>)) -1 (nil))

(call_insn 27 26 28 6 test.c:16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 6 -> ( 7)

;; Succ edge  7 (fallthru)

;; Start of basic block ( 5 6) -> 7
;; Pred edge  5
;; Pred edge  6 (fallthru)
(code_label 28 27 29 7 59 "" [1 uses])

(note 29 28 30 7 [bb 7] NOTE_INSN_BASIC_BLOCK)

(insn 30 29 31 7 test.c:19 (set (mem/c/i:SI (symbol_ref:DI ("input_list_size")  <var_decl 0x7f2f6c4b8d20 input_list_size>) [0 input_list_size+0 S4 A32])
        (const_int 55 [0x37])) -1 (nil))

(insn 31 30 32 7 test.c:20 (set (mem/c/i:SI (symbol_ref:DI ("output_list_size")  <var_decl 0x7f2f6c4b8dc0 output_list_size>) [0 output_list_size+0 S4 A32])
        (const_int 15 [0xf])) -1 (nil))

(insn 32 31 33 7 test.c:21 (set (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])
        (const_int 100 [0x64])) -1 (nil))

(insn 33 32 34 7 test.c:22 (set (mem/c/i:SI (symbol_ref:DI ("network_size") [flags 0x2]  <var_decl 0x7f2f6c4b8aa0 network_size>) [0 network_size+0 S4 A32])
        (const_int 100 [0x64])) -1 (nil))

(insn 34 33 35 7 test.c:23 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 35 34 36 7 test.c:23 (call (mem:QI (symbol_ref:DI ("network_init") [flags 0x3]  <function_decl 0x7f2f6c26ea00 network_init>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

(insn 36 35 37 7 test.c:24 (set (reg/f:DI 62 [ network.1 ])
        (mem/f/c/i:DI (symbol_ref:DI ("network")  <var_decl 0x7f2f6c4b8be0 network>) [0 network+0 S8 A64])) -1 (nil))

(insn 37 36 38 7 test.c:24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 62 [ network.1 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 38 37 39 7 test.c:24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 51)
            (pc))) -1 (nil)
 -> 51)
;; End of basic block 7 -> ( 8 11)

;; Succ edge  8 (fallthru)
;; Succ edge  11

;; Start of basic block ( 7) -> 8
;; Pred edge  7 (fallthru)
(note 39 38 40 8 [bb 8] NOTE_INSN_BASIC_BLOCK)

(insn 40 39 41 8 test.c:26 (set (reg:SI 63 [ debug.2 ])
        (mem/c/i:SI (symbol_ref:DI ("debug") [flags 0x2]  <var_decl 0x7f2f6c4b8b40 debug>) [0 debug+0 S4 A32])) -1 (nil))

(insn 41 40 42 8 test.c:26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 63 [ debug.2 ])
            (const_int 0 [0x0]))) -1 (nil))

(jump_insn 42 41 43 8 test.c:26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0x0]))
            (label_ref 46)
            (pc))) -1 (nil)
 -> 46)
;; End of basic block 8 -> ( 9 10)

;; Succ edge  9 (fallthru)
;; Succ edge  10

;; Start of basic block ( 8) -> 9
;; Pred edge  8 (fallthru)
(note 43 42 44 9 [bb 9] NOTE_INSN_BASIC_BLOCK)

(insn 44 43 45 9 test.c:26 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <string_cst 0x7f2f6b9de0c0>)) -1 (nil))

(call_insn 45 44 46 9 test.c:26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("puts") [flags 0x41]  <function_decl 0x7f2f6d752700 __builtin_puts>) [0 S1 A8])
            (const_int 0 [0x0]))) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:DI 5 di))
        (nil)))
;; End of basic block 9 -> ( 10)

;; Succ edge  10 (fallthru)

;; Start of basic block ( 8 9) -> 10
;; Pred edge  8
;; Pred edge  9 (fallthru)
(code_label 46 45 47 10 61 "" [1 uses])

(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)

(insn 48 47 49 10 test.c:28 (set (reg:SI 58 [ D.49767 ])
        (const_int 1 [0x1])) -1 (nil))

(jump_insn 49 48 50 10 test.c:28 (set (pc)
        (label_ref 73)) -1 (nil)
 -> 73)
;; End of basic block 10 -> ( 15)

;; Succ edge  15

(barrier 50 49 51)

;; Start of basic block ( 7) -> 11
;; Pred edge  7
(code_label 51 50 52 11 60 "" [1 uses])

(note 52 51 53 11 [bb 11] NOTE_INSN_BASIC_BLOCK)

(insn 53 52 54 11 test.c:30 (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0x0])) -1 (nil))

(jump_insn 54 53 55 11 test.c:30 (set (pc)
        (label_ref 62)) -1 (nil)
 -> 62)
;; End of basic block 11 -> ( 13)

;; Succ edge  13

(barrier 55 54 66)

;; Start of basic block ( 13) -> 12
;; Pred edge  13
(code_label 66 55 56 12 63 "" [1 uses])

(note 56 66 57 12 [bb 12] NOTE_INSN_BASIC_BLOCK)

(insn 57 56 58 12 test.c:32 (set (reg:SI 69)
        (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) -1 (nil))

(insn 58 57 59 12 test.c:32 (parallel [
            (set (reg:SI 66 [ D.49777 ])
                (plus:SI (reg:SI 69)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (expr_list:REG_EQUAL (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

(insn 59 58 60 12 test.c:32 (set (reg:SI 5 di)
        (reg:SI 66 [ D.49777 ])) -1 (nil))

(call_insn 60 59 61 12 test.c:32 (call (mem:QI (symbol_ref:DI ("network_forward") [flags 0x3]  <function_decl 0x7f2f6c26ed00 network_forward>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:SI 5 di))
        (nil)))

(insn 61 60 62 12 test.c:30 (parallel [
            (set (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) -1 (nil))
;; End of basic block 12 -> ( 13)

;; Succ edge  13 (fallthru)

;; Start of basic block ( 11 12) -> 13
;; Pred edge  11
;; Pred edge  12 (fallthru)
(code_label 62 61 63 13 62 "" [1 uses])

(note 63 62 64 13 [bb 13] NOTE_INSN_BASIC_BLOCK)

(insn 64 63 65 13 test.c:30 (set (reg:SI 64 [ historylength.3 ])
        (mem/c/i:SI (symbol_ref:DI ("historylength") [flags 0x2]  <var_decl 0x7f2f6c4b8a00 historylength>) [0 historylength+0 S4 A32])) -1 (nil))

(insn 65 64 67 13 test.c:30 (set (reg:SI 65 [ historylength.4 ])
        (reg:SI 64 [ historylength.3 ])) -1 (nil))

(insn 67 65 68 13 test.c:30 (set (reg:CC 17 flags)
        (compare:CC (reg:SI 65 [ historylength.4 ])
            (mem/c/i:SI (plus:DI (reg/f:DI 54 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32]))) -1 (nil))

(jump_insn 68 67 69 13 test.c:30 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0x0]))
            (label_ref 66)
            (pc))) -1 (nil)
 -> 66)
;; End of basic block 13 -> ( 12 14)

;; Succ edge  12
;; Succ edge  14 (fallthru)

;; Start of basic block ( 13) -> 14
;; Pred edge  13 (fallthru)
(note 69 68 70 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(insn 70 69 71 14 test.c:34 (set (reg:QI 0 ax)
        (const_int 0 [0x0])) -1 (nil))

(call_insn 71 70 72 14 test.c:34 (call (mem:QI (symbol_ref:DI ("network_term") [flags 0x3]  <function_decl 0x7f2f6c26eb00 network_term>) [0 S1 A8])
        (const_int 0 [0x0])) -1 (nil)
    (expr_list:REG_DEP_TRUE (use (reg:QI 0 ax))
        (nil)))

(insn 72 71 73 14 test.c:35 (set (reg:SI 58 [ D.49767 ])
        (const_int 0 [0x0])) -1 (nil))
;; End of basic block 14 -> ( 15)

;; Succ edge  15 (fallthru)

;; Start of basic block ( 4 10 14) -> 15
;; Pred edge  4
;; Pred edge  10
;; Pred edge  14 (fallthru)
(code_label 73 72 74 15 58 "" [2 uses])

(note 74 73 75 15 [bb 15] NOTE_INSN_BASIC_BLOCK)

(insn 75 74 76 15 test.c:35 (set (reg:SI 67 [ <retval> ])
        (reg:SI 58 [ D.49767 ])) -1 (nil))

(jump_insn 76 75 77 15 test.c:35 (set (pc)
        (label_ref 78)) -1 (nil)
 -> 78)
;; End of basic block 15 -> ( 17)

;; Succ edge  17

(barrier 77 76 83)

;; Start of basic block () -> 16
(note 83 77 80 16 [bb 16] NOTE_INSN_BASIC_BLOCK)

(insn 80 83 81 16 test.c:36 (clobber (reg/i:SI 0 ax)) -1 (nil))

(insn 81 80 78 16 test.c:36 (clobber (reg:SI 67 [ <retval> ])) -1 (nil))
;; End of basic block 16 -> ( 17)

;; Succ edge  17 (fallthru)

;; Start of basic block ( 15 16) -> 17
;; Pred edge  15
;; Pred edge  16 (fallthru)
(code_label 78 81 84 17 56 "" [1 uses])

(note 84 78 79 17 [bb 17] NOTE_INSN_BASIC_BLOCK)

(insn 79 84 82 17 test.c:36 (set (reg/i:SI 0 ax)
        (reg:SI 67 [ <retval> ])) -1 (nil))

(insn 82 79 0 17 test.c:36 (use (reg/i:SI 0 ax)) -1 (nil))
;; End of basic block 17 -> ( 1)

;; Succ edge  EXIT [100.0%]  (fallthru)

